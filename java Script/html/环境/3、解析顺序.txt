javascript变量作用域和预解析；

一、变量的作用域
    1.全局变量
      在代码中任何地方都能够访问得到的变量，拥有全局的作用域。
        A.最外层函数外面定义的变量。
        B.没有定义直接赋值的变量，拥有全局属性。

  2.局部变量
      只能在固定的代码片段(函数片段中)中访问得到。
        A.函数内部定义的变量，就是局部变量。
        B.参数也是局部变量。 
  ******************************************
   可以提高程序的逻辑性和安全性，减少名字的冲突。******************************************

二、环境
1.宿主环境：(js代码依附的环境，即浏览器)
2.执行环境：即作用域  (是变量与函数的可访问范围)
A、全局环境：即全局作用域，在代码的任何地方都能访问到的对象；
B、局部环境：即局部作用域，一般只在固定的代码片段内可访问到，最常见的如函数内部，所有在一些地方也会看到有人把这种作用域称为函数作用域；

C、作用域链
    在一个执行环境中有权访问的变量和函数能够有序有机的进行访问
（函数里面的可以访问外面的，但外面无法访问到里面的）
var a=10;
   function aa(){
       var b=5;
    function bb(){
    	var a=3;
    	alert(a)
    }bb()
    }
   aa()
	alert（b）

三、javascript预解析顺序
1、概念：
把变量或函数预先解析到它们被使用的环境中；

2、步骤：（浏览器在正式运行js代码前）
（1）预先根据关键字var function等，来查找一些需要被解析的东西；
（2）给需要解析的东西提前赋值；
a、变量赋值为undefined；
b、函数赋值为整个函数块；
（3）'预解析'结束后，代码正常执行，并通过= + - * ++ --来修改'预解析'的值；

3、解析原则：
（1）js预解析过程中，遇到重名的内容，只保留一个；
a、重名变量或重名函数保留最后的一个；
b、变量与函数重名保留函数；
（2）查找原则：从上到下，从里到外；
【即先找局部作用域，后找全局作用域】



    

 