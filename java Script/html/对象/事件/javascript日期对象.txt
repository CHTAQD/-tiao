日期对象

GMT：格林尼治时间（世界标准时间）
UTC：世界协调时（用来协调地球自转引起的差异）
js中采用UTC,即1970,1,1,0,0,0,0所经过的毫秒数，之前为负，之后为正，取值范围是285616年（一亿天）；

在javascript中日期也是他的内置对象，所以我们要对日期进行获取和操作，必须实例化对象。

1.创建日期对象
  var dateobj=new Date();

  A、不传参数时：
      包含本地时间的信息，包括年月日时分秒 星期 
    例：var date=new Date()
  B、传入的参数格式：
     1."时:分:秒 月/日/年"         "月/日/年 时:分:秒" 字符串
    例： var date=new Date("10:45:32 11/27/2015")
            var date=new Date("11/27/2015 10:45:32")
     2.年,月,日,时,分,秒  不能加""
     注意:月份和星期都是从0开始计算的
    例：var date=new Date(2016,11,29,16,27,30)


2.获取日期信息的方法
【都为Date 对象方法】
方法
Date() 返回当日的日期和时间。 
getDate() 从 Date 对象返回一个月中的某一天 (1 ~ 31)。 
getDay() 从 Date 对象返回一周中的某一天 (0 ~ 6)。 
【 星期日为0 】
getMonth() 从 Date 对象返回月份 (0 ~ 11)。
getFullYear() 从 Date 对象以四位数字返回年份。 
getYear() 请使用 getFullYear() 方法代替。
【现在的时间减去1900年】
getHours() 返回 Date 对象的小时 (0 ~ 23)。 
getMinutes() 返回 Date 对象的分钟 (0 ~ 59)。 
getSeconds() 返回 Date 对象的秒数 (0 ~ 59)。 
getMilliseconds() 返回 Date 对象的毫秒(0 ~ 999)。 
getTime() 返回 1970 年 1 月 1 日至今的毫秒数。 
getTimezoneOffset() 返回本地时间与格林威治标准时间 (GMT) 的分钟差。 

例：
//var time=new Date()
// var date=time.getDate()
//var day=time.getDay()
// var month=time.getMonth()+1
//var year=time.getFullYear()//2016
//var year=time.getYear() //116   1970
// var hour=time.getHours()
// var min=time.getMinutes()
// var sec=time.getSeconds()
// var minsec=time.getMilliseconds()
// var maxsec=time.getTime()
// var aa=time.getTimezoneOffset()

3.设置日期的方法
setDate() 设置 Date 对象中月的某一天 (1 ~ 31)。
setMonth() 设置 Date 对象中月份 (0 ~ 11)。 
setFullYear() 设置 Date 对象中的年份（四位数字）。 
setYear() 请使用 setFullYear() 方法代替。 
setHours() 设置 Date 对象中的小时 (0 ~ 23)。 
setMinutes() 设置 Date 对象中的分钟 (0 ~ 59)。 
setSeconds() 设置 Date 对象中的秒钟 (0 ~ 59)。
setMilliseconds() 设置 Date 对象中的毫秒 (0 ~ 999)。 
setTime() 以毫秒设置 Date 对象。 
setUTCDate() 根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。 
setUTCMonth() 根据世界时设置 Date 对象中的月份 (0 ~ 11)。 
setUTCFullYear() 根据世界时设置 Date 对象中的年份（四位数字）。 
setUTCHours() 根据世界时设置 Date 对象中的小时 (0 ~ 23)。
setUTCMinutes() 根据世界时设置 Date 对象中的分钟 (0 ~ 59)。 
setUTCSeconds() 根据世界时设置 Date 对象中的秒钟 (0 ~ 59)。
setUTCMilliseconds() 根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。 




