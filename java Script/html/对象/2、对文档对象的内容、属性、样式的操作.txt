javascript-对文档对象的内容、属性、样式的操作

一、操作内容
    1.innerHTML  用来设置或获取对象起始和结束标签内的内容(识别html标签)  
    2.innerText  用来设置或获取对象起始和结束标签内的内容

区别： innerHTML识别html标签；而innerText只识别标签里的内容；
   案例：写评论向上提交；


二、操作属性
    1.直接操作
      对象.属性  
      对象.属性=值  (设置、获取、添加属性(属性值))
      案例：全选

   2.getAttribute("属性")  获取给定的属性的值
     setAttribute("属性","值")  设置或是添加属性
     hasAttribute("属性")    当前元素节点是否包含指定属性，返回布尔值
     removeAttribute("属性") 从当前元素节点移除属性。
     案例：图片选项卡制作

二者区别：
（1）适用性
getAttribute()和setAttribute()对所有属性（包括用户自定义的属性）都适用；直接操作属性的方法，只适用于标准属性。
（2）返回值
getAttribute()只返回字符串，不会返回其他类型的值。直接操作属性的方法会返回各种类型的值，包括字符串、数值、布尔值或对象。
（3）属性名
setAttribute()只接受属性的标准名称，不用改写保留字，比如for和class都可以直接使用。另外，这些方法对于属性名是大小写不敏感的。

案例：批量更改添加一个类名，点击让样式变化；


三、操作样式
   1.行内样式
     对象.style.属性
     对象.style.属性=值   (设置、获取、添加属性)
 ******************************************
     遇到属性是"-"连接的，要将"-"去掉，后面的单词的首字母      大写；
    如果CSS属性名是JavaScript保留字，则规则名之前需要加   上字符串css，比如float写成cssFloat。
 ******************************************
   案例：鼠标移入移出样式变化
   案例：选项卡
  
   2、cssText属性：可以设置多个css样式；
例：
a.style.cssText='display:block;width:100px;height:100px;background-color:green;'
   
  3、获取样式方式
  IE   用来获得实际的样式属性：
        对象.currentStyle.属性  
  FF  用来获得实际的样式属性：   
        getComputedStyle(对象,null).属性  
   *******************************
     只能获取不能设置
   *******************************
   兼容函数：
function getStyle(obj,attr){
if(document.getElementsByClassName){
return getComputedStyle(obj,null)[attr];
}else{
return obj.currentStyle[attr];
}
}
案例：小球慢慢变大 