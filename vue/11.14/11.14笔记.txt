在vue中的函数

在vue的包里面有es6语法解析器，

所以，一般在没有解析器的环境下，不要使用es6的语法

es6的箭头函数

箭头函数不要跟分号

箭头函数的优点

1.简化js'代码

2.可以清楚的搞定this指向问题



箭头函数的语法结构

如果只传一个参数或不传参数可以直接

参数名=>返回值

2.如果要传两个或更多参数，就要加小括号和大括号


箭头函数的this指向继承自其父级作用域的this指向







坑：
2.箭头函数不要跟分号

2.箭头函数不在一行就会出bug



在es5中我们知道只有函数才能划分作用域

但是，在es6中不是，es6引入了块级作用域的概念呢，就是{}既可以用来划分作用域

所以如果在箭头函数中，返回值是一个对象，类似于这种形式

x=>{name:x}

就要写成

x =>({name:x})

的形式这是为区分作用域，指明此处的{}不是用来划分作用域的，仅仅表示一个对象

call和apply是没有办法改变箭头函数this的指向

阻止a标签的默认行为

1.

<a   href="javascript:void(0)">

点击之后不跳转

2.空链("#","##","#!")

3.在a标签的事件处理函数中写入return  false 就可以阻止a标签默认行为的目的

4.通过利用a标签的事件对象的一种es5中新增特性preventDefault 属性，来实现阻止a标签默认的跳转行为方法

vue中事件对象的修饰符


在表单form标签中的按钮被点击的时候会触发默认刷新页面的行为，如果想要阻止默认行为的触发，return false是不行的
（）
必须使用事件对象。preventDefault （）属性才可以解决

vue中给我们提供的事件对象修饰符可以帮助解决阻止默认行为的问题，

在事件v-on:click.prevent.stop="haha(参数)"

v-on:事件名=""事件处理函数（实参）

可以改成@事件名 = “事件处理函数（实参）"










