From: =?gb2312?B?08kgV2luZG93cyBJbnRlcm5ldCBFeHBsb3JlciA4ILGjtOY=?=
Subject: =?gb2312?B?R29vZ2xlILet0us=?=
Date: Fri, 10 Dec 2010 17:57:24 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_NextPart_000_0070_01CB9893.B382CF60"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16385

这是 MIME 格式的多方邮件。

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.google.com.hk/intl/zh-CN/images/logos/translate_logo_sm.gif

R0lGODlhcAAeAPf6AABsCgJ0DAN4DbEULbEoOskOK8cRK9gWLtMbNuIdMscrO9klNukoNu40P/I2
O+B0AdB9LcAzROQ6R/I8QKxXXrRUXLdvctFMUdhKVfRIR+lRVPRZVe9iXvhlXMxcZc1ub9pydeho
aupxcPF8dgWVEgitIwyzJhS5J06MV1yUZnSnfjjKSF7PZ+eEBfGVBe2bEvmkCP+uC/GgE/+zFf62
GtyZPOuYIvy7Kva4NPzDOc+WUdGhXeyyVPaEe9eoZtezd+e5ZPnFSPTGWv7QXO/DZPnLZPzTaAYq
twksuhI3uxw9vxlBvSJEvjVNtTFNukBXsFlssWl7uh0/wB5AwCJDwSRKwCtKwzVTxTpZxzdYyjtb
yzte0j9iyD5j1T5k2UJewkFdykRiy0lnyEplykxqzFRrwVFqzF52x1JwzV11zkJl00Zs2EFp3Utx
2lx00Vh41GN70Wh/00Nt4kp25VJ85NJ6gG6DvXeHvHrTiG6DxnWJxmyD1WmG2XWK13mN13mP2H6T
1leF6mWK52mQ6Xea532h7ZGcvJ6lubG4u8qPkO6Jh+aXl/mflMWogvmlm8+rpca6udS9vO6jpvW3
rue3tfa6sovQmLfAuLjAua3Ts6rkr7bjv7rlve3RmdvJr8/GufDUtf3nroWWw4aa1oOV2oyd3Zik
yo6g3Jup0pOk3Z2t26SuyqeyzbS4w6i12bK814Gc5Iel6pam4Jyr4Zar6Jqx6Zm49KCs4aSy46q3
5a255qi+7LG45bO+6KO/9bvAzLnC2bXiwLzmwrTB6rvF6r7K66/F87TI88XHzM3NztnIxt3VwsTK
19TU1NXX3tzc3OfHxfnMw+PYxPjUzePd2vrc1tvm3vzuyPnq1/vx2MPM68vT5srS7tfb5tXb7crV
887a9dTb9dPc9Nnf893h6dzj9tnj+eTk5Ofl5uvr6/ro5fPt7Pzt6+vy7v336eLj9OXp9evt9ubq
+Oru+e7x9u7x+vT09Prz8vj29vP0+////wAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABwAB4A
AAj+APUJHEiwoMGDCBMqJNhOkyU8lhZKnEixYDljtGIVirULXL6KIBfa48RiBQlL9kKqDGmOkKBU
r4C9SvVmTqBY41bqHLjphABM5/DtHHrQ15xUzp6dW3ruGSo1WsgEJRqSk09E56hq1WdrDqtmz9LZ
w0fWXjpUTRA9S7l1ojCfmNK1HXosEKBkaw9uY9Zs6tyFb3/KVZmvsLxy9RLmm0ewsOOB9QaxadWM
7UGzQgmyqzZtmrqE7rJdu+Yu5NsAcTVzrnYv4Tc3ZsJcuZIq1R4/s/bs0SZQl5Z3+ubFSeOmeJpZ
Ao0FSoMsK8hpPUaEyCCCUmaCoYoYEXIjSKfrAuv+HasVqzyhQcXinU4tMFr0DRoUrUP4DtAsK7d0
ccv1h0qpUv4JVA4VcNiTjx9I9JEKIEiQEhwhc+SRzGAUObIBNEspI8EEIcwnkDtDEEHNUtLgQEMQ
FH4jCDHbzDLHHKMwg449wZiA2mCMcDDiOSM0gEE64AkEzxi5kDELGL2EY08Ys9gDRykD5bLHR/iM
4Yc+pFgBnDmByKFHZRU54oAyYZmlDAMMgDCYETiAJZY90swQAxByhRMIMEqlowobavwSVI0ApFZJ
BmSKdQ4DBiTiHEG5MMFEEkwoQQoYuogxBilpQJlPPflc540VYVBRjEDg0CFHHmBOhE0HHiTjFz7+
ICRwQCT2hJKDD81QaI8QMbjgiT2FzIHMWvikQ4cXemQVTAmBpsNOBxr0hY86iihgASR+DTSPNlcg
sUQq8cCxh5VmmAHlHlhgMYw++YwjCxNHVDHLO/mIY+oZqUrkSAYf5KsPNAkUYME5RtyAq2X6hNKr
D+R02cqisHgRxTP4cMJsXNHAlwwo0j3yDFgIC6TNGHuEsccVxOjyxxi3kGKuPsXch1wxVFDRhy59
WEGFLuWYGgYyISc0ggMe+LvOAgVU8EwQNOyQ10DZ9KpDN6aasmgtW9xR2bLNTpLBBY8sguE56Ihl
UD57kBLPGNpwM067VhCjzxhQCsRkcL3A483+FfDA0wtisMjhhSkUDiQPLYQkzsco3oTgwAX+6iNB
ARQ8k8MMNfh7Dw0t6PCMIHK8QbFAsVzRCsVcxzXJBAtgm45YQRIkDhxuLDEGHL3o08cR3GhzRN35
3K3PLLEhMYYZpHykDRtsoDE6QeFos40qbVyxyjmKMNB64ZIPkMgzRczwgjII3zPDA408s40aXQCC
jj7grMGKq/pY3Ow0aH5wTtAGcSOFKlggxaV4QQUrFOkIpxBI8JCjD23Iwg9JIIUscqcPfPDBC14A
BPf0YZZXqMEJhzgHwBKgP4LcYwEDQAQ1QAEDGPygcNmAAQQ+EZRt6AENiZsDMPqSkmXd6B7+GtAe
+STCDUldoWRx0EIpxsAFOLyMXUx6xzjahgsl9KJ38BCIN8LQBS+cgn/F+GAI7QGCAyxgiAKRRAES
MSF8AMEFMliGZYrQAkiACR9NUQUd2tCczCxLAJeQCzQOkAAJQOM67GhNQYroByvEAQt+4EY8wJAK
ejxJgccLQ5Z0hoQC7kwg+GBGGLTghT54I0jFyEITQoiPdXjAAAugxDrYIQkEsHEq9vBBC2TQCWxk
owg28IS0BmIPbciBDXvoRmYsQQIApCATQEqEAQpwgBAsYhEhgIYiCcINK2gDC7hIg4PggTJ9oAF4
YkBCKvIhj3kUYwqSlMdHQNkNOzghC13+4AMuisGNYtQCDU+AwsMEko5HVCACF/BAHci0v4GkwxM+
qAEPgNCJZzxjRgMpx3jUsAUvvEGZ+rBEClCAAhVYAx/2iEQFCDAAAnhAGWZbZBLQQIY0+KcYYIib
G6SQi4FwY10D+QYVynGQYjHDEFGAQhnOoIdRoIIveLGMPZqilKUAqSBTtehSypYZcAiCD6oABjNE
QUo0BKVYTWkoB8/RjLb25aoFmccwHKMNccADF9qohy56Mc+DzEMXfTVIVtuqVavGdCAotYdiY4dY
xY5lIMc4ilbTcY5XhCELhKsgWcjSWLMs9i8VSaxjH/sXeQSiDXgBUllckYU7OIOxoI1r7V++MQcy
TKgg48iCIZ4n296CVhxs8MIquDeML/TRt8idSz4AoQU1qAIeQsnHMMiApw0m97o6sYcpxLCFNbyB
D4tLSrawS16dpOMVoriDHUTBCmecA67lje9KzELZ95JWvvjNr373y1+FBAQAOw==

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_0073_01CB9893.B382F670"


------=_NextPart_001_0073_01CB9893.B382F670
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://translate.google.com.hk/translate?hl=zh-CN&sl=en&tl=zh-CN&u=http%3A%2F%2Fwww.jstree.com%2Fdemo%2F

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN">
<HTML><HEAD><TITLE>Google =E7=BF=BB=E8=AF=91</TITLE>
<META content=3D"text/html; charset=3DUTF-8" http-equiv=3Dcontent-type>
<META name=3Dgoogle content=3Dnotranslate>
<META name=3DGENERATOR content=3D"MSHTML =
8.00.7600.16385"></HEAD><FRAMESET=20
frameSpacing=3D0 cols=3D* frameBorder=3D1 rows=3D65,*><FRAME noResize =
marginHeight=3D0=20
src=3D"http://translate.google.com.hk/translate_n?hl=3Dzh-CN&amp;sl=3Den&=
amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/demo/"=20
name=3Dn marginWidth=3D0 scrolling=3Dno><FRAME=20
src=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp;=
sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation/json_d=
ata&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhik7AVTY8ehnwEs1NGw=
8B40OLu7-w"=20
name=3Dc><NOFRAMES></NOFRAMES></FRAMESET></HTML>

------=_NextPart_001_0073_01CB9893.B382F670
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://translate.google.com.hk/translate_n?hl=zh-CN&sl=en&tl=zh-CN&u=http://www.jstree.com/demo/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META content=3Dtext/html;charset=3DUTF-8 http-equiv=3Dcontent-type>
<STYLE>BODY {
	FONT-FAMILY: arial,sans-serif
}
TD {
	FONT-FAMILY: arial,sans-serif
}
DIV {
	FONT-FAMILY: arial,sans-serif
}
INPUT {
	FONT-FAMILY: arial,sans-serif
}
.p {
	FONT-FAMILY: arial,sans-serif
}
A {
	FONT-FAMILY: arial,sans-serif
}
FORM {
	DISPLAY: inline
}
INPUT {
	VERTICAL-ALIGN: middle
}
TABLE {
	FONT-SIZE: 12px
}
TD.side {
	TEXT-ALIGN: right
}
BODY {
	MARGIN-BOTTOM: 6px
}
SELECT {
	FONT-SIZE: 12px
}
#dlink {
	COLOR: #900; FONT-SIZE: 90%; FONT-WEIGHT: bold
}
</STYLE>

<SCRIPT>var =
tn_a=3Dwindow,tn_b=3Ddocument,tn_=3D"getElementById",tn_c=3D"value",tn_d=3D=
"length";tn_a.top.gtcomm||(tn_a.top.gtcomm=3D{});tn_a.top.gtcomm._updaten=
=3Dfunction(b){return =
function(a,c,e,d,f){if(c=3Db[tn_]("old_sl")){a=3Da=3D=3D"un"||a=3D=3D"aut=
o"?d:a;for(d=3D0;d<c.options[tn_d];++d)if(c.options[d][tn_c]=3D=3Da){c.se=
lectedIndex=3Dc.options[d].index;break}}if(a=3Db[tn_]("vieworig")){a=3Da.=
getElementsByTagName("a");if(a[tn_d]>0)a[0].href=3Df}if(a=3Db[tn_]("newu"=
))a.value=3Df}}(tn_b);=0A=
function tn_e(b){for(var =
a=3Dtn_a.location.search.substring(1).split("&"),c=3D0;c<a[tn_d];c++){var=
 e=3Da[c].split("=3D");if(e[0].toLowerCase()=3D=3Db&&e[tn_d]>0)return =
decodeURIComponent(e[1])}return""}=0A=
function tn_f(){var =
b=3D"/translate?";if(tn_e("hl"))b+=3D"hl=3D"+tn_e("hl")+"&";b+=3D"sl=3D"+=
tn_b[tn_]("old_sl")[tn_c]+"&tl=3D"+tn_b[tn_]("old_tl")[tn_c]+"&u=3D"+enco=
deURIComponent(tn_b[tn_]("newu")[tn_c]);var =
a=3Dtn_b[tn_]("anno2");if(a&&a.checked)b+=3D"&anno=3D2";if((a=3Dtn_b[tn_]=
("ht"))&&!a.checked)b+=3D"&mt=3D1";tn_a.parent.location=3Db}=0A=
var _load=3Dfunction(){var =
b=3Dtn_b[tn_]("newu");if(b)b.value=3Dtn_e("u");if(b=3Dtn_b[tn_]("ht"))b.c=
hecked=3D!tn_e("mt");if(b=3Dtn_b[tn_]("anno2"))if(tn_e("anno")=3D=3D2)b.c=
hecked=3Dtrue;else =
tn_b[tn_]("anno1").checked=3Dtrue},_uChange=3Dtn_f,_dpChange=3Dtn_f;=0A=
</SCRIPT>

<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16385"></HEAD>
<BODY dir=3Dltr onload=3D_load() aLink=3D#ff0000 link=3D#0000cc =
bgColor=3D#ffffff=20
text=3D#000000 vLink=3D#551a8b>
<DIV=20
style=3D"PADDING-BOTTOM: 6px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; =
WHITE-SPACE: nowrap; PADDING-TOP: 6px">
<DIV style=3D"FLOAT: left"><A href=3D"http://translate.google.com.hk/"=20
target=3D_top><IMG=20
style=3D"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; =
MARGIN: 2px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px"=20
alt=3DGoogle=20
src=3D"http://www.google.com.hk/intl/zh-CN/images/logos/translate_logo_sm=
.gif"></A>&nbsp;</DIV>
<DIV style=3D"FLOAT: left">
<FORM onsubmit=3D"_uChange(); return false;" action=3D"">
<TABLE border=3D0 cellSpacing=3D3 cellPadding=3D0>
  <TBODY>
  <TR>
    <TD><INPUT style=3D"WIDTH: 100%" dir=3Dltr id=3Dnewu =
maxLength=3D2048></TD>
    <TD><INPUT style=3D"VERTICAL-ALIGN: baseline" =
value=3D=E7=BF=BB=E8=AF=91 type=3Dsubmit></TD></TR>
  <TR>
    <TD><SPAN style=3D"PADDING-RIGHT: =
2px">=E6=BA=90=E8=AF=AD=E8=A8=80=EF=BC=9A</SPAN><SELECT id=3Dold_sl=20
      tabIndex=3D0 name=3Dsl><OPTION =
value=3Dauto>=E6=A3=80=E6=B5=8B=E8=AF=AD=E8=A8=80</OPTION><OPTION =
disabled=20
        value=3Dseparator>=E2=80=94</OPTION><OPTION =
value=3Dsq>=E9=98=BF=E5=B0=94=E5=B7=B4=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION=20
        value=3Dar>=E9=98=BF=E6=8B=89=E4=BC=AF=E8=AF=AD</OPTION><OPTION =
value=3Daz>=E9=98=BF=E5=A1=9E=E6=8B=9C=E7=96=86=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Dga>=E7=88=B1=E5=B0=94=E5=85=B0=E8=AF=AD</OPTION><OPTION =
value=3Det>=E7=88=B1=E6=B2=99=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        =
value=3Dbe>=E7=99=BD=E4=BF=84=E7=BD=97=E6=96=AF=E8=AF=AD</OPTION><OPTION =
value=3Dbg>=E4=BF=9D=E5=8A=A0=E5=88=A9=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        value=3Dis>=E5=86=B0=E5=B2=9B=E8=AF=AD</OPTION><OPTION =
value=3Dpl>=E6=B3=A2=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        value=3Dfa>=E6=B3=A2=E6=96=AF=E8=AF=AD</OPTION><OPTION =
value=3Daf>=E5=B8=83=E5=B0=94=E6=96=87(=E5=8D=97=E9=9D=9E=E8=8D=B7=E5=85=B0=
=E8=AF=AD)</OPTION><OPTION=20
        value=3Dda>=E4=B8=B9=E9=BA=A6=E8=AF=AD</OPTION><OPTION =
value=3Dde>=E5=BE=B7=E8=AF=AD</OPTION><OPTION=20
        value=3Dru>=E4=BF=84=E8=AF=AD</OPTION><OPTION =
value=3Dfr>=E6=B3=95=E8=AF=AD</OPTION><OPTION=20
        value=3Dtl>=E8=8F=B2=E5=BE=8B=E5=AE=BE=E8=AF=AD</OPTION><OPTION =
value=3Dfi>=E8=8A=AC=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        value=3Dka>=E6=A0=BC=E9=B2=81=E5=90=89=E4=BA=9A=E8=AF=AD =
ALPHA</OPTION><OPTION =
value=3Dht>=E6=B5=B7=E5=9C=B0=E5=85=8B=E9=87=8C=E5=A5=A5=E5=B0=94=E8=AF=AD=
=20
        ALPHA</OPTION><OPTION =
value=3Dko>=E9=9F=A9=E8=AF=AD</OPTION><OPTION=20
        value=3Dnl>=E8=8D=B7=E5=85=B0=E8=AF=AD</OPTION><OPTION =
value=3Dgl>=E5=8A=A0=E5=88=A9=E8=A5=BF=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        =
value=3Dca>=E5=8A=A0=E6=B3=B0=E7=BD=97=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION value=3Dcs>=E6=8D=B7=E5=85=8B=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dhr>=E5=85=8B=E7=BD=97=E5=9C=B0=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dla>=E6=8B=89=E4=B8=81=E8=AF=AD ALPHA</OPTION><OPTION=20
        =
value=3Dlv>=E6=8B=89=E8=84=B1=E7=BB=B4=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dlt>=E7=AB=8B=E9=99=B6=E5=AE=9B=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dro>=E7=BD=97=E9=A9=AC=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dmt>=E9=A9=AC=E8=80=B3=E4=BB=96=E8=AF=AD</OPTION><OPTION=20
        value=3Dms>=E9=A9=AC=E6=9D=A5=E8=AF=AD</OPTION><OPTION =
value=3Dmk>=E9=A9=AC=E5=85=B6=E9=A1=BF=E8=AF=AD</OPTION><OPTION=20
        value=3Dno>=E6=8C=AA=E5=A8=81=E8=AF=AD</OPTION><OPTION =
value=3Dpt>=E8=91=A1=E8=90=84=E7=89=99=E8=AF=AD</OPTION><OPTION=20
        value=3Dja>=E6=97=A5=E8=AF=AD</OPTION><OPTION =
value=3Dsv>=E7=91=9E=E5=85=B8=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dsr>=E5=A1=9E=E5=B0=94=E7=BB=B4=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dsk>=E6=96=AF=E6=B4=9B=E4=BC=90=E5=85=8B=E8=AF=AD</OPTION><OPTION =

        =
value=3Dsl>=E6=96=AF=E6=B4=9B=E6=96=87=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION =
value=3Dsw>=E6=96=AF=E7=93=A6=E5=B8=8C=E9=87=8C=E8=AF=AD</OPTION><OPTION =

        value=3Dth>=E6=B3=B0=E8=AF=AD</OPTION><OPTION =
value=3Dtr>=E5=9C=9F=E8=80=B3=E5=85=B6=E8=AF=AD</OPTION><OPTION=20
        value=3Dcy>=E5=A8=81=E5=B0=94=E5=A3=AB=E8=AF=AD</OPTION><OPTION =
value=3Duk>=E4=B9=8C=E5=85=8B=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        =
value=3Deu>=E8=A5=BF=E7=8F=AD=E7=89=99=E7=9A=84=E5=B7=B4=E6=96=AF=E5=85=8B=
=E8=AF=AD ALPHA</OPTION><OPTION =
value=3Des>=E8=A5=BF=E7=8F=AD=E7=89=99=E8=AF=AD</OPTION><OPTION=20
        value=3Diw>=E5=B8=8C=E4=BC=AF=E6=9D=A5=E8=AF=AD</OPTION><OPTION =
value=3Del>=E5=B8=8C=E8=85=8A=E8=AF=AD</OPTION><OPTION=20
        value=3Dhu>=E5=8C=88=E7=89=99=E5=88=A9=E8=AF=AD</OPTION><OPTION =
value=3Dhy>=E4=BA=9A=E7=BE=8E=E5=B0=BC=E4=BA=9A=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Dit>=E6=84=8F=E5=A4=A7=E5=88=A9=E8=AF=AD</OPTION><OPTION =
value=3Dyi>=E6=84=8F=E7=AC=AC=E7=BB=AA=E8=AF=AD</OPTION><OPTION=20
        value=3Dhi>=E5=8D=B0=E5=9C=B0=E8=AF=AD</OPTION><OPTION =
value=3Dur>=E5=8D=B0=E5=BA=A6=E4=B9=8C=E5=B0=94=E9=83=BD=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Did>=E5=8D=B0=E5=B0=BC=E8=AF=AD</OPTION><OPTION selected =
value=3Den>=E8=8B=B1=E8=AF=AD</OPTION><OPTION=20
        value=3Dvi>=E8=B6=8A=E5=8D=97=E8=AF=AD</OPTION><OPTION =
value=3Dzh-CN>=E4=B8=AD=E6=96=87</OPTION></SELECT><SPAN=20
      id=3Dsl_select class=3Dlangselect></SPAN><SPAN=20
      style=3D"PADDING-LEFT: 6px; PADDING-RIGHT: =
2px">=E7=9B=AE=E6=A0=87=E8=AF=AD=E8=A8=80=EF=BC=9A</SPAN><SELECT=20
      id=3Dold_tl tabIndex=3D0 name=3Dtl><OPTION =
value=3Dsq>=E9=98=BF=E5=B0=94=E5=B7=B4=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION=20
        value=3Dar>=E9=98=BF=E6=8B=89=E4=BC=AF=E8=AF=AD</OPTION><OPTION =
value=3Daz>=E9=98=BF=E5=A1=9E=E6=8B=9C=E7=96=86=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Dga>=E7=88=B1=E5=B0=94=E5=85=B0=E8=AF=AD</OPTION><OPTION =
value=3Det>=E7=88=B1=E6=B2=99=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        =
value=3Dbe>=E7=99=BD=E4=BF=84=E7=BD=97=E6=96=AF=E8=AF=AD</OPTION><OPTION =
value=3Dbg>=E4=BF=9D=E5=8A=A0=E5=88=A9=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        value=3Dis>=E5=86=B0=E5=B2=9B=E8=AF=AD</OPTION><OPTION =
value=3Dpl>=E6=B3=A2=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        value=3Dfa>=E6=B3=A2=E6=96=AF=E8=AF=AD</OPTION><OPTION =
value=3Daf>=E5=B8=83=E5=B0=94=E6=96=87(=E5=8D=97=E9=9D=9E=E8=8D=B7=E5=85=B0=
=E8=AF=AD)</OPTION><OPTION=20
        value=3Dda>=E4=B8=B9=E9=BA=A6=E8=AF=AD</OPTION><OPTION =
value=3Dde>=E5=BE=B7=E8=AF=AD</OPTION><OPTION=20
        value=3Dru>=E4=BF=84=E8=AF=AD</OPTION><OPTION =
value=3Dfr>=E6=B3=95=E8=AF=AD</OPTION><OPTION=20
        value=3Dtl>=E8=8F=B2=E5=BE=8B=E5=AE=BE=E8=AF=AD</OPTION><OPTION =
value=3Dfi>=E8=8A=AC=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        value=3Dka>=E6=A0=BC=E9=B2=81=E5=90=89=E4=BA=9A=E8=AF=AD =
ALPHA</OPTION><OPTION =
value=3Dht>=E6=B5=B7=E5=9C=B0=E5=85=8B=E9=87=8C=E5=A5=A5=E5=B0=94=E8=AF=AD=
=20
        ALPHA</OPTION><OPTION =
value=3Dko>=E9=9F=A9=E8=AF=AD</OPTION><OPTION=20
        value=3Dnl>=E8=8D=B7=E5=85=B0=E8=AF=AD</OPTION><OPTION =
value=3Dgl>=E5=8A=A0=E5=88=A9=E8=A5=BF=E4=BA=9A=E8=AF=AD</OPTION><OPTION =

        =
value=3Dca>=E5=8A=A0=E6=B3=B0=E7=BD=97=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION value=3Dcs>=E6=8D=B7=E5=85=8B=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dhr>=E5=85=8B=E7=BD=97=E5=9C=B0=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dla>=E6=8B=89=E4=B8=81=E8=AF=AD ALPHA</OPTION><OPTION=20
        =
value=3Dlv>=E6=8B=89=E8=84=B1=E7=BB=B4=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dlt>=E7=AB=8B=E9=99=B6=E5=AE=9B=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dro>=E7=BD=97=E9=A9=AC=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dmt>=E9=A9=AC=E8=80=B3=E4=BB=96=E8=AF=AD</OPTION><OPTION=20
        value=3Dms>=E9=A9=AC=E6=9D=A5=E8=AF=AD</OPTION><OPTION =
value=3Dmk>=E9=A9=AC=E5=85=B6=E9=A1=BF=E8=AF=AD</OPTION><OPTION=20
        value=3Dno>=E6=8C=AA=E5=A8=81=E8=AF=AD</OPTION><OPTION =
value=3Dpt>=E8=91=A1=E8=90=84=E7=89=99=E8=AF=AD</OPTION><OPTION=20
        value=3Dja>=E6=97=A5=E8=AF=AD</OPTION><OPTION =
value=3Dsv>=E7=91=9E=E5=85=B8=E8=AF=AD</OPTION><OPTION=20
        =
value=3Dsr>=E5=A1=9E=E5=B0=94=E7=BB=B4=E4=BA=9A=E8=AF=AD</OPTION><OPTION =
value=3Dsk>=E6=96=AF=E6=B4=9B=E4=BC=90=E5=85=8B=E8=AF=AD</OPTION><OPTION =

        =
value=3Dsl>=E6=96=AF=E6=B4=9B=E6=96=87=E5=B0=BC=E4=BA=9A=E8=AF=AD</OPTION=
><OPTION =
value=3Dsw>=E6=96=AF=E7=93=A6=E5=B8=8C=E9=87=8C=E8=AF=AD</OPTION><OPTION =

        value=3Dth>=E6=B3=B0=E8=AF=AD</OPTION><OPTION =
value=3Dtr>=E5=9C=9F=E8=80=B3=E5=85=B6=E8=AF=AD</OPTION><OPTION=20
        value=3Dcy>=E5=A8=81=E5=B0=94=E5=A3=AB=E8=AF=AD</OPTION><OPTION =
value=3Duk>=E4=B9=8C=E5=85=8B=E5=85=B0=E8=AF=AD</OPTION><OPTION=20
        =
value=3Deu>=E8=A5=BF=E7=8F=AD=E7=89=99=E7=9A=84=E5=B7=B4=E6=96=AF=E5=85=8B=
=E8=AF=AD ALPHA</OPTION><OPTION =
value=3Des>=E8=A5=BF=E7=8F=AD=E7=89=99=E8=AF=AD</OPTION><OPTION=20
        value=3Diw>=E5=B8=8C=E4=BC=AF=E6=9D=A5=E8=AF=AD</OPTION><OPTION =
value=3Del>=E5=B8=8C=E8=85=8A=E8=AF=AD</OPTION><OPTION=20
        value=3Dhu>=E5=8C=88=E7=89=99=E5=88=A9=E8=AF=AD</OPTION><OPTION =
value=3Dhy>=E4=BA=9A=E7=BE=8E=E5=B0=BC=E4=BA=9A=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Dit>=E6=84=8F=E5=A4=A7=E5=88=A9=E8=AF=AD</OPTION><OPTION =
value=3Dyi>=E6=84=8F=E7=AC=AC=E7=BB=AA=E8=AF=AD</OPTION><OPTION=20
        value=3Dhi>=E5=8D=B0=E5=9C=B0=E8=AF=AD</OPTION><OPTION =
value=3Dur>=E5=8D=B0=E5=BA=A6=E4=B9=8C=E5=B0=94=E9=83=BD=E8=AF=AD =
ALPHA</OPTION><OPTION=20
        value=3Did>=E5=8D=B0=E5=B0=BC=E8=AF=AD</OPTION><OPTION =
value=3Den>=E8=8B=B1=E8=AF=AD</OPTION><OPTION=20
        value=3Dvi>=E8=B6=8A=E5=8D=97=E8=AF=AD</OPTION><OPTION =
value=3Dzh-TW>=E4=B8=AD=E6=96=87(=E7=B9=81=E4=BD=93)</OPTION><OPTION =
selected=20
        =
value=3Dzh-CN>=E4=B8=AD=E6=96=87(=E7=AE=80=E4=BD=93)</OPTION></SELECT><SP=
AN id=3Dtl_select=20
      class=3Dlangselect></SPAN></TD>
    <TD></TD></TR></TBODY></TABLE></FORM>&nbsp;</DIV></DIV>
<DIV=20
style=3D"PADDING-BOTTOM: 1px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; =
FLOAT: right; CLEAR: right; FONT-SIZE: 12px; PADDING-TOP: =
1px"><B>=E6=9F=A5=E7=9C=8B=EF=BC=9A</B><INPUT=20
id=3Danno1 onclick=3D_dpChange() type=3Dradio =
name=3Danno>=E8=AF=91=E6=96=87<INPUT id=3Danno2=20
onclick=3D_dpChange() type=3Dradio =
name=3Danno>=E5=8E=9F=E6=96=87</DIV></BODY></HTML>

------=_NextPart_001_0073_01CB9893.B382F670--

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/layout.css

HTML {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; HEIGHT: 100%; PADDING-TOP: 0px
}
BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; HEIGHT: 100%; PADDING-TOP: 0px
}
HTML {
	BACKGROUND: url(images/tree.png) #d9e3cb fixed no-repeat left bottom
}
BODY {
	BACKGROUND: url(images/head.png) repeat-x left -8px
}
BODY {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
INPUT {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
TD {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
TH {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
TEXTAREA {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
OPTION {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
SELECT {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif
}
A {
	COLOR: #8b0000; TEXT-DECORATION: none
}
A:hover {
	TEXT-DECORATION: underline
}
#container {
	POSITION: relative; PADDING-BOTTOM: 0px; MARGIN: 0px auto; MIN-HEIGHT: =
100%; PADDING-LEFT: 8px; WIDTH: 802px; PADDING-RIGHT: 8px; BACKGROUND: =
url(images/bg.png) repeat-y left top; OVERFLOW: hidden; PADDING-TOP: 0px
}
#head {
	POSITION: relative; BACKGROUND: black; HEIGHT: 70px; OVERFLOW: hidden
}
#head H1 {
	DISPLAY: none
}
#head H2 {
	DISPLAY: none
}
#head #logo {
	POSITION: absolute; WIDTH: 180px; BACKGROUND: url(images/logo.png) =
no-repeat left top; HEIGHT: 60px; TOP: 5px; TEXT-DECORATION: none; LEFT: =
15px
}
#menu {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 0px 0px 330px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; HEIGHT: 70px; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
#menu LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 70px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; =
FLOAT: left; HEIGHT: 70px; PADDING-TOP: 0px
}
#menu LI A {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 12px; PADDING-RIGHT: 12px; COLOR: =
#8d8d8d; FONT-SIZE: 12px; PADDING-TOP: 0px
}
#menu LI A:hover {
	COLOR: white; TEXT-DECORATION: none
}
#menu LI.selected {
	BACKGROUND: url(images/sel.jpg) no-repeat center bottom
}
#menu LI.selected A {
	COLOR: white; TEXT-DECORATION: none
}
#menu LI.selected A:hover {
	COLOR: white; TEXT-DECORATION: none
}
#sidebar {
	BORDER-BOTTOM: white 40px solid; MARGIN: 10px 0px 10px 10px; WIDTH: =
190px; FLOAT: left
}
#content {
	BORDER-BOTTOM: white 40px solid; BORDER-LEFT: silver 1px dotted; =
PADDING-BOTTOM: 0px; MARGIN: 10px 10px 0px 215px; PADDING-LEFT: 15px; =
PADDING-RIGHT: 0px; OVERFLOW: hidden; PADDING-TOP: 0px
}
BODY.nosidebar #sidebar {
	DISPLAY: none
}
BODY.nosidebar #content {
	BORDER-LEFT: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 10px
}
#footer {
	POSITION: absolute; PADDING-BOTTOM: 0px; LINE-HEIGHT: 15px; =
PADDING-LEFT: 12px; WIDTH: 818px; BOTTOM: 0px; PADDING-RIGHT: 12px; =
BACKGROUND: url(images/footer.png) #d9e3cb no-repeat left top; HEIGHT: =
20px; PADDING-TOP: 20px; LEFT: 0px
}
#footer A {
	FLOAT: left; COLOR: #333; MARGIN-LEFT: 10px; FONT-SIZE: 7pt
}
#footer SPAN {
	FLOAT: right; COLOR: #999; FONT-SIZE: 7pt; MARGIN-RIGHT: 30px
}
#footer SPAN A {
	MARGIN: 0px; FLOAT: none
}
#sidebar #download {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1em; =
PADDING-LEFT: 0px; WIDTH: 190px; PADDING-RIGHT: 0px; DISPLAY: block; =
FONT-FAMILY: Georgia; BACKGROUND: url(images/abg.png) no-repeat center =
top; HEIGHT: 45px; COLOR: white; FONT-SIZE: 14px; FONT-WEIGHT: bold; =
TEXT-DECORATION: none; PADDING-TOP: 5px; text-shadow: 0px 1px 2px #000
}
#sidebar P.download_date {
	TEXT-ALIGN: center; MARGIN: -5px 0px 12px; COLOR: #666; FONT-SIZE: =
1.1em
}

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/_docs/syntax/!style.css

.syntaxhighlighter {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter DIV {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter CODE {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TD {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TR {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter TABLE TBODY {
	BORDER-BOTTOM: 0px; POSITION: static !important; TEXT-ALIGN: left =
!important; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 18px !important; FONT-STYLE: normal !important; MARGIN: =
0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert !important; =
MIN-HEIGHT: auto !important; PADDING-LEFT: 0px !important; =
OUTLINE-WIDTH: 0px !important; WIDTH: auto !important; BOTTOM: auto =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: "Consolas", =
"Bitstream Vera Sans Mono", "Courier New", Courier, monospace =
!important; BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: =
none !important; HEIGHT: auto !important; FONT-SIZE: 12px !important; =
VERTICAL-ALIGN: baseline !important; BORDER-TOP: 0px; TOP: auto =
!important; RIGHT: auto !important; FONT-WEIGHT: normal !important; =
BORDER-RIGHT: 0px; PADDING-TOP: 0px !important; LEFT: auto !important
}
.syntaxhighlighter {
	POSITION: relative !important; PADDING-BOTTOM: 1px !important; MARGIN: =
1em 0px; PADDING-LEFT: 1px !important; WIDTH: 99.9% !important; =
PADDING-RIGHT: 1px !important; PADDING-TOP: 1px !important
}
.syntaxhighlighter .bold {
	FONT-WEIGHT: bold !important
}
.syntaxhighlighter .italic {
	FONT-STYLE: italic !important
}
.syntaxhighlighter .line {
=09
}
.syntaxhighlighter .no-wrap .line .content {
	WHITE-SPACE: pre !important
}
.syntaxhighlighter .line TABLE {
	BORDER-COLLAPSE: collapse !important
}
.syntaxhighlighter .line TD {
	VERTICAL-ALIGN: top !important
}
.syntaxhighlighter .line .number {
	WIDTH: 3em !important
}
.syntaxhighlighter .line .number CODE {
	TEXT-ALIGN: right !important; WIDTH: 2.7em !important; PADDING-RIGHT: =
0.3em !important; DISPLAY: block !important
}
.syntaxhighlighter .line .content {
	PADDING-LEFT: 0.5em !important
}
.syntaxhighlighter .line .spaces {
=09
}
.nogutter.syntaxhighlighter .line .content {
	BORDER-LEFT: medium none
}
.syntaxhighlighter .bar {
	DISPLAY: none !important
}
.syntaxhighlighter .show.bar {
	DISPLAY: block !important
}
.collapsed.syntaxhighlighter .bar {
	DISPLAY: block !important
}
.collapsed.syntaxhighlighter .lines {
	DISPLAY: none !important
}
.syntaxhighlighter .no-wrap.lines {
	OVERFLOW-Y: hidden !important; OVERFLOW: auto !important
}
.syntaxhighlighter .toolbar {
	POSITION: absolute !important; PADDING-BOTTOM: 8px !important; =
PADDING-LEFT: 0px !important; PADDING-RIGHT: 8px !important; FONT-SIZE: =
1px !important; TOP: 0px !important; RIGHT: 0px !important; PADDING-TOP: =
8px !important
}
.collapsed.syntaxhighlighter .toolbar {
	POSITION: static !important; PADDING-BOTTOM: 0.5em !important; =
PADDING-LEFT: 0.5em !important; PADDING-RIGHT: 0px !important; =
FONT-SIZE: 80% !important; PADDING-TOP: 0.2em !important
}
.syntaxhighlighter .toolbar A.item {
	TEXT-INDENT: -5000px !important; DISPLAY: block !important; =
BACKGROUND-REPEAT: no-repeat !important; FLOAT: left !important; =
MARGIN-LEFT: 8px !important; OVERFLOW: hidden !important
}
.syntaxhighlighter .toolbar .item {
	TEXT-INDENT: -5000px !important; DISPLAY: block !important; =
BACKGROUND-REPEAT: no-repeat !important; FLOAT: left !important; =
MARGIN-LEFT: 8px !important; OVERFLOW: hidden !important
}
.collapsed.syntaxhighlighter .toolbar .item {
	DISPLAY: none !important
}
.collapsed.syntaxhighlighter .toolbar .expandSource.item {
	BACKGROUND-IMAGE: url(magnifier.png) !important; TEXT-INDENT: 0px =
!important; PADDING-LEFT: 20px !important; WIDTH: auto !important; =
DISPLAY: inline !important; FLOAT: none !important; HEIGHT: 16px =
!important
}
.syntaxhighlighter .toolbar .viewSource.item {
	BACKGROUND-IMAGE: url(page_white_code.png) !important
}
.syntaxhighlighter .toolbar .printSource.item {
	BACKGROUND-IMAGE: url(printer.png) !important
}
.syntaxhighlighter .toolbar .copyToClipboard.item {
	TEXT-INDENT: 0px !important; BACKGROUND: none transparent scroll repeat =
0% 0%; OVERFLOW: visible !important
}
.syntaxhighlighter .toolbar .about.item {
	BACKGROUND-IMAGE: url(help.png) !important
}
.printing.syntaxhighlighter .line .number {
	COLOR: #bbb !important
}
.printing.syntaxhighlighter .line .content {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .toolbar {
	DISPLAY: none !important
}
.printing.syntaxhighlighter A {
	TEXT-DECORATION: none !important
}
.printing.syntaxhighlighter .plain {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .plain A {
	COLOR: #000 !important
}
.printing.syntaxhighlighter .comments {
	COLOR: #008200 !important
}
.printing.syntaxhighlighter .comments A {
	COLOR: #008200 !important
}
.printing.syntaxhighlighter .string {
	COLOR: blue !important
}
.printing.syntaxhighlighter .string A {
	COLOR: blue !important
}
.printing.syntaxhighlighter .keyword {
	COLOR: #069 !important; FONT-WEIGHT: bold !important
}
.printing.syntaxhighlighter .preprocessor {
	COLOR: gray !important
}
.printing.syntaxhighlighter .variable {
	COLOR: #a70 !important
}
.printing.syntaxhighlighter .value {
	COLOR: #090 !important
}
.printing.syntaxhighlighter .functions {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .constants {
	COLOR: #0066cc !important
}
.printing.syntaxhighlighter .script {
	FONT-WEIGHT: bold !important
}
.printing.syntaxhighlighter .color1 {
	COLOR: #808080 !important
}
.printing.syntaxhighlighter .color1 A {
	COLOR: #808080 !important
}
.printing.syntaxhighlighter .color2 {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .color2 A {
	COLOR: #ff1493 !important
}
.printing.syntaxhighlighter .color3 {
	COLOR: red !important
}
.printing.syntaxhighlighter .color3 A {
	COLOR: red !important
}
.syntaxhighlighter {
	BACKGROUND-COLOR: #fff !important
}
.syntaxhighlighter .highlighted.line .number {
	COLOR: black !important
}
.syntaxhighlighter .alt1.highlighted.line {
	BACKGROUND-COLOR: #e0e0e0 !important
}
.syntaxhighlighter .alt2.highlighted.line {
	BACKGROUND-COLOR: #e0e0e0 !important
}
.syntaxhighlighter .line .number {
	COLOR: #afafaf !important
}
.syntaxhighlighter .line .content {
	BORDER-LEFT: gray 1px solid; COLOR: #000 !important
}
.printing.syntaxhighlighter .line .content {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.syntaxhighlighter .alt1.line {
	BACKGROUND-COLOR: #fff !important
}
.syntaxhighlighter .alt2.line {
	BACKGROUND-COLOR: #f8f8f8 !important
}
.syntaxhighlighter .toolbar {
	BORDER-BOTTOM: #e7e5dc 1px solid; BORDER-LEFT: #e7e5dc 1px solid; =
BACKGROUND-COLOR: #f8f8f8 !important; BORDER-TOP: #e7e5dc 1px solid; =
BORDER-RIGHT: #e7e5dc 1px solid
}
.syntaxhighlighter .toolbar A {
	COLOR: #a0a0a0 !important
}
.syntaxhighlighter .toolbar A:hover {
	COLOR: red !important
}
.syntaxhighlighter .plain {
	COLOR: #000 !important
}
.syntaxhighlighter .plain A {
	COLOR: #000 !important
}
.syntaxhighlighter .comments {
	COLOR: #008200 !important
}
.syntaxhighlighter .comments A {
	COLOR: #008200 !important
}
.syntaxhighlighter .string {
	COLOR: blue !important
}
.syntaxhighlighter .string A {
	COLOR: blue !important
}
.syntaxhighlighter .keyword {
	COLOR: #069 !important; FONT-WEIGHT: bold !important
}
.syntaxhighlighter .preprocessor {
	COLOR: gray !important
}
.syntaxhighlighter .variable {
	COLOR: #a70 !important
}
.syntaxhighlighter .value {
	COLOR: #090 !important
}
.syntaxhighlighter .functions {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .constants {
	COLOR: #0066cc !important
}
.syntaxhighlighter .script {
	BACKGROUND-COLOR: yellow !important
}
.syntaxhighlighter .color1 {
	COLOR: #808080 !important
}
.syntaxhighlighter .color1 A {
	COLOR: #808080 !important
}
.syntaxhighlighter .color2 {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .color2 A {
	COLOR: #ff1493 !important
}
.syntaxhighlighter .color3 {
	COLOR: red !important
}
.syntaxhighlighter .color3 A {
	COLOR: red !important
}

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/_docs/!style.css

HTML {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BODY {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
TD {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
TH {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
PRE {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
CODE {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
SELECT {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
OPTION {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
INPUT {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
TEXTAREA {
	FONT-FAMILY: "lucida grande", tahoma, verdana, arial, sans-serif; =
FONT-SIZE: 10pt
}
H1 {
	BORDER-BOTTOM: 2px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 0.5em; =
MARGIN: 0px 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
FONT-FAMILY: Georgia; FONT-SIZE: 14pt; PADDING-TOP: 0.2em
}
H2 {
	PADDING-BOTTOM: 0.5em; MARGIN: 0.5em 0px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 0px; FONT-FAMILY: Georgia; BACKGROUND: silver; COLOR: =
white; CLEAR: both; FONT-SIZE: 12pt; PADDING-TOP: 0.5em; text-shadow: =
1px 1px 2px gray; -moz-border-radius: 5px
}
H3 {
	PADDING-BOTTOM: 0.5em; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FONT-FAMILY: Georgia; COLOR: gray; CLEAR: both; FONT-SIZE: 11.5pt; =
PADDING-TOP: 0.5em
}
P {
	PADDING-BOTTOM: 0.5em; LINE-HEIGHT: 1.8em; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; PADDING-TOP: 0em
}
P.meta {
	MARGIN-TOP: -5px; COLOR: gray; FONT-SIZE: 9pt
}
.arguments .tp {
	PADDING-BOTTOM: 0px; FONT-STYLE: normal !important; PADDING-LEFT: 4px; =
PADDING-RIGHT: 4px; FONT-FAMILY: "Consolas", "Bitstream Vera Sans Mono", =
"Courier New", Courier, monospace !important; COLOR: green; FONT-SIZE: =
13px; FONT-WEIGHT: normal !important; PADDING-TOP: 0px
}
P CODE {
	PADDING-BOTTOM: 0px; FONT-STYLE: normal !important; PADDING-LEFT: 4px; =
PADDING-RIGHT: 4px; FONT-FAMILY: "Consolas", "Bitstream Vera Sans Mono", =
"Courier New", Courier, monospace !important; COLOR: green; FONT-SIZE: =
13px; FONT-WEIGHT: normal !important; PADDING-TOP: 0px
}
#description {
	MARGIN: 0px 20px
}
.panel {
	MARGIN: 0px 20px
}
#container {
	MARGIN: 0px auto; WIDTH: 802px; OVERFLOW: hidden
}
.demo {
	BORDER-BOTTOM: gray 1px solid; BORDER-LEFT: gray 1px solid; MARGIN: =
0px; WIDTH: 235px; BACKGROUND: white; FLOAT: left; OVERFLOW: auto; =
BORDER-TOP: gray 1px solid; BORDER-RIGHT: gray 1px solid
}
.code {
	BORDER-BOTTOM: gray 1px solid; BORDER-LEFT: gray 1px solid; MARGIN: 0px =
0px 10px; WIDTH: 490px; FLOAT: right; FONT-SIZE: 12px; BORDER-TOP: gray =
1px solid; BORDER-RIGHT: gray 1px solid
}
PRE {
	DISPLAY: block
}
.code_f {
	BORDER-BOTTOM: gray 1px solid; BORDER-LEFT: gray 1px solid; =
MARGIN-BOTTOM: 1em; BORDER-TOP: gray 1px solid; BORDER-RIGHT: gray 1px =
solid
}
.syntaxhighlighter {
	PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 18px; MARGIN: 0px; =
PADDING-LEFT: 0px !important; PADDING-RIGHT: 0px !important; =
PADDING-TOP: 0px !important
}
.log {
	BORDER-BOTTOM: gray 1px solid; BORDER-LEFT: gray 1px solid; =
PADDING-BOTTOM: 4px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
MARGIN-BOTTOM: 1em; BORDER-TOP: gray 1px solid; BORDER-RIGHT: gray 1px =
solid; PADDING-TOP: 4px
}
.button {
	DISPLAY: block; MARGIN-BOTTOM: 0.5em
}
.arguments {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0em 1em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.arguments .tp {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 70px; PADDING-RIGHT: =
0px; FLOAT: left; PADDING-TOP: 0px
}
.arguments STRONG {
	DISPLAY: block
}
.api H3 {
	MARGIN-TOP: 2em; WIDTH: 780px; FONT-FAMILY: "Consolas", "Bitstream Vera =
Sans Mono", "Courier New", Courier, monospace !important; COLOR: black; =
MARGIN-LEFT: -10px; FONT-SIZE: 14px; BORDER-TOP: 1px solid; FONT-WEIGHT: =
normal !important
}
.api .arguments LI STRONG {
	FONT-FAMILY: "Consolas", "Bitstream Vera Sans Mono", "Courier New", =
Courier, monospace !important; COLOR: black; FONT-SIZE: 13px; =
FONT-WEIGHT: normal !important
}
.configuration H3 {
	MARGIN-TOP: 2em; WIDTH: 780px; FONT-FAMILY: "Consolas", "Bitstream Vera =
Sans Mono", "Courier New", Courier, monospace !important; COLOR: black; =
MARGIN-LEFT: -10px; FONT-SIZE: 14px; BORDER-TOP: 1px solid; FONT-WEIGHT: =
normal !important
}
.note {
	BORDER-BOTTOM: #333 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #333 =
1px solid; PADDING-BOTTOM: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: =
20px; MARGIN-BOTTOM: 15px; BACKGROUND: #ffffee; BORDER-TOP: #333 1px =
solid; FONT-WEIGHT: bold; BORDER-RIGHT: #333 1px solid; PADDING-TOP: =
10px; -moz-border-radius: 5px; border-radius: 5px; =
-webkit-border-radius: 5px
}
UL.columns {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 5px auto 15px; =
PADDING-LEFT: 0px; WIDTH: 700px; PADDING-RIGHT: 0px; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
UL.columns LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; =
WIDTH: 345px; PADDING-RIGHT: 0px; FLOAT: left; PADDING-TOP: 0px
}
UL.plugins LI {
	TEXT-ALIGN: left; PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; WIDTH: 220px; =
PADDING-RIGHT: 0px; PADDING-TOP: 5px
}
UL.plugins LI A {
	COLOR: #3b5998; TEXT-DECORATION: none
}
UL.plugins LI A:hover {
	TEXT-DECORATION: underline
}
UL.plugins LI P {
	TEXT-ALIGN: left; MARGIN: 0px 5px 0px 0px; COLOR: #333; FONT-SIZE: 9px
}
.demo {
	FONT-FAMILY: Verdana; FONT-SIZE: 10px
}
.demo INPUT {
	FONT-FAMILY: Verdana; FONT-SIZE: 10px
}
.jstree-dnd-helper {
	FONT-FAMILY: Verdana; FONT-SIZE: 10px
}
#vakata-contextmenu {
	FONT-FAMILY: Verdana; FONT-SIZE: 10px
}

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://translate.google.com.hk/translate_un?hl=zh-CN&sl=en&tl=zh-CN&u=http://www.jstree.com/documentation/json_data&rurl=translate.google.com.hk&lang=en&usg=ALkJrhh7-P2mA4a9DHkyM9rQGAUHw1fivA

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META content=3D"text/html; charset=3Dutf-8" http-equiv=3DContent-Type>
<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16385"></HEAD>
<BODY></BODY></HTML>

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-js
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/jquery.js

/*!
 * jQuery JavaScript Library v1.4.2
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Sat Feb 13 22:33:48 2010 -0500
 */
(function( window, undefined ) {

// Define a local copy of jQuery
var jQuery =3D function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context );
	},

	// Map over jQuery in case of overwrite
	_jQuery =3D window.jQuery,

	// Map over the $ in case of overwrite
	_$ =3D window.$,

	// Use the correct document accordingly with window argument (sandbox)
	document =3D window.document,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// (both of which we optimize for)
	quickExpr =3D /^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,

	// Is it a simple selector
	isSimple =3D /^.[^:#\[\.,]*$/,

	// Check if a string has a non-whitespace character in it
	rnotwhite =3D /\S/,

	// Used for trimming whitespace
	rtrim =3D /^(\s|\u00A0)+|(\s|\u00A0)+$/g,

	// Match a standalone tag
	rsingleTag =3D /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// Keep a UserAgent string for use with jQuery.browser
	userAgent =3D navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,
=09
	// Has the ready events already been bound?
	readyBound =3D false,
=09
	// The functions to execute on DOM ready
	readyList =3D [],

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString =3D Object.prototype.toString,
	hasOwnProperty =3D Object.prototype.hasOwnProperty,
	push =3D Array.prototype.push,
	slice =3D Array.prototype.slice,
	indexOf =3D Array.prototype.indexOf;

jQuery.fn =3D jQuery.prototype =3D {
	init: function( selector, context ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context =3D this[0] =3D selector;
			this.length =3D 1;
			return this;
		}
	=09
		// The body element only exists once, optimize finding it
		if ( selector =3D=3D=3D "body" && !context ) {
			this.context =3D document;
			this[0] =3D document.body;
			this.selector =3D "body";
			this.length =3D 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector =3D=3D=3D "string" ) {
			// Are we dealing with HTML string or an ID?
			match =3D quickExpr.exec( selector );

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					doc =3D (context ? context.ownerDocument || context : document);

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret =3D rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector =3D [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector =3D [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret =3D buildFragment( [ match[1] ], [ doc ] );
						selector =3D (ret.cacheable ? ret.fragment.cloneNode(true) : =
ret.fragment).childNodes;
					}
				=09
					return jQuery.merge( this, selector );
				=09
				// HANDLE: $("#id")
				} else {
					elem =3D document.getElementById( match[2] );

					if ( elem ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !=3D=3D match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery =
object
						this.length =3D 1;
						this[0] =3D elem;
					}

					this.context =3D document;
					this.selector =3D selector;
					return this;
				}

			// HANDLE: $("TAG")
			} else if ( !context && /^\w+$/.test( selector ) ) {
				this.selector =3D selector;
				this.context =3D document;
				selector =3D document.getElementsByTagName( selector );
				return jQuery.merge( this, selector );

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return (context || rootjQuery).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return jQuery( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if (selector.selector !=3D=3D undefined) {
			this.selector =3D selector.selector;
			this.context =3D selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.4.2",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num =3D=3D null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this.slice(num)[ 0 ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret =3D jQuery();

		if ( jQuery.isArray( elems ) ) {
			push.apply( ret, elems );
	=09
		} else {
			jQuery.merge( ret, elems );
		}

		// Add the old object onto the stack (as a reference)
		ret.prevObject =3D this;

		ret.context =3D this.context;

		if ( name =3D=3D=3D "find" ) {
			ret.selector =3D this.selector + (this.selector ? " " : "") + =
selector;
		} else if ( name ) {
			ret.selector =3D this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},
=09
	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// If the DOM is already ready
		if ( jQuery.isReady ) {
			// Execute the function immediately
			fn.call( document, jQuery );

		// Otherwise, remember the function for later
		} else if ( readyList ) {
			// Add the function to the wait list
			readyList.push( fn );
		}

		return this;
	},
=09
	eq: function( i ) {
		return i =3D=3D=3D -1 ?
			this.slice( i ) :
			this.slice( i, +i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},
=09
	end: function() {
		return this.prevObject || jQuery(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype =3D jQuery.fn;

jQuery.extend =3D jQuery.fn.extend =3D function() {
	// copy reference to target object
	var target =3D arguments[0] || {}, i =3D 1, length =3D =
arguments.length, deep =3D false, options, name, src, copy;

	// Handle a deep copy situation
	if ( typeof target =3D=3D=3D "boolean" ) {
		deep =3D target;
		target =3D arguments[1] || {};
		// skip the boolean and the target
		i =3D 2;
	}

	// Handle case when target is a string or something (possible in deep =
copy)
	if ( typeof target !=3D=3D "object" && !jQuery.isFunction(target) ) {
		target =3D {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length =3D=3D=3D i ) {
		target =3D this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options =3D arguments[ i ]) !=3D null ) {
			// Extend the base object
			for ( name in options ) {
				src =3D target[ name ];
				copy =3D options[ name ];

				// Prevent never-ending loop
				if ( target =3D=3D=3D copy ) {
					continue;
				}

				// Recurse if we're merging object literal values or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || =
jQuery.isArray(copy) ) ) {
					var clone =3D src && ( jQuery.isPlainObject(src) || =
jQuery.isArray(src) ) ? src
						: jQuery.isArray(copy) ? [] : {};

					// Never move original objects, clone them
					target[ name ] =3D jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !=3D=3D undefined ) {
					target[ name ] =3D copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		window.$ =3D _$;

		if ( deep ) {
			window.jQuery =3D _jQuery;
		}

		return jQuery;
	},
=09
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,
=09
	// Handle when the DOM is ready
	ready: function() {
		// Make sure that the DOM is not already loaded
		if ( !jQuery.isReady ) {
			// Make sure body exists, at least, in case IE gets a little =
overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 13 );
			}

			// Remember that the DOM is ready
			jQuery.isReady =3D true;

			// If there are functions bound, to execute
			if ( readyList ) {
				// Execute all of them
				var fn, i =3D 0;
				while ( (fn =3D readyList[ i++ ]) ) {
					fn.call( document, jQuery );
				}

				// Reset the list of functions
				readyList =3D null;
			}

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
			}
		}
	},
=09
	bindReady: function() {
		if ( readyBound ) {
			return;
		}

		readyBound =3D true;

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState =3D=3D=3D "complete" ) {
			return jQuery.ready();
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, =
false );
		=09
			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent("onreadystatechange", DOMContentLoaded);
		=09
			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel =3D false;

			try {
				toplevel =3D window.frameElement =3D=3D null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return toString.call(obj) =3D=3D=3D "[object Function]";
	},

	isArray: function( obj ) {
		return toString.call(obj) =3D=3D=3D "[object Array]";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the =
constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as =
well
		if ( !obj || toString.call(obj) !=3D=3D "[object Object]" || =
obj.nodeType || obj.setInterval ) {
			return false;
		}
	=09
		// Not own constructor property must be Object
		if ( obj.constructor
			&& !hasOwnProperty.call(obj, "constructor")
			&& !hasOwnProperty.call(obj.constructor.prototype, "isPrototypeOf") ) =
{
			return false;
		}
	=09
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
=09
		var key;
		for ( key in obj ) {}
	=09
		return key =3D=3D=3D undefined || hasOwnProperty.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},
=09
	error: function( msg ) {
		throw msg;
	},
=09
	parseJSON: function( data ) {
		if ( typeof data !=3D=3D "string" || !data ) {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle =
it)
		data =3D jQuery.trim( data );
	=09
		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( =
/^[\],:{}\s]*$/.test(data.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, =
"@")
			=
.replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?=
/g, "]")
			.replace(/(?:^|:|,)(?:\s*\[)+/g, "")) ) {

			// Try to use the native JSON parser first
			return window.JSON && window.JSON.parse ?
				window.JSON.parse( data ) :
				(new Function("return " + data))();

		} else {
			jQuery.error( "Invalid JSON: " + data );
		}
	},

	noop: function() {},

	// Evalulates a script in a global context
	globalEval: function( data ) {
		if ( data && rnotwhite.test(data) ) {
			// Inspired by code by Andrea Giammarchi
			// =
http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom=
.html
			var head =3D document.getElementsByTagName("head")[0] || =
document.documentElement,
				script =3D document.createElement("script");

			script.type =3D "text/javascript";

			if ( jQuery.support.scriptEval ) {
				script.appendChild( document.createTextNode( data ) );
			} else {
				script.text =3D data;
			}

			// Use insertBefore instead of appendChild to circumvent an IE6 bug.
			// This arises when a base node is used (#2709).
			head.insertBefore( script, head.firstChild );
			head.removeChild( script );
		}
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() =3D=3D=3D =
name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i =3D 0,
			length =3D object.length,
			isObj =3D length =3D=3D=3D undefined || jQuery.isFunction(object);

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) =3D=3D=3D false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) =3D=3D=3D false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) =
=3D=3D=3D false ) {
						break;
					}
				}
			} else {
				for ( var value =3D object[0];
					i < length && callback.call( value, i, value ) !=3D=3D false; value =
=3D object[++i] ) {}
			}
		}

		return object;
	},

	trim: function( text ) {
		return (text || "").replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret =3D results || [];

		if ( array !=3D null ) {
			// The window, strings (and functions) also have 'length'
			// The extra typeof function check is to prevent crashes
			// in Safari 2 (See: #3039)
			if ( array.length =3D=3D null || typeof array =3D=3D=3D "string" || =
jQuery.isFunction(array) || (typeof array !=3D=3D "function" && =
array.setInterval) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array ) {
		if ( array.indexOf ) {
			return array.indexOf( elem );
		}

		for ( var i =3D 0, length =3D array.length; i < length; i++ ) {
			if ( array[ i ] =3D=3D=3D elem ) {
				return i;
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i =3D first.length, j =3D 0;

		if ( typeof second.length =3D=3D=3D "number" ) {
			for ( var l =3D second.length; j < l; j++ ) {
				first[ i++ ] =3D second[ j ];
			}
	=09
		} else {
			while ( second[j] !=3D=3D undefined ) {
				first[ i++ ] =3D second[ j++ ];
			}
		}

		first.length =3D i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret =3D [];

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i =3D 0, length =3D elems.length; i < length; i++ ) {
			if ( !inv !=3D=3D !callback( elems[ i ], i ) ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var ret =3D [], value;

		// Go through the array, translating each of the items to their
		// new value (or values).
		for ( var i =3D 0, length =3D elems.length; i < length; i++ ) {
			value =3D callback( elems[ i ], i, arg );

			if ( value !=3D null ) {
				ret[ ret.length ] =3D value;
			}
		}

		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	proxy: function( fn, proxy, thisObject ) {
		if ( arguments.length =3D=3D=3D 2 ) {
			if ( typeof proxy =3D=3D=3D "string" ) {
				thisObject =3D fn;
				fn =3D thisObject[ proxy ];
				proxy =3D undefined;

			} else if ( proxy && !jQuery.isFunction( proxy ) ) {
				thisObject =3D proxy;
				proxy =3D undefined;
			}
		}

		if ( !proxy && fn ) {
			proxy =3D function() {
				return fn.apply( thisObject || this, arguments );
			};
		}

		// Set the guid of unique handler to the same of original handler, so =
it can be removed
		if ( fn ) {
			proxy.guid =3D fn.guid =3D fn.guid || proxy.guid || jQuery.guid++;
		}

		// So proxy can be declared as an argument
		return proxy;
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua =3D ua.toLowerCase();

		var match =3D /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
			/(opera)(?:.*version)?[ \/]([\w.]+)/.exec( ua ) ||
			/(msie) ([\w.]+)/.exec( ua ) ||
			!/compatible/.test( ua ) && /(mozilla)(?:.*? rv:([\w.]+))?/.exec( ua =
) ||
		  	[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	browser: {}
});

browserMatch =3D jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] =3D true;
	jQuery.browser.version =3D browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari =3D true;
}

if ( indexOf ) {
	jQuery.inArray =3D function( elem, array ) {
		return indexOf.call( array, elem );
	};
}

// All jQuery objects should point back to these
rootjQuery =3D jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded =3D function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, =
false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded =3D function() {
		// Make sure body exists, at least, in case IE gets a little =
overzealous (ticket #5443).
		if ( document.readyState =3D=3D=3D "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch( error ) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

function evalScript( i, elem ) {
	if ( elem.src ) {
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});
	} else {
		jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || =
"" );
	}

	if ( elem.parentNode ) {
		elem.parentNode.removeChild( elem );
	}
}

// Mutifunctional method to get and set values to a collection
// The value/s can be optionally by executed if its a function
function access( elems, key, value, exec, fn, pass ) {
	var length =3D elems.length;
=09
	// Setting many attributes
	if ( typeof key =3D=3D=3D "object" ) {
		for ( var k in key ) {
			access( elems, k, key[k], exec, fn, value );
		}
		return elems;
	}
=09
	// Setting one attribute
	if ( value !=3D=3D undefined ) {
		// Optionally, function values get executed if exec is true
		exec =3D !pass && exec && jQuery.isFunction(value);
	=09
		for ( var i =3D 0; i < length; i++ ) {
			fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key =
) ) : value, pass );
		}
	=09
		return elems;
	}
=09
	// Getting an attribute
	return length ? fn( elems[0], key ) : undefined;
}

function now() {
	return (new Date).getTime();
}
(function() {

	jQuery.support =3D {};

	var root =3D document.documentElement,
		script =3D document.createElement("script"),
		div =3D document.createElement("div"),
		id =3D "script" + now();

	div.style.display =3D "none";
	div.innerHTML =3D "   <link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";

	var all =3D div.getElementsByTagName("*"),
		a =3D div.getElementsByTagName("a")[0];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return;
	}

	jQuery.support =3D {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: div.firstChild.nodeType =3D=3D=3D 3,

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText insted)
		style: /red/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: a.getAttribute("href") =3D=3D=3D "/a",

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55$/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: div.getElementsByTagName("input")[0].value =3D=3D=3D "on",

		// Make sure that a selected-by-default option has a working selected =
property.
		// (WebKit defaults to false instead of true, IE too, if it's in an =
optgroup)
		optSelected: document.createElement("select").appendChild( =
document.createElement("option") ).selected,

		parentNode: div.removeChild( div.appendChild( =
document.createElement("div") ) ).parentNode =3D=3D=3D null,

		// Will be defined later
		deleteExpando: true,
		checkClone: false,
		scriptEval: false,
		noCloneEvent: true,
		boxModel: null
	};

	script.type =3D "text/javascript";
	try {
		script.appendChild( document.createTextNode( "window." + id + "=3D1;" =
) );
	} catch(e) {}

	root.insertBefore( script, root.firstChild );

	// Make sure that the execution of code works by injecting a script
	// tag with appendChild/createTextNode
	// (IE doesn't support this, fails, and uses .text instead)
	if ( window[ id ] ) {
		jQuery.support.scriptEval =3D true;
		delete window[ id ];
	}

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete script.test;
=09
	} catch(e) {
		jQuery.support.deleteExpando =3D false;
	}

	root.removeChild( script );

	if ( div.attachEvent && div.fireEvent ) {
		div.attachEvent("onclick", function click() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			jQuery.support.noCloneEvent =3D false;
			div.detachEvent("onclick", click);
		});
		div.cloneNode(true).fireEvent("onclick");
	}

	div =3D document.createElement("div");
	div.innerHTML =3D "<input type=3D'radio' name=3D'radiotest' =
checked=3D'checked'/>";

	var fragment =3D document.createDocumentFragment();
	fragment.appendChild( div.firstChild );

	// WebKit doesn't clone checked state correctly in fragments
	jQuery.support.checkClone =3D =
fragment.cloneNode(true).cloneNode(true).lastChild.checked;

	// Figure out if the W3C box model works as expected
	// document.body must exist before we can do this
	jQuery(function() {
		var div =3D document.createElement("div");
		div.style.width =3D div.style.paddingLeft =3D "1px";

		document.body.appendChild( div );
		jQuery.boxModel =3D jQuery.support.boxModel =3D div.offsetWidth =
=3D=3D=3D 2;
		document.body.removeChild( div ).style.display =3D 'none';

		div =3D null;
	});

	// Technique from Juriy Zaytsev
	// =
http://thinkweb2.com/projects/prototype/detecting-event-support-without-b=
rowser-sniffing/
	var eventSupported =3D function( eventName ) {=20
		var el =3D document.createElement("div");=20
		eventName =3D "on" + eventName;=20

		var isSupported =3D (eventName in el);=20
		if ( !isSupported ) {=20
			el.setAttribute(eventName, "return;");=20
			isSupported =3D typeof el[eventName] =3D=3D=3D "function";=20
		}=20
		el =3D null;=20

		return isSupported;=20
	};
=09
	jQuery.support.submitBubbles =3D eventSupported("submit");
	jQuery.support.changeBubbles =3D eventSupported("change");

	// release memory in IE
	root =3D script =3D div =3D all =3D a =3D null;
})();

jQuery.props =3D {
	"for": "htmlFor",
	"class": "className",
	readonly: "readOnly",
	maxlength: "maxLength",
	cellspacing: "cellSpacing",
	rowspan: "rowSpan",
	colspan: "colSpan",
	tabindex: "tabIndex",
	usemap: "useMap",
	frameborder: "frameBorder"
};
var expando =3D "jQuery" + now(), uuid =3D 0, windowData =3D {};

jQuery.extend({
	cache: {},
=09
	expando:expando,

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		"object": true,
		"applet": true
	},

	data: function( elem, name, data ) {
		if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
			return;
		}

		elem =3D elem =3D=3D window ?
			windowData :
			elem;

		var id =3D elem[ expando ], cache =3D jQuery.cache, thisCache;

		if ( !id && typeof name =3D=3D=3D "string" && data =3D=3D=3D undefined =
) {
			return null;
		}

		// Compute a unique ID for the element
		if ( !id ) {=20
			id =3D ++uuid;
		}

		// Avoid generating a new cache unless none exists and we
		// want to manipulate it.
		if ( typeof name =3D=3D=3D "object" ) {
			elem[ expando ] =3D id;
			thisCache =3D cache[ id ] =3D jQuery.extend(true, {}, name);

		} else if ( !cache[ id ] ) {
			elem[ expando ] =3D id;
			cache[ id ] =3D {};
		}

		thisCache =3D cache[ id ];

		// Prevent overriding the named cache with undefined values
		if ( data !=3D=3D undefined ) {
			thisCache[ name ] =3D data;
		}

		return typeof name =3D=3D=3D "string" ? thisCache[ name ] : thisCache;
	},

	removeData: function( elem, name ) {
		if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
			return;
		}

		elem =3D elem =3D=3D window ?
			windowData :
			elem;

		var id =3D elem[ expando ], cache =3D jQuery.cache, thisCache =3D =
cache[ id ];

		// If we want to remove a specific section of the element's data
		if ( name ) {
			if ( thisCache ) {
				// Remove the section of cache data
				delete thisCache[ name ];

				// If we've removed all the data, remove the element's cache
				if ( jQuery.isEmptyObject(thisCache) ) {
					jQuery.removeData( elem );
				}
			}

		// Otherwise, we want to remove all of the element's data
		} else {
			if ( jQuery.support.deleteExpando ) {
				delete elem[ jQuery.expando ];

			} else if ( elem.removeAttribute ) {
				elem.removeAttribute( jQuery.expando );
			}

			// Completely remove the data cache
			delete cache[ id ];
		}
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		if ( typeof key =3D=3D=3D "undefined" && this.length ) {
			return jQuery.data( this[0] );

		} else if ( typeof key =3D=3D=3D "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		var parts =3D key.split(".");
		parts[1] =3D parts[1] ? "." + parts[1] : "";

		if ( value =3D=3D=3D undefined ) {
			var data =3D this.triggerHandler("getData" + parts[1] + "!", =
[parts[0]]);

			if ( data =3D=3D=3D undefined && this.length ) {
				data =3D jQuery.data( this[0], key );
			}
			return data =3D=3D=3D undefined && parts[1] ?
				this.data( parts[0] ) :
				data;
		} else {
			return this.trigger("setData" + parts[1] + "!", [parts[0], =
value]).each(function() {
				jQuery.data( this, key, value );
			});
		}
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});
jQuery.extend({
	queue: function( elem, type, data ) {
		if ( !elem ) {
			return;
		}

		type =3D (type || "fx") + "queue";
		var q =3D jQuery.data( elem, type );

		// Speed up dequeue by getting out quickly if this is just a lookup
		if ( !data ) {
			return q || [];
		}

		if ( !q || jQuery.isArray(data) ) {
			q =3D jQuery.data( elem, type, jQuery.makeArray(data) );

		} else {
			q.push( data );
		}

		return q;
	},

	dequeue: function( elem, type ) {
		type =3D type || "fx";

		var queue =3D jQuery.queue( elem, type ), fn =3D queue.shift();

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn =3D=3D=3D "inprogress" ) {
			fn =3D queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type =3D=3D=3D "fx" ) {
				queue.unshift("inprogress");
			}

			fn.call(elem, function() {
				jQuery.dequeue(elem, type);
			});
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		if ( typeof type !=3D=3D "string" ) {
			data =3D type;
			type =3D "fx";
		}

		if ( data =3D=3D=3D undefined ) {
			return jQuery.queue( this[0], type );
		}
		return this.each(function( i, elem ) {
			var queue =3D jQuery.queue( this, type, data );

			if ( type =3D=3D=3D "fx" && queue[0] !=3D=3D "inprogress" ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},

	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time =3D jQuery.fx ? jQuery.fx.speeds[time] || time : time;
		type =3D type || "fx";

		return this.queue( type, function() {
			var elem =3D this;
			setTimeout(function() {
				jQuery.dequeue( elem, type );
			}, time );
		});
	},

	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	}
});
var rclass =3D /[\n\t]/g,
	rspace =3D /\s+/,
	rreturn =3D /\r/g,
	rspecialurl =3D /href|src|style/,
	rtype =3D /(button|input)/i,
	rfocusable =3D /(button|input|object|select|textarea)/i,
	rclickable =3D /^(a|area)$/i,
	rradiocheck =3D /radio|checkbox/;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, name, value, true, jQuery.attr );
	},

	removeAttr: function( name, fn ) {
		return this.each(function(){
			jQuery.attr( this, name, "" );
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.removeAttribute( name );
			}
		});
	},

	addClass: function( value ) {
		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.addClass( value.call(this, i, self.attr("class")) );
			});
		}

		if ( value && typeof value =3D=3D=3D "string" ) {
			var classNames =3D (value || "").split( rspace );

			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var elem =3D this[i];

				if ( elem.nodeType =3D=3D=3D 1 ) {
					if ( !elem.className ) {
						elem.className =3D value;

					} else {
						var className =3D " " + elem.className + " ", setClass =3D =
elem.className;
						for ( var c =3D 0, cl =3D classNames.length; c < cl; c++ ) {
							if ( className.indexOf( " " + classNames[c] + " " ) < 0 ) {
								setClass +=3D " " + classNames[c];
							}
						}
						elem.className =3D jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.removeClass( value.call(this, i, self.attr("class")) );
			});
		}

		if ( (value && typeof value =3D=3D=3D "string") || value =3D=3D=3D =
undefined ) {
			var classNames =3D (value || "").split(rspace);

			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var elem =3D this[i];

				if ( elem.nodeType =3D=3D=3D 1 && elem.className ) {
					if ( value ) {
						var className =3D (" " + elem.className + " ").replace(rclass, " =
");
						for ( var c =3D 0, cl =3D classNames.length; c < cl; c++ ) {
							className =3D className.replace(" " + classNames[c] + " ", " ");
						}
						elem.className =3D jQuery.trim( className );

					} else {
						elem.className =3D "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type =3D typeof value, isBool =3D typeof stateVal =3D=3D=3D =
"boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.toggleClass( value.call(this, i, self.attr("class"), stateVal), =
stateVal );
			});
		}

		return this.each(function() {
			if ( type =3D=3D=3D "string" ) {
				// toggle individual class names
				var className, i =3D 0, self =3D jQuery(this),
					state =3D stateVal,
					classNames =3D value.split( rspace );

				while ( (className =3D classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state =3D isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type =3D=3D=3D "undefined" || type =3D=3D=3D "boolean" ) =
{
				if ( this.className ) {
					// store className if set
					jQuery.data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className =3D this.className || value =3D=3D=3D false ? "" : =
jQuery.data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className =3D " " + selector + " ";
		for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
			if ( (" " + this[i].className + " ").replace(rclass, " ").indexOf( =
className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		if ( value =3D=3D=3D undefined ) {
			var elem =3D this[0];

			if ( elem ) {
				if ( jQuery.nodeName( elem, "option" ) ) {
					return (elem.attributes.value || {}).specified ? elem.value : =
elem.text;
				}

				// We need to handle select boxes special
				if ( jQuery.nodeName( elem, "select" ) ) {
					var index =3D elem.selectedIndex,
						values =3D [],
						options =3D elem.options,
						one =3D elem.type =3D=3D=3D "select-one";

					// Nothing was selected
					if ( index < 0 ) {
						return null;
					}

					// Loop through all the selected options
					for ( var i =3D one ? index : 0, max =3D one ? index + 1 : =
options.length; i < max; i++ ) {
						var option =3D options[ i ];

						if ( option.selected ) {
							// Get the specifc value for the option
							value =3D jQuery(option).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				}

				// Handle the case where in Webkit "" is returned instead of "on" if =
a value isn't specified
				if ( rradiocheck.test( elem.type ) && !jQuery.support.checkOn ) {
					return elem.getAttribute("value") =3D=3D=3D null ? "on" : =
elem.value;
				}
			=09

				// Everything else, we just grab the value
				return (elem.value || "").replace(rreturn, "");

			}

			return undefined;
		}

		var isFunction =3D jQuery.isFunction(value);

		return this.each(function(i) {
			var self =3D jQuery(this), val =3D value;

			if ( this.nodeType !=3D=3D 1 ) {
				return;
			}

			if ( isFunction ) {
				val =3D value.call(this, i, self.val());
			}

			// Typecast each time if the value is a Function and the appended
			// value is therefore different each time.
			if ( typeof val =3D=3D=3D "number" ) {
				val +=3D "";
			}

			if ( jQuery.isArray(val) && rradiocheck.test( this.type ) ) {
				this.checked =3D jQuery.inArray( self.val(), val ) >=3D 0;

			} else if ( jQuery.nodeName( this, "select" ) ) {
				var values =3D jQuery.makeArray(val);

				jQuery( "option", this ).each(function() {
					this.selected =3D jQuery.inArray( jQuery(this).val(), values ) >=3D =
0;
				});

				if ( !values.length ) {
					this.selectedIndex =3D -1;
				}

			} else {
				this.value =3D val;
			}
		});
	}
});

jQuery.extend({
	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},
	=09
	attr: function( elem, name, value, pass ) {
		// don't set attributes on text and comment nodes
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) =
{
			return undefined;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery(elem)[name](value);
		}

		var notxml =3D elem.nodeType !=3D=3D 1 || !jQuery.isXMLDoc( elem ),
			// Whether we are setting (or getting)
			set =3D value !=3D=3D undefined;

		// Try to normalize/fix the name
		name =3D notxml && jQuery.props[ name ] || name;

		// Only do all the following if this is a node (faster for style)
		if ( elem.nodeType =3D=3D=3D 1 ) {
			// These attributes require special treatment
			var special =3D rspecialurl.test( name );

			// Safari mis-reports the default selected property of an option
			// Accessing the parent's selectedIndex property fixes it
			if ( name =3D=3D=3D "selected" && !jQuery.support.optSelected ) {
				var parent =3D elem.parentNode;
				if ( parent ) {
					parent.selectedIndex;
=09
					// Make sure that it also works with optgroups, see #5701
					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
			}

			// If applicable, access the attribute via the DOM 0 way
			if ( name in elem && notxml && !special ) {
				if ( set ) {
					// We can't allow the type property to be changed (since it causes =
problems in IE)
					if ( name =3D=3D=3D "type" && rtype.test( elem.nodeName ) && =
elem.parentNode ) {
						jQuery.error( "type property can't be changed" );
					}

					elem[ name ] =3D value;
				}

				// browsers index elements by id/name on forms, give priority to =
attributes.
				if ( jQuery.nodeName( elem, "form" ) && elem.getAttributeNode(name) =
) {
					return elem.getAttributeNode( name ).nodeValue;
				}

				// elem.tabIndex doesn't always return the correct value when it =
hasn't been explicitly set
				// =
http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabi=
ndex-values-with-javascript/
				if ( name =3D=3D=3D "tabIndex" ) {
					var attributeNode =3D elem.getAttributeNode( "tabIndex" );

					return attributeNode && attributeNode.specified ?
						attributeNode.value :
						rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName =
) && elem.href ?
							0 :
							undefined;
				}

				return elem[ name ];
			}

			if ( !jQuery.support.style && notxml && name =3D=3D=3D "style" ) {
				if ( set ) {
					elem.style.cssText =3D "" + value;
				}

				return elem.style.cssText;
			}

			if ( set ) {
				// convert the value to a string (all browsers do this but IE) see =
#1070
				elem.setAttribute( name, "" + value );
			}

			var attr =3D !jQuery.support.hrefNormalized && notxml && special ?
					// Some attributes require a special call on IE
					elem.getAttribute( name, 2 ) :
					elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return attr =3D=3D=3D null ? undefined : attr;
		}

		// elem is actually elem.style ... set the style
		// Using attr for specific style information is now deprecated. Use =
style instead.
		return jQuery.style( elem, name, value );
	}
});
var rnamespaces =3D /\.(.*)$/,
	fcleanup =3D function( nm ) {
		return nm.replace(/[^\w\s\.\|`]/g, function( ch ) {
			return "\\" + ch;
		});
	};

/*
 * A number of helper functions used for managing events.
 * Many of the ideas behind this code originated from
 * Dean Edwards' addEvent library.
 */
jQuery.event =3D {

	// Bind an event to an element
	// Original by Dean Edwards
	add: function( elem, types, handler, data ) {
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {
			return;
		}

		// For whatever reason, IE has trouble passing the window object
		// around, causing it to be cloned in the process
		if ( elem.setInterval && ( elem !=3D=3D window && !elem.frameElement ) =
) {
			elem =3D window;
		}

		var handleObjIn, handleObj;

		if ( handler.handler ) {
			handleObjIn =3D handler;
			handler =3D handleObjIn.handler;
		}

		// Make sure that the function being executed has a unique ID
		if ( !handler.guid ) {
			handler.guid =3D jQuery.guid++;
		}

		// Init the element's event structure
		var elemData =3D jQuery.data( elem );

		// If no elemData is found then we must be trying to bind to one of =
the
		// banned noData elements
		if ( !elemData ) {
			return;
		}

		var events =3D elemData.events =3D elemData.events || {},
			eventHandle =3D elemData.handle, eventHandle;

		if ( !eventHandle ) {
			elemData.handle =3D eventHandle =3D function() {
				// Handle the second event of a trigger and when
				// an event is called after a page has unloaded
				return typeof jQuery !=3D=3D "undefined" && !jQuery.event.triggered =
?
					jQuery.event.handle.apply( eventHandle.elem, arguments ) :
					undefined;
			};
		}

		// Add elem as a property of the handle function
		// This is to prevent a memory leak with non-native events in IE.
		eventHandle.elem =3D elem;

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types =3D types.split(" ");

		var type, i =3D 0, namespaces;

		while ( (type =3D types[ i++ ]) ) {
			handleObj =3D handleObjIn ?
				jQuery.extend({}, handleObjIn) :
				{ handler: handler, data: data };

			// Namespaced event handlers
			if ( type.indexOf(".") > -1 ) {
				namespaces =3D type.split(".");
				type =3D namespaces.shift();
				handleObj.namespace =3D namespaces.slice(0).sort().join(".");

			} else {
				namespaces =3D [];
				handleObj.namespace =3D "";
			}

			handleObj.type =3D type;
			handleObj.guid =3D handler.guid;

			// Get the current list of functions bound to this event
			var handlers =3D events[ type ],
				special =3D jQuery.event.special[ type ] || {};

			// Init the event handler queue
			if ( !handlers ) {
				handlers =3D events[ type ] =3D [];

				// Check for a special event handler
				// Only use addEventListener/attachEvent if the special
				// events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, =
eventHandle ) =3D=3D=3D false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}
		=09
			if ( special.add ) {=20
				special.add.call( elem, handleObj );=20

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid =3D handler.guid;
				}
			}

			// Add the function to the element's handler list
			handlers.push( handleObj );

			// Keep track of which events have been used, for global triggering
			jQuery.event.global[ type ] =3D true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem =3D null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, pos ) {
		// don't do events on text and comment nodes
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {
			return;
		}

		var ret, type, fn, i =3D 0, all, namespaces, namespace, special, =
eventType, handleObj, origType,
			elemData =3D jQuery.data( elem ),
			events =3D elemData && elemData.events;

		if ( !elemData || !events ) {
			return;
		}

		// types is actually an event object here
		if ( types && types.type ) {
			handler =3D types.handler;
			types =3D types.type;
		}

		// Unbind all events for the element
		if ( !types || typeof types =3D=3D=3D "string" && types.charAt(0) =
=3D=3D=3D "." ) {
			types =3D types || "";

			for ( type in events ) {
				jQuery.event.remove( elem, type + types );
			}

			return;
		}

		// Handle multiple events separated by a space
		// jQuery(...).unbind("mouseover mouseout", fn);
		types =3D types.split(" ");

		while ( (type =3D types[ i++ ]) ) {
			origType =3D type;
			handleObj =3D null;
			all =3D type.indexOf(".") < 0;
			namespaces =3D [];

			if ( !all ) {
				// Namespaced event handlers
				namespaces =3D type.split(".");
				type =3D namespaces.shift();

				namespace =3D new RegExp("(^|\\.)" +=20
					jQuery.map( namespaces.slice(0).sort(), fcleanup =
).join("\\.(?:.*\\.)?") + "(\\.|$)")
			}

			eventType =3D events[ type ];

			if ( !eventType ) {
				continue;
			}

			if ( !handler ) {
				for ( var j =3D 0; j < eventType.length; j++ ) {
					handleObj =3D eventType[ j ];

					if ( all || namespace.test( handleObj.namespace ) ) {
						jQuery.event.remove( elem, origType, handleObj.handler, j );
						eventType.splice( j--, 1 );
					}
				}

				continue;
			}

			special =3D jQuery.event.special[ type ] || {};

			for ( var j =3D pos || 0; j < eventType.length; j++ ) {
				handleObj =3D eventType[ j ];

				if ( handler.guid =3D=3D=3D handleObj.guid ) {
					// remove the given handler for the given type
					if ( all || namespace.test( handleObj.namespace ) ) {
						if ( pos =3D=3D null ) {
							eventType.splice( j--, 1 );
						}

						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}

					if ( pos !=3D null ) {
						break;
					}
				}
			}

			// remove generic event handler if no more handlers exist
			if ( eventType.length =3D=3D=3D 0 || pos !=3D null && =
eventType.length =3D=3D=3D 1 ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces ) =
=3D=3D=3D false ) {
					removeEvent( elem, type, elemData.handle );
				}

				ret =3D null;
				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			var handle =3D elemData.handle;
			if ( handle ) {
				handle.elem =3D null;
			}

			delete elemData.events;
			delete elemData.handle;

			if ( jQuery.isEmptyObject( elemData ) ) {
				jQuery.removeData( elem );
			}
		}
	},

	// bubbling is internal
	trigger: function( event, data, elem /*, bubbling */ ) {
		// Event object or event type
		var type =3D event.type || event,
			bubbling =3D arguments[3];

		if ( !bubbling ) {
			event =3D typeof event =3D=3D=3D "object" ?
				// jQuery.Event object
				event[expando] ? event :
				// Object literal
				jQuery.extend( jQuery.Event(type), event ) :
				// Just the event type (string)
				jQuery.Event(type);

			if ( type.indexOf("!") >=3D 0 ) {
				event.type =3D type =3D type.slice(0, -1);
				event.exclusive =3D true;
			}

			// Handle a global trigger
			if ( !elem ) {
				// Don't bubble custom events when global (to avoid too much =
overhead)
				event.stopPropagation();

				// Only trigger if we've ever bound an event for it
				if ( jQuery.event.global[ type ] ) {
					jQuery.each( jQuery.cache, function() {
						if ( this.events && this.events[type] ) {
							jQuery.event.trigger( event, data, this.handle.elem );
						}
					});
				}
			}

			// Handle triggering a single element

			// don't do events on text and comment nodes
			if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 =
) {
				return undefined;
			}

			// Clean up in case it is reused
			event.result =3D undefined;
			event.target =3D elem;

			// Clone the incoming data, if any
			data =3D jQuery.makeArray( data );
			data.unshift( event );
		}

		event.currentTarget =3D elem;

		// Trigger the event, it is assumed that "handle" is a function
		var handle =3D jQuery.data( elem, "handle" );
		if ( handle ) {
			handle.apply( elem, data );
		}

		var parent =3D elem.parentNode || elem.ownerDocument;

		// Trigger an inline bound script
		try {
			if ( !(elem && elem.nodeName && =
jQuery.noData[elem.nodeName.toLowerCase()]) ) {
				if ( elem[ "on" + type ] && elem[ "on" + type ].apply( elem, data ) =
=3D=3D=3D false ) {
					event.result =3D false;
				}
			}

		// prevent IE from throwing an error for some elements with some event =
types, see #3533
		} catch (e) {}

		if ( !event.isPropagationStopped() && parent ) {
			jQuery.event.trigger( event, data, parent, true );

		} else if ( !event.isDefaultPrevented() ) {
			var target =3D event.target, old,
				isClick =3D jQuery.nodeName(target, "a") && type =3D=3D=3D "click",
				special =3D jQuery.event.special[ type ] || {};

			if ( (!special._default || special._default.call( elem, event ) =
=3D=3D=3D false) &&=20
				!isClick && !(target && target.nodeName && =
jQuery.noData[target.nodeName.toLowerCase()]) ) {

				try {
					if ( target[ type ] ) {
						// Make sure that we don't accidentally re-trigger the onFOO =
events
						old =3D target[ "on" + type ];

						if ( old ) {
							target[ "on" + type ] =3D null;
						}

						jQuery.event.triggered =3D true;
						target[ type ]();
					}

				// prevent IE from throwing an error for some elements with some =
event types, see #3533
				} catch (e) {}

				if ( old ) {
					target[ "on" + type ] =3D old;
				}

				jQuery.event.triggered =3D false;
			}
		}
	},

	handle: function( event ) {
		var all, handlers, namespaces, namespace, events;

		event =3D arguments[0] =3D jQuery.event.fix( event || window.event );
		event.currentTarget =3D this;

		// Namespaced event handlers
		all =3D event.type.indexOf(".") < 0 && !event.exclusive;

		if ( !all ) {
			namespaces =3D event.type.split(".");
			event.type =3D namespaces.shift();
			namespace =3D new RegExp("(^|\\.)" + =
namespaces.slice(0).sort().join("\\.(?:.*\\.)?") + "(\\.|$)");
		}

		var events =3D jQuery.data(this, "events"), handlers =3D events[ =
event.type ];

		if ( events && handlers ) {
			// Clone the handlers to prevent manipulation
			handlers =3D handlers.slice(0);

			for ( var j =3D 0, l =3D handlers.length; j < l; j++ ) {
				var handleObj =3D handlers[ j ];

				// Filter the functions by class
				if ( all || namespace.test( handleObj.namespace ) ) {
					// Pass in a reference to the handler function itself
					// So that we can later remove it
					event.handler =3D handleObj.handler;
					event.data =3D handleObj.data;
					event.handleObj =3D handleObj;
=09
					var ret =3D handleObj.handler.apply( this, arguments );

					if ( ret !=3D=3D undefined ) {
						event.result =3D ret;
						if ( ret =3D=3D=3D false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}

					if ( event.isImmediatePropagationStopped() ) {
						break;
					}
				}
			}
		}

		return event.result;
	},

	props: "altKey attrChange attrName bubbles button cancelable charCode =
clientX clientY ctrlKey currentTarget data detail eventPhase fromElement =
handler keyCode layerX layerY metaKey newValue offsetX offsetY =
originalTarget pageX pageY prevValue relatedNode relatedTarget screenX =
screenY shiftKey srcElement target toElement view wheelDelta =
which".split(" "),

	fix: function( event ) {
		if ( event[ expando ] ) {
			return event;
		}

		// store a copy of the original event object
		// and "clone" to set read-only properties
		var originalEvent =3D event;
		event =3D jQuery.Event( originalEvent );

		for ( var i =3D this.props.length, prop; i; ) {
			prop =3D this.props[ --i ];
			event[ prop ] =3D originalEvent[ prop ];
		}

		// Fix target property, if necessary
		if ( !event.target ) {
			event.target =3D event.srcElement || document; // Fixes #1925 where =
srcElement might not be defined either
		}

		// check if target is a textnode (safari)
		if ( event.target.nodeType =3D=3D=3D 3 ) {
			event.target =3D event.target.parentNode;
		}

		// Add relatedTarget, if necessary
		if ( !event.relatedTarget && event.fromElement ) {
			event.relatedTarget =3D event.fromElement =3D=3D=3D event.target ? =
event.toElement : event.fromElement;
		}

		// Calculate pageX/Y if missing and clientX/Y available
		if ( event.pageX =3D=3D null && event.clientX !=3D null ) {
			var doc =3D document.documentElement, body =3D document.body;
			event.pageX =3D event.clientX + (doc && doc.scrollLeft || body && =
body.scrollLeft || 0) - (doc && doc.clientLeft || body && =
body.clientLeft || 0);
			event.pageY =3D event.clientY + (doc && doc.scrollTop  || body && =
body.scrollTop  || 0) - (doc && doc.clientTop  || body && body.clientTop =
 || 0);
		}

		// Add which for key events
		if ( !event.which && ((event.charCode || event.charCode =3D=3D=3D 0) ? =
event.charCode : event.keyCode) ) {
			event.which =3D event.charCode || event.keyCode;
		}

		// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for =
Macs)
		if ( !event.metaKey && event.ctrlKey ) {
			event.metaKey =3D event.ctrlKey;
		}

		// Add which for click: 1 =3D=3D=3D left; 2 =3D=3D=3D middle; 3 =
=3D=3D=3D right
		// Note: button is not normalized, so don't use it
		if ( !event.which && event.button !=3D=3D undefined ) {
			event.which =3D (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( =
event.button & 4 ? 2 : 0 ) ));
		}

		return event;
	},

	// Deprecated, use jQuery.guid instead
	guid: 1E8,

	// Deprecated, use jQuery.proxy instead
	proxy: jQuery.proxy,

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady,
			teardown: jQuery.noop
		},

		live: {
			add: function( handleObj ) {
				jQuery.event.add( this, handleObj.origType, jQuery.extend({}, =
handleObj, {handler: liveHandler}) );=20
			},

			remove: function( handleObj ) {
				var remove =3D true,
					type =3D handleObj.origType.replace(rnamespaces, "");
			=09
				jQuery.each( jQuery.data(this, "events").live || [], function() {
					if ( type =3D=3D=3D this.origType.replace(rnamespaces, "") ) {
						remove =3D false;
						return false;
					}
				});

				if ( remove ) {
					jQuery.event.remove( this, handleObj.origType, liveHandler );
				}
			}

		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( this.setInterval ) {
					this.onbeforeunload =3D eventHandle;
				}

				return false;
			},
			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload =3D=3D=3D eventHandle ) {
					this.onbeforeunload =3D null;
				}
			}
		}
	}
};

var removeEvent =3D document.removeEventListener ?
	function( elem, type, handle ) {
		elem.removeEventListener( type, handle, false );
	} :=20
	function( elem, type, handle ) {
		elem.detachEvent( "on" + type, handle );
	};

jQuery.Event =3D function( src ) {
	// Allow instantiation without the 'new' keyword
	if ( !this.preventDefault ) {
		return new jQuery.Event( src );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent =3D src;
		this.type =3D src.type;
	// Event type
	} else {
		this.type =3D src;
	}

	// timeStamp is buggy for some events on Firefox(#3843)
	// So we won't rely on the native value
	this.timeStamp =3D now();

	// Mark it as fixed
	this[ expando ] =3D true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript =
Language Binding
// =
http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-bind=
ing.html
jQuery.Event.prototype =3D {
	preventDefault: function() {
		this.isDefaultPrevented =3D returnTrue;

		var e =3D this.originalEvent;
		if ( !e ) {
			return;
		}
	=09
		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();
		}
		// otherwise set the returnValue property of the original event to =
false (IE)
		e.returnValue =3D false;
	},
	stopPropagation: function() {
		this.isPropagationStopped =3D returnTrue;

		var e =3D this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to =
true (IE)
		e.cancelBubble =3D true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped =3D returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Checks if an event happened on an element within another element
// Used in jQuery.event.special.mouseenter and mouseleave handlers
var withinElement =3D function( event ) {
	// Check if mouse(over|out) are still within the same parent element
	var parent =3D event.relatedTarget;

	// Firefox sometimes assigns relatedTarget a XUL element
	// which we cannot access the parentNode property of
	try {
		// Traverse up the tree
		while ( parent && parent !=3D=3D this ) {
			parent =3D parent.parentNode;
		}

		if ( parent !=3D=3D this ) {
			// set the correct event type
			event.type =3D event.data;

			// handle event if we actually just moused on to a non sub-element
			jQuery.event.handle.apply( this, arguments );
		}

	// assuming we've left the element since we most likely mousedover a =
xul element
	} catch(e) { }
},

// In case of event delegation, we only need to rename the event.type,
// liveHandler will take care of the rest.
delegate =3D function( event ) {
	event.type =3D event.data;
	jQuery.event.handle.apply( this, arguments );
};

// Create mouseenter and mouseleave events
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] =3D {
		setup: function( data ) {
			jQuery.event.add( this, fix, data && data.selector ? delegate : =
withinElement, orig );
		},
		teardown: function( data ) {
			jQuery.event.remove( this, fix, data && data.selector ? delegate : =
withinElement );
		}
	};
});

// submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit =3D {
		setup: function( data, namespaces ) {
			if ( this.nodeName.toLowerCase() !=3D=3D "form" ) {
				jQuery.event.add(this, "click.specialSubmit", function( e ) {
					var elem =3D e.target, type =3D elem.type;

					if ( (type =3D=3D=3D "submit" || type =3D=3D=3D "image") && jQuery( =
elem ).closest("form").length ) {
						return trigger( "submit", this, arguments );
					}
				});
	=20
				jQuery.event.add(this, "keypress.specialSubmit", function( e ) {
					var elem =3D e.target, type =3D elem.type;

					if ( (type =3D=3D=3D "text" || type =3D=3D=3D "password") && =
jQuery( elem ).closest("form").length && e.keyCode =3D=3D=3D 13 ) {
						return trigger( "submit", this, arguments );
					}
				});

			} else {
				return false;
			}
		},

		teardown: function( namespaces ) {
			jQuery.event.remove( this, ".specialSubmit" );
		}
	};

}

// change delegation, happens here so we have bind.
if ( !jQuery.support.changeBubbles ) {

	var formElems =3D /textarea|input|select/i,

	changeFilters,

	getVal =3D function( elem ) {
		var type =3D elem.type, val =3D elem.value;

		if ( type =3D=3D=3D "radio" || type =3D=3D=3D "checkbox" ) {
			val =3D elem.checked;

		} else if ( type =3D=3D=3D "select-multiple" ) {
			val =3D elem.selectedIndex > -1 ?
				jQuery.map( elem.options, function( elem ) {
					return elem.selected;
				}).join("-") :
				"";

		} else if ( elem.nodeName.toLowerCase() =3D=3D=3D "select" ) {
			val =3D elem.selectedIndex;
		}

		return val;
	},

	testChange =3D function testChange( e ) {
		var elem =3D e.target, data, val;

		if ( !formElems.test( elem.nodeName ) || elem.readOnly ) {
			return;
		}

		data =3D jQuery.data( elem, "_change_data" );
		val =3D getVal(elem);

		// the current data will be also retrieved by beforeactivate
		if ( e.type !=3D=3D "focusout" || elem.type !=3D=3D "radio" ) {
			jQuery.data( elem, "_change_data", val );
		}
	=09
		if ( data =3D=3D=3D undefined || val =3D=3D=3D data ) {
			return;
		}

		if ( data !=3D null || val ) {
			e.type =3D "change";
			return jQuery.event.trigger( e, arguments[1], elem );
		}
	};

	jQuery.event.special.change =3D {
		filters: {
			focusout: testChange,=20

			click: function( e ) {
				var elem =3D e.target, type =3D elem.type;

				if ( type =3D=3D=3D "radio" || type =3D=3D=3D "checkbox" || =
elem.nodeName.toLowerCase() =3D=3D=3D "select" ) {
					return testChange.call( this, e );
				}
			},

			// Change has to be called before submit
			// Keydown will be called before keypress, which is used in =
submit-event delegation
			keydown: function( e ) {
				var elem =3D e.target, type =3D elem.type;

				if ( (e.keyCode =3D=3D=3D 13 && elem.nodeName.toLowerCase() !=3D=3D =
"textarea") ||
					(e.keyCode =3D=3D=3D 32 && (type =3D=3D=3D "checkbox" || type =
=3D=3D=3D "radio")) ||
					type =3D=3D=3D "select-multiple" ) {
					return testChange.call( this, e );
				}
			},

			// Beforeactivate happens also before the previous element is blurred
			// with this event you can't trigger a change event, but you can =
store
			// information/focus[in] is not needed anymore
			beforeactivate: function( e ) {
				var elem =3D e.target;
				jQuery.data( elem, "_change_data", getVal(elem) );
			}
		},

		setup: function( data, namespaces ) {
			if ( this.type =3D=3D=3D "file" ) {
				return false;
			}

			for ( var type in changeFilters ) {
				jQuery.event.add( this, type + ".specialChange", changeFilters[type] =
);
			}

			return formElems.test( this.nodeName );
		},

		teardown: function( namespaces ) {
			jQuery.event.remove( this, ".specialChange" );

			return formElems.test( this.nodeName );
		}
	};

	changeFilters =3D jQuery.event.special.change.filters;
}

function trigger( type, elem, args ) {
	args[0].type =3D type;
	return jQuery.event.handle.apply( elem, args );
}

// Create "bubbling" focus and blur events
if ( document.addEventListener ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix =
) {
		jQuery.event.special[ fix ] =3D {
			setup: function() {
				this.addEventListener( orig, handler, true );
			},=20
			teardown: function() {=20
				this.removeEventListener( orig, handler, true );
			}
		};

		function handler( e ) {=20
			e =3D jQuery.event.fix( e );
			e.type =3D fix;
			return jQuery.event.handle.call( this, e );
		}
	});
}

jQuery.each(["bind", "one"], function( i, name ) {
	jQuery.fn[ name ] =3D function( type, data, fn ) {
		// Handle object literals
		if ( typeof type =3D=3D=3D "object" ) {
			for ( var key in type ) {
				this[ name ](key, data, type[key], fn);
			}
			return this;
		}
	=09
		if ( jQuery.isFunction( data ) ) {
			fn =3D data;
			data =3D undefined;
		}

		var handler =3D name =3D=3D=3D "one" ? jQuery.proxy( fn, function( =
event ) {
			jQuery( this ).unbind( event, handler );
			return fn.apply( this, arguments );
		}) : fn;

		if ( type =3D=3D=3D "unload" && name !=3D=3D "one" ) {
			this.one( type, data, fn );

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				jQuery.event.add( this[i], type, handler, data );
			}
		}

		return this;
	};
});

jQuery.fn.extend({
	unbind: function( type, fn ) {
		// Handle object literals
		if ( typeof type =3D=3D=3D "object" && !type.preventDefault ) {
			for ( var key in type ) {
				this.unbind(key, type[key]);
			}

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				jQuery.event.remove( this[i], type, fn );
			}
		}

		return this;
	},
=09
	delegate: function( selector, types, data, fn ) {
		return this.live( types, data, fn, selector );
	},
=09
	undelegate: function( selector, types, fn ) {
		if ( arguments.length =3D=3D=3D 0 ) {
				return this.unbind( "live" );
	=09
		} else {
			return this.die( types, null, fn, selector );
		}
	},
=09
	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},

	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			var event =3D jQuery.Event( type );
			event.preventDefault();
			event.stopPropagation();
			jQuery.event.trigger( event, data, this[0] );
			return event.result;
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args =3D arguments, i =3D 1;

		// link all the functions, so any of them can unbind this click =
handler
		while ( i < args.length ) {
			jQuery.proxy( fn, args[ i++ ] );
		}

		return this.click( jQuery.proxy( fn, function( event ) {
			// Figure out which function to execute
			var lastToggle =3D ( jQuery.data( this, "lastToggle" + fn.guid ) || 0 =
) % i;
			jQuery.data( this, "lastToggle" + fn.guid, lastToggle + 1 );

			// Make sure that clicks stop
			event.preventDefault();

			// and execute the function
			return args[ lastToggle ].apply( this, arguments ) || false;
		}));
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

var liveMap =3D {
	focus: "focusin",
	blur: "focusout",
	mouseenter: "mouseover",
	mouseleave: "mouseout"
};

jQuery.each(["live", "die"], function( i, name ) {
	jQuery.fn[ name ] =3D function( types, data, fn, origSelector /* =
Internal Use Only */ ) {
		var type, i =3D 0, match, namespaces, preType,
			selector =3D origSelector || this.selector,
			context =3D origSelector ? this : jQuery( this.context );

		if ( jQuery.isFunction( data ) ) {
			fn =3D data;
			data =3D undefined;
		}

		types =3D (types || "").split(" ");

		while ( (type =3D types[ i++ ]) !=3D null ) {
			match =3D rnamespaces.exec( type );
			namespaces =3D "";

			if ( match )  {
				namespaces =3D match[0];
				type =3D type.replace( rnamespaces, "" );
			}

			if ( type =3D=3D=3D "hover" ) {
				types.push( "mouseenter" + namespaces, "mouseleave" + namespaces );
				continue;
			}

			preType =3D type;

			if ( type =3D=3D=3D "focus" || type =3D=3D=3D "blur" ) {
				types.push( liveMap[ type ] + namespaces );
				type =3D type + namespaces;

			} else {
				type =3D (liveMap[ type ] || type) + namespaces;
			}

			if ( name =3D=3D=3D "live" ) {
				// bind live handler
				context.each(function(){
					jQuery.event.add( this, liveConvert( type, selector ),
						{ data: data, selector: selector, handler: fn, origType: type, =
origHandler: fn, preType: preType } );
				});

			} else {
				// unbind live handler
				context.unbind( liveConvert( type, selector ), fn );
			}
		}
	=09
		return this;
	}
});

function liveHandler( event ) {
	var stop, elems =3D [], selectors =3D [], args =3D arguments,
		related, match, handleObj, elem, j, i, l, data,
		events =3D jQuery.data( this, "events" );

	// Make sure we avoid non-left-click bubbling in Firefox (#3861)
	if ( event.liveFired =3D=3D=3D this || !events || !events.live || =
event.button && event.type =3D=3D=3D "click" ) {
		return;
	}

	event.liveFired =3D this;

	var live =3D events.live.slice(0);

	for ( j =3D 0; j < live.length; j++ ) {
		handleObj =3D live[j];

		if ( handleObj.origType.replace( rnamespaces, "" ) =3D=3D=3D =
event.type ) {
			selectors.push( handleObj.selector );

		} else {
			live.splice( j--, 1 );
		}
	}

	match =3D jQuery( event.target ).closest( selectors, =
event.currentTarget );

	for ( i =3D 0, l =3D match.length; i < l; i++ ) {
		for ( j =3D 0; j < live.length; j++ ) {
			handleObj =3D live[j];

			if ( match[i].selector =3D=3D=3D handleObj.selector ) {
				elem =3D match[i].elem;
				related =3D null;

				// Those two events require additional checking
				if ( handleObj.preType =3D=3D=3D "mouseenter" || handleObj.preType =
=3D=3D=3D "mouseleave" ) {
					related =3D jQuery( event.relatedTarget ).closest( =
handleObj.selector )[0];
				}

				if ( !related || related !=3D=3D elem ) {
					elems.push({ elem: elem, handleObj: handleObj });
				}
			}
		}
	}

	for ( i =3D 0, l =3D elems.length; i < l; i++ ) {
		match =3D elems[i];
		event.currentTarget =3D match.elem;
		event.data =3D match.handleObj.data;
		event.handleObj =3D match.handleObj;

		if ( match.handleObj.origHandler.apply( match.elem, args ) =3D=3D=3D =
false ) {
			stop =3D false;
			break;
		}
	}

	return stop;
}

function liveConvert( type, selector ) {
	return "live." + (type && type !=3D=3D "*" ? type + "." : "") + =
selector.replace(/\./g, "`").replace(/ /g, "&");
}

jQuery.each( ("blur focus focusin focusout load resize scroll unload =
click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " =
+
	"change select submit keydown keypress keyup error").split(" "), =
function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] =3D function( fn ) {
		return fn ? this.bind( name, fn ) : this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] =3D true;
	}
});

// Prevent memory leaks in IE
// Window isn't included so as not to unbind existing unload events
// More info:
//  - http://isaacschlueter.com/2006/10/msie-memory-leaks/
if ( window.attachEvent && !window.addEventListener ) {
	window.attachEvent("onunload", function() {
		for ( var id in jQuery.cache ) {
			if ( jQuery.cache[ id ].handle ) {
				// Try/Catch is to handle iframes being unloaded, see #4280
				try {
					jQuery.event.remove( jQuery.cache[ id ].handle.elem );
				} catch(e) {}
			}
		}
	});
}
/*!
 * Sizzle CSS Selector Engine - v1.0
 *  Copyright 2009, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker =3D =
/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+=
)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	done =3D 0,
	toString =3D Object.prototype.toString,
	hasDuplicate =3D false,
	baseHasDuplicate =3D true;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function(){
	baseHasDuplicate =3D false;
	return 0;
});

var Sizzle =3D function(selector, context, results, seed) {
	results =3D results || [];
	var origContext =3D context =3D context || document;

	if ( context.nodeType !=3D=3D 1 && context.nodeType !=3D=3D 9 ) {
		return [];
	}
=09
	if ( !selector || typeof selector !=3D=3D "string" ) {
		return results;
	}

	var parts =3D [], m, set, checkSet, extra, prune =3D true, contextXML =
=3D isXML(context),
		soFar =3D selector;
=09
	// Reset the position of the chunker regexp (start from head)
	while ( (chunker.exec(""), m =3D chunker.exec(soFar)) !=3D=3D null ) {
		soFar =3D m[3];
	=09
		parts.push( m[1] );
	=09
		if ( m[2] ) {
			extra =3D m[3];
			break;
		}
	}

	if ( parts.length > 1 && origPOS.exec( selector ) ) {
		if ( parts.length =3D=3D=3D 2 && Expr.relative[ parts[0] ] ) {
			set =3D posProcess( parts[0] + parts[1], context );
		} else {
			set =3D Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector =3D parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector +=3D parts.shift();
				}
			=09
				set =3D posProcess( selector, set );
			}
		}
	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType =3D=3D=3D 9 && =
!contextXML &&
				Expr.match.ID.test(parts[0]) && =
!Expr.match.ID.test(parts[parts.length - 1]) ) {
			var ret =3D Sizzle.find( parts.shift(), context, contextXML );
			context =3D ret.expr ? Sizzle.filter( ret.expr, ret.set )[0] : =
ret.set[0];
		}

		if ( context ) {
			var ret =3D seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length =3D=3D=3D 1 && (parts[0] =
=3D=3D=3D "~" || parts[0] =3D=3D=3D "+") && context.parentNode ? =
context.parentNode : context, contextXML );
			set =3D ret.expr ? Sizzle.filter( ret.expr, ret.set ) : ret.set;

			if ( parts.length > 0 ) {
				checkSet =3D makeArray(set);
			} else {
				prune =3D false;
			}

			while ( parts.length ) {
				var cur =3D parts.pop(), pop =3D cur;

				if ( !Expr.relative[ cur ] ) {
					cur =3D "";
				} else {
					pop =3D parts.pop();
				}

				if ( pop =3D=3D null ) {
					pop =3D context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}
		} else {
			checkSet =3D parts =3D [];
		}
	}

	if ( !checkSet ) {
		checkSet =3D set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) =3D=3D=3D "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );
		} else if ( context && context.nodeType =3D=3D=3D 1 ) {
			for ( var i =3D 0; checkSet[i] !=3D null; i++ ) {
				if ( checkSet[i] && (checkSet[i] =3D=3D=3D true || =
checkSet[i].nodeType =3D=3D=3D 1 && contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}
		} else {
			for ( var i =3D 0; checkSet[i] !=3D null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType =3D=3D=3D 1 ) {
					results.push( set[i] );
				}
			}
		}
	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort =3D function(results){
	if ( sortOrder ) {
		hasDuplicate =3D baseHasDuplicate;
		results.sort(sortOrder);

		if ( hasDuplicate ) {
			for ( var i =3D 1; i < results.length; i++ ) {
				if ( results[i] =3D=3D=3D results[i-1] ) {
					results.splice(i--, 1);
				}
			}
		}
	}

	return results;
};

Sizzle.matches =3D function(expr, set){
	return Sizzle(expr, null, null, set);
};

Sizzle.find =3D function(expr, context, isXML){
	var set, match;

	if ( !expr ) {
		return [];
	}

	for ( var i =3D 0, l =3D Expr.order.length; i < l; i++ ) {
		var type =3D Expr.order[i], match;
	=09
		if ( (match =3D Expr.leftMatch[ type ].exec( expr )) ) {
			var left =3D match[1];
			match.splice(1,1);

			if ( left.substr( left.length - 1 ) !=3D=3D "\\" ) {
				match[1] =3D (match[1] || "").replace(/\\/g, "");
				set =3D Expr.find[ type ]( match, context, isXML );
				if ( set !=3D null ) {
					expr =3D expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set =3D context.getElementsByTagName("*");
	}

	return {set: set, expr: expr};
};

Sizzle.filter =3D function(expr, set, inplace, not){
	var old =3D expr, result =3D [], curLoop =3D set, match, anyFound,
		isXMLFilter =3D set && set[0] && isXML(set[0]);

	while ( expr && set.length ) {
		for ( var type in Expr.filter ) {
			if ( (match =3D Expr.leftMatch[ type ].exec( expr )) !=3D null && =
match[2] ) {
				var filter =3D Expr.filter[ type ], found, item, left =3D match[1];
				anyFound =3D false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) =3D=3D=3D "\\" ) {
					continue;
				}

				if ( curLoop =3D=3D=3D result ) {
					result =3D [];
				}

				if ( Expr.preFilter[ type ] ) {
					match =3D Expr.preFilter[ type ]( match, curLoop, inplace, result, =
not, isXMLFilter );

					if ( !match ) {
						anyFound =3D found =3D true;
					} else if ( match =3D=3D=3D true ) {
						continue;
					}
				}

				if ( match ) {
					for ( var i =3D 0; (item =3D curLoop[i]) !=3D null; i++ ) {
						if ( item ) {
							found =3D filter( item, match, i, curLoop );
							var pass =3D not ^ !!found;

							if ( inplace && found !=3D null ) {
								if ( pass ) {
									anyFound =3D true;
								} else {
									curLoop[i] =3D false;
								}
							} else if ( pass ) {
								result.push( item );
								anyFound =3D true;
							}
						}
					}
				}

				if ( found !=3D=3D undefined ) {
					if ( !inplace ) {
						curLoop =3D result;
					}

					expr =3D expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr =3D=3D=3D old ) {
			if ( anyFound =3D=3D null ) {
				Sizzle.error( expr );
			} else {
				break;
			}
		}

		old =3D expr;
	}

	return curLoop;
};

Sizzle.error =3D function( msg ) {
	throw "Syntax error, unrecognized expression: " + msg;
};

var Expr =3D Sizzle.selectors =3D {
	order: [ "ID", "NAME", "TAG" ],
	match: {
		ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		NAME: /\[name=3D['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,
		ATTR: =
/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]=
/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^-]|$)/,
		PSEUDO: =
/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\)=
)?/
	},
	leftMatch: {},
	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},
	attrHandle: {
		href: function(elem){
			return elem.getAttribute("href");
		}
	},
	relative: {
		"+": function(checkSet, part){
			var isPartStr =3D typeof part =3D=3D=3D "string",
				isTag =3D isPartStr && !/\W/.test(part),
				isPartStrNotTag =3D isPartStr && !isTag;

			if ( isTag ) {
				part =3D part.toLowerCase();
			}

			for ( var i =3D 0, l =3D checkSet.length, elem; i < l; i++ ) {
				if ( (elem =3D checkSet[i]) ) {
					while ( (elem =3D elem.previousSibling) && elem.nodeType !=3D=3D 1 =
) {}

					checkSet[i] =3D isPartStrNotTag || elem && =
elem.nodeName.toLowerCase() =3D=3D=3D part ?
						elem || false :
						elem =3D=3D=3D part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},
		">": function(checkSet, part){
			var isPartStr =3D typeof part =3D=3D=3D "string";

			if ( isPartStr && !/\W/.test(part) ) {
				part =3D part.toLowerCase();

				for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
					var elem =3D checkSet[i];
					if ( elem ) {
						var parent =3D elem.parentNode;
						checkSet[i] =3D parent.nodeName.toLowerCase() =3D=3D=3D part ? =
parent : false;
					}
				}
			} else {
				for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
					var elem =3D checkSet[i];
					if ( elem ) {
						checkSet[i] =3D isPartStr ?
							elem.parentNode :
							elem.parentNode =3D=3D=3D part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},
		"": function(checkSet, part, isXML){
			var doneName =3D done++, checkFn =3D dirCheck;

			if ( typeof part =3D=3D=3D "string" && !/\W/.test(part) ) {
				var nodeCheck =3D part =3D part.toLowerCase();
				checkFn =3D dirNodeCheck;
			}

			checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML);
		},
		"~": function(checkSet, part, isXML){
			var doneName =3D done++, checkFn =3D dirCheck;

			if ( typeof part =3D=3D=3D "string" && !/\W/.test(part) ) {
				var nodeCheck =3D part =3D part.toLowerCase();
				checkFn =3D dirNodeCheck;
			}

			checkFn("previousSibling", part, doneName, checkSet, nodeCheck, =
isXML);
		}
	},
	find: {
		ID: function(match, context, isXML){
			if ( typeof context.getElementById !=3D=3D "undefined" && !isXML ) {
				var m =3D context.getElementById(match[1]);
				return m ? [m] : [];
			}
		},
		NAME: function(match, context){
			if ( typeof context.getElementsByName !=3D=3D "undefined" ) {
				var ret =3D [], results =3D context.getElementsByName(match[1]);

				for ( var i =3D 0, l =3D results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") =3D=3D=3D match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length =3D=3D=3D 0 ? null : ret;
			}
		},
		TAG: function(match, context){
			return context.getElementsByTagName(match[1]);
		}
	},
	preFilter: {
		CLASS: function(match, curLoop, inplace, result, not, isXML){
			match =3D " " + match[1].replace(/\\/g, "") + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i =3D 0, elem; (elem =3D curLoop[i]) !=3D null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " =
").replace(/[\t\n]/g, " ").indexOf(match) >=3D 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}
					} else if ( inplace ) {
						curLoop[i] =3D false;
					}
				}
			}

			return false;
		},
		ID: function(match){
			return match[1].replace(/\\/g, "");
		},
		TAG: function(match, curLoop){
			return match[1].toLowerCase();
		},
		CHILD: function(match){
			if ( match[1] =3D=3D=3D "nth" ) {
				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', =
'-n+6'
				var test =3D /(-?)(\d*)n((?:\+|-)?\d*)/.exec(
					match[2] =3D=3D=3D "even" && "2n" || match[2] =3D=3D=3D "odd" && =
"2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are =
negative
				match[2] =3D (test[1] + (test[2] || 1)) - 0;
				match[3] =3D test[3] - 0;
			}

			// TODO: Move to normal caching system
			match[0] =3D done++;

			return match;
		},
		ATTR: function(match, curLoop, inplace, result, not, isXML){
			var name =3D match[1].replace(/\\/g, "");
		=09
			if ( !isXML && Expr.attrMap[name] ) {
				match[1] =3D Expr.attrMap[name];
			}

			if ( match[2] =3D=3D=3D "~=3D" ) {
				match[4] =3D " " + match[4] + " ";
			}

			return match;
		},
		PSEUDO: function(match, curLoop, inplace, result, not){
			if ( match[1] =3D=3D=3D "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || =
/^\w/.test(match[3]) ) {
					match[3] =3D Sizzle(match[3], null, null, curLoop);
				} else {
					var ret =3D Sizzle.filter(match[3], curLoop, inplace, true ^ not);
					if ( !inplace ) {
						result.push.apply( result, ret );
					}
					return false;
				}
			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( =
match[0] ) ) {
				return true;
			}
		=09
			return match;
		},
		POS: function(match){
			match.unshift( true );
			return match;
		}
	},
	filters: {
		enabled: function(elem){
			return elem.disabled =3D=3D=3D false && elem.type !=3D=3D "hidden";
		},
		disabled: function(elem){
			return elem.disabled =3D=3D=3D true;
		},
		checked: function(elem){
			return elem.checked =3D=3D=3D true;
		},
		selected: function(elem){
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			elem.parentNode.selectedIndex;
			return elem.selected =3D=3D=3D true;
		},
		parent: function(elem){
			return !!elem.firstChild;
		},
		empty: function(elem){
			return !elem.firstChild;
		},
		has: function(elem, i, match){
			return !!Sizzle( match[3], elem ).length;
		},
		header: function(elem){
			return /h\d/i.test( elem.nodeName );
		},
		text: function(elem){
			return "text" =3D=3D=3D elem.type;
		},
		radio: function(elem){
			return "radio" =3D=3D=3D elem.type;
		},
		checkbox: function(elem){
			return "checkbox" =3D=3D=3D elem.type;
		},
		file: function(elem){
			return "file" =3D=3D=3D elem.type;
		},
		password: function(elem){
			return "password" =3D=3D=3D elem.type;
		},
		submit: function(elem){
			return "submit" =3D=3D=3D elem.type;
		},
		image: function(elem){
			return "image" =3D=3D=3D elem.type;
		},
		reset: function(elem){
			return "reset" =3D=3D=3D elem.type;
		},
		button: function(elem){
			return "button" =3D=3D=3D elem.type || elem.nodeName.toLowerCase() =
=3D=3D=3D "button";
		},
		input: function(elem){
			return /input|select|textarea|button/i.test(elem.nodeName);
		}
	},
	setFilters: {
		first: function(elem, i){
			return i =3D=3D=3D 0;
		},
		last: function(elem, i, match, array){
			return i =3D=3D=3D array.length - 1;
		},
		even: function(elem, i){
			return i % 2 =3D=3D=3D 0;
		},
		odd: function(elem, i){
			return i % 2 =3D=3D=3D 1;
		},
		lt: function(elem, i, match){
			return i < match[3] - 0;
		},
		gt: function(elem, i, match){
			return i > match[3] - 0;
		},
		nth: function(elem, i, match){
			return match[3] - 0 =3D=3D=3D i;
		},
		eq: function(elem, i, match){
			return match[3] - 0 =3D=3D=3D i;
		}
	},
	filter: {
		PSEUDO: function(elem, match, i, array){
			var name =3D match[1], filter =3D Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			} else if ( name =3D=3D=3D "contains" ) {
				return (elem.textContent || elem.innerText || getText([ elem ]) || =
"").indexOf(match[3]) >=3D 0;
			} else if ( name =3D=3D=3D "not" ) {
				var not =3D match[3];

				for ( var i =3D 0, l =3D not.length; i < l; i++ ) {
					if ( not[i] =3D=3D=3D elem ) {
						return false;
					}
				}

				return true;
			} else {
				Sizzle.error( "Syntax error, unrecognized expression: " + name );
			}
		},
		CHILD: function(elem, match){
			var type =3D match[1], node =3D elem;
			switch (type) {
				case 'only':
				case 'first':
					while ( (node =3D node.previousSibling) )	 {
						if ( node.nodeType =3D=3D=3D 1 ) {=20
							return false;=20
						}
					}
					if ( type =3D=3D=3D "first" ) {=20
						return true;=20
					}
					node =3D elem;
				case 'last':
					while ( (node =3D node.nextSibling) )	 {
						if ( node.nodeType =3D=3D=3D 1 ) {=20
							return false;=20
						}
					}
					return true;
				case 'nth':
					var first =3D match[2], last =3D match[3];

					if ( first =3D=3D=3D 1 && last =3D=3D=3D 0 ) {
						return true;
					}
				=09
					var doneName =3D match[0],
						parent =3D elem.parentNode;
=09
					if ( parent && (parent.sizcache !=3D=3D doneName || =
!elem.nodeIndex) ) {
						var count =3D 0;
						for ( node =3D parent.firstChild; node; node =3D node.nextSibling =
) {
							if ( node.nodeType =3D=3D=3D 1 ) {
								node.nodeIndex =3D ++count;
							}
						}=20
						parent.sizcache =3D doneName;
					}
				=09
					var diff =3D elem.nodeIndex - last;
					if ( first =3D=3D=3D 0 ) {
						return diff =3D=3D=3D 0;
					} else {
						return ( diff % first =3D=3D=3D 0 && diff / first >=3D 0 );
					}
			}
		},
		ID: function(elem, match){
			return elem.nodeType =3D=3D=3D 1 && elem.getAttribute("id") =3D=3D=3D =
match;
		},
		TAG: function(elem, match){
			return (match =3D=3D=3D "*" && elem.nodeType =3D=3D=3D 1) || =
elem.nodeName.toLowerCase() =3D=3D=3D match;
		},
		CLASS: function(elem, match){
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},
		ATTR: function(elem, match){
			var name =3D match[1],
				result =3D Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] !=3D null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value =3D result + "",
				type =3D match[2],
				check =3D match[4];

			return result =3D=3D null ?
				type =3D=3D=3D "!=3D" :
				type =3D=3D=3D "=3D" ?
				value =3D=3D=3D check :
				type =3D=3D=3D "*=3D" ?
				value.indexOf(check) >=3D 0 :
				type =3D=3D=3D "~=3D" ?
				(" " + value + " ").indexOf(check) >=3D 0 :
				!check ?
				value && result !=3D=3D false :
				type =3D=3D=3D "!=3D" ?
				value !=3D=3D check :
				type =3D=3D=3D "^=3D" ?
				value.indexOf(check) =3D=3D=3D 0 :
				type =3D=3D=3D "$=3D" ?
				value.substr(value.length - check.length) =3D=3D=3D check :
				type =3D=3D=3D "|=3D" ?
				value =3D=3D=3D check || value.substr(0, check.length + 1) =3D=3D=3D =
check + "-" :
				false;
		},
		POS: function(elem, match, i, array){
			var name =3D match[2], filter =3D Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS =3D Expr.match.POS;

for ( var type in Expr.match ) {
	Expr.match[ type ] =3D new RegExp( Expr.match[ type ].source + =
/(?![^\[]*\])(?![^\(]*\))/.source );
	Expr.leftMatch[ type ] =3D new RegExp( /(^(?:.|\r|\n)*?)/.source + =
Expr.match[ type ].source.replace(/\\(\d+)/g, function(all, num){
		return "\\" + (num - 0 + 1);
	}));
}

var makeArray =3D function(array, results) {
	array =3D Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
=09
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 =
)[0].nodeType;

// Provide a fallback method if it does not work
} catch(e){
	makeArray =3D function(array, results) {
		var ret =3D results || [];

		if ( toString.call(array) =3D=3D=3D "[object Array]" ) {
			Array.prototype.push.apply( ret, array );
		} else {
			if ( typeof array.length =3D=3D=3D "number" ) {
				for ( var i =3D 0, l =3D array.length; i < l; i++ ) {
					ret.push( array[i] );
				}
			} else {
				for ( var i =3D 0; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder =3D function( a, b ) {
		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.compareDocumentPosition ? -1 : 1;
		}

		var ret =3D a.compareDocumentPosition(b) & 4 ? -1 : a =3D=3D=3D b ? 0 =
: 1;
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
} else if ( "sourceIndex" in document.documentElement ) {
	sortOrder =3D function( a, b ) {
		if ( !a.sourceIndex || !b.sourceIndex ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.sourceIndex ? -1 : 1;
		}

		var ret =3D a.sourceIndex - b.sourceIndex;
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
} else if ( document.createRange ) {
	sortOrder =3D function( a, b ) {
		if ( !a.ownerDocument || !b.ownerDocument ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.ownerDocument ? -1 : 1;
		}

		var aRange =3D a.ownerDocument.createRange(), bRange =3D =
b.ownerDocument.createRange();
		aRange.setStart(a, 0);
		aRange.setEnd(a, 0);
		bRange.setStart(b, 0);
		bRange.setEnd(b, 0);
		var ret =3D aRange.compareBoundaryPoints(Range.START_TO_END, bRange);
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
}

// Utility function for retreiving the text value of an array of DOM =
nodes
function getText( elems ) {
	var ret =3D "", elem;

	for ( var i =3D 0; elems[i]; i++ ) {
		elem =3D elems[i];

		// Get the text from text nodes and CDATA nodes
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 4 ) {
			ret +=3D elem.nodeValue;

		// Traverse everything else, except comment nodes
		} else if ( elem.nodeType !=3D=3D 8 ) {
			ret +=3D getText( elem.childNodes );
		}
	}

	return ret;
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form =3D document.createElement("div"),
		id =3D "script" + (new Date).getTime();
	form.innerHTML =3D "<a name=3D'" + id + "'/>";

	// Inject it into the root element, check its status, and remove it =
quickly
	var root =3D document.documentElement;
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID =3D function(match, context, isXML){
			if ( typeof context.getElementById !=3D=3D "undefined" && !isXML ) {
				var m =3D context.getElementById(match[1]);
				return m ? m.id =3D=3D=3D match[1] || typeof m.getAttributeNode =
!=3D=3D "undefined" && m.getAttributeNode("id").nodeValue =3D=3D=3D =
match[1] ? [m] : undefined : [];
			}
		};

		Expr.filter.ID =3D function(elem, match){
			var node =3D typeof elem.getAttributeNode !=3D=3D "undefined" && =
elem.getAttributeNode("id");
			return elem.nodeType =3D=3D=3D 1 && node && node.nodeValue =3D=3D=3D =
match;
		};
	}

	root.removeChild( form );
	root =3D form =3D null; // release memory in IE
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div =3D document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG =3D function(match, context){
			var results =3D context.getElementsByTagName(match[1]);

			// Filter out possible comments
			if ( match[1] =3D=3D=3D "*" ) {
				var tmp =3D [];

				for ( var i =3D 0; results[i]; i++ ) {
					if ( results[i].nodeType =3D=3D=3D 1 ) {
						tmp.push( results[i] );
					}
				}

				results =3D tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML =3D "<a href=3D'#'></a>";
	if ( div.firstChild && typeof div.firstChild.getAttribute !=3D=3D =
"undefined" &&
			div.firstChild.getAttribute("href") !=3D=3D "#" ) {
		Expr.attrHandle.href =3D function(elem){
			return elem.getAttribute("href", 2);
		};
	}

	div =3D null; // release memory in IE
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle =3D Sizzle, div =3D document.createElement("div");
		div.innerHTML =3D "<p class=3D'TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length =
=3D=3D=3D 0 ) {
			return;
		}
=09
		Sizzle =3D function(query, context, extra, seed){
			context =3D context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && context.nodeType =3D=3D=3D 9 && !isXML(context) ) {
				try {
					return makeArray( context.querySelectorAll(query), extra );
				} catch(e){}
			}
	=09
			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] =3D oldSizzle[ prop ];
		}

		div =3D null; // release memory in IE
	})();
}

(function(){
	var div =3D document.createElement("div");

	div.innerHTML =3D "<div class=3D'test e'></div><div =
class=3D'test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || =
div.getElementsByClassName("e").length =3D=3D=3D 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className =3D "e";

	if ( div.getElementsByClassName("e").length =3D=3D=3D 1 ) {
		return;
	}
=09
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS =3D function(match, context, isXML) {
		if ( typeof context.getElementsByClassName !=3D=3D "undefined" && =
!isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	div =3D null; // release memory in IE
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) =
{
	for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
		var elem =3D checkSet[i];
		if ( elem ) {
			elem =3D elem[dir];
			var match =3D false;

			while ( elem ) {
				if ( elem.sizcache =3D=3D=3D doneName ) {
					match =3D checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType =3D=3D=3D 1 && !isXML ){
					elem.sizcache =3D doneName;
					elem.sizset =3D i;
				}

				if ( elem.nodeName.toLowerCase() =3D=3D=3D cur ) {
					match =3D elem;
					break;
				}

				elem =3D elem[dir];
			}

			checkSet[i] =3D match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
		var elem =3D checkSet[i];
		if ( elem ) {
			elem =3D elem[dir];
			var match =3D false;

			while ( elem ) {
				if ( elem.sizcache =3D=3D=3D doneName ) {
					match =3D checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType =3D=3D=3D 1 ) {
					if ( !isXML ) {
						elem.sizcache =3D doneName;
						elem.sizset =3D i;
					}
					if ( typeof cur !=3D=3D "string" ) {
						if ( elem =3D=3D=3D cur ) {
							match =3D true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match =3D elem;
						break;
					}
				}

				elem =3D elem[dir];
			}

			checkSet[i] =3D match;
		}
	}
}

var contains =3D document.compareDocumentPosition ? function(a, b){
	return !!(a.compareDocumentPosition(b) & 16);
} : function(a, b){
	return a !=3D=3D b && (a.contains ? a.contains(b) : true);
};

var isXML =3D function(elem){
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)=20
	var documentElement =3D (elem ? elem.ownerDocument || elem : =
0).documentElement;
	return documentElement ? documentElement.nodeName !=3D=3D "HTML" : =
false;
};

var posProcess =3D function(selector, context){
	var tmpSet =3D [], later =3D "", match,
		root =3D context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match =3D Expr.match.PSEUDO.exec( selector )) ) {
		later +=3D match[0];
		selector =3D selector.replace( Expr.match.PSEUDO, "" );
	}

	selector =3D Expr.relative[selector] ? selector + "*" : selector;

	for ( var i =3D 0, l =3D root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
jQuery.find =3D Sizzle;
jQuery.expr =3D Sizzle.selectors;
jQuery.expr[":"] =3D jQuery.expr.filters;
jQuery.unique =3D Sizzle.uniqueSort;
jQuery.text =3D getText;
jQuery.isXMLDoc =3D isXML;
jQuery.contains =3D contains;

return;

window.Sizzle =3D Sizzle;

})();
var runtil =3D /Until$/,
	rparentsprev =3D /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector =3D /,/,
	slice =3D Array.prototype.slice;

// Implement the identical functionality for filter and not
var winnow =3D function( elements, qualifier, keep ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) =3D=3D=3D keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return (elem =3D=3D=3D qualifier) =3D=3D=3D keep;
		});

	} else if ( typeof qualifier =3D=3D=3D "string" ) {
		var filtered =3D jQuery.grep(elements, function( elem ) {
			return elem.nodeType =3D=3D=3D 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier =3D jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return (jQuery.inArray( elem, qualifier ) >=3D 0) =3D=3D=3D keep;
	});
};

jQuery.fn.extend({
	find: function( selector ) {
		var ret =3D this.pushStack( "", "find", selector ), length =3D 0;

		for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
			length =3D ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( var n =3D length; n < ret.length; n++ ) {
					for ( var r =3D 0; r < length; r++ ) {
						if ( ret[r] =3D=3D=3D ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets =3D jQuery( target );
		return this.filter(function() {
			for ( var i =3D 0, l =3D targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", =
selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", =
selector );
	},
=09
	is: function( selector ) {
		return !!selector && jQuery.filter( selector, this ).length > 0;
	},

	closest: function( selectors, context ) {
		if ( jQuery.isArray( selectors ) ) {
			var ret =3D [], cur =3D this[0], match, matches =3D {}, selector;

			if ( cur && selectors.length ) {
				for ( var i =3D 0, l =3D selectors.length; i < l; i++ ) {
					selector =3D selectors[i];

					if ( !matches[selector] ) {
						matches[selector] =3D jQuery.expr.match.POS.test( selector ) ?=20
							jQuery( selector, context || this.context ) :
							selector;
					}
				}

				while ( cur && cur.ownerDocument && cur !=3D=3D context ) {
					for ( selector in matches ) {
						match =3D matches[selector];

						if ( match.jquery ? match.index(cur) > -1 : jQuery(cur).is(match) =
) {
							ret.push({ selector: selector, elem: cur });
							delete matches[selector];
						}
					}
					cur =3D cur.parentNode;
				}
			}

			return ret;
		}

		var pos =3D jQuery.expr.match.POS.test( selectors ) ?=20
			jQuery( selectors, context || this.context ) : null;

		return this.map(function( i, cur ) {
			while ( cur && cur.ownerDocument && cur !=3D=3D context ) {
				if ( pos ? pos.index(cur) > -1 : jQuery(cur).is(selectors) ) {
					return cur;
				}
				cur =3D cur.parentNode;
			}
			return null;
		});
	},
=09
	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {
		if ( !elem || typeof elem =3D=3D=3D "string" ) {
			return jQuery.inArray( this[0],
				// If it receives a string, the selector is used
				// If it receives nothing, the siblings are used
				elem ? jQuery( elem ) : this.parent().children() );
		}
		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set =3D typeof selector =3D=3D=3D "string" ?
				jQuery( selector, context || this.context ) :
				jQuery.makeArray( selector ),
			all =3D jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( =
all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType =3D=3D=3D =
11;
}

jQuery.each({
	parent: function( elem ) {
		var parent =3D elem.parentNode;
		return parent && parent.nodeType !=3D=3D 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( elem.parentNode.firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] =3D function( until, selector ) {
		var ret =3D jQuery.map( this, fn, until );
	=09
		if ( !runtil.test( name ) ) {
			selector =3D until;
		}

		if ( selector && typeof selector =3D=3D=3D "string" ) {
			ret =3D jQuery.filter( selector, ret );
		}

		ret =3D this.length > 1 ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && =
rparentsprev.test( name ) ) {
			ret =3D ret.reverse();
		}

		return this.pushStack( ret, name, slice.call(arguments).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr =3D ":not(" + expr + ")";
		}

		return jQuery.find.matches(expr, elems);
	},
=09
	dir: function( elem, dir, until ) {
		var matched =3D [], cur =3D elem[dir];
		while ( cur && cur.nodeType !=3D=3D 9 && (until =3D=3D=3D undefined || =
cur.nodeType !=3D=3D 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType =3D=3D=3D 1 ) {
				matched.push( cur );
			}
			cur =3D cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result =3D result || 1;
		var num =3D 0;

		for ( ; cur; cur =3D cur[dir] ) {
			if ( cur.nodeType =3D=3D=3D 1 && ++num =3D=3D=3D result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r =3D [];

		for ( ; n; n =3D n.nextSibling ) {
			if ( n.nodeType =3D=3D=3D 1 && n !=3D=3D elem ) {
				r.push( n );
			}
		}

		return r;
	}
});
var rinlinejQuery =3D / jQuery\d+=3D"(?:\d+|null)"/g,
	rleadingWhitespace =3D /^\s+/,
	rxhtmlTag =3D /(<([\w:]+)[^>]*?)\/>/g,
	rselfClosing =3D =
/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,
	rtagName =3D /<([\w:]+)/,
	rtbody =3D /<tbody/i,
	rhtml =3D /<|&#?\w+;/,
	rnocache =3D /<script|<object|<embed|<option|<style/i,
	rchecked =3D /checked\s*(?:[^=3D]|=3D\s*.checked.)/i,  // =
checked=3D"checked" or checked (html5)
	fcloseTag =3D function( all, front, tag ) {
		return rselfClosing.test( tag ) ?
			all :
			front + "></" + tag + ">";
	},
	wrapMap =3D {
		option: [ 1, "<select multiple=3D'multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	};

wrapMap.optgroup =3D wrapMap.option;
wrapMap.tbody =3D wrapMap.tfoot =3D wrapMap.colgroup =3D wrapMap.caption =
=3D wrapMap.thead;
wrapMap.th =3D wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default =3D [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( text ) {
		if ( jQuery.isFunction(text) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.text( text.call(this, i, self.text()) );
			});
		}

		if ( typeof text !=3D=3D "object" && text !=3D=3D undefined ) {
			return this.empty().append( (this[0] && this[0].ownerDocument || =
document).createTextNode( text ) );
		}

		return jQuery.text( this );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap =3D jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem =3D this;

				while ( elem.firstChild && elem.firstChild.nodeType =3D=3D=3D 1 ) {
					elem =3D elem.firstChild;
				}

				return elem;
			}).append(this);
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self =3D jQuery( this ), contents =3D self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		return this.each(function() {
			jQuery( this ).wrapAll( html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set =3D jQuery(arguments[0]);
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set =3D this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery(arguments[0]).toArray() );
			return set;
		}
	},
=09
	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		for ( var i =3D 0, elem; (elem =3D this[i]) !=3D null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType =3D=3D=3D 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					 elem.parentNode.removeChild( elem );
				}
			}
		}
	=09
		return this;
	},

	empty: function() {
		for ( var i =3D 0, elem; (elem =3D this[i]) !=3D null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType =3D=3D=3D 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}
	=09
		return this;
	},

	clone: function( events ) {
		// Do the clone
		var ret =3D this.map(function() {
			if ( !jQuery.support.noCloneEvent && !jQuery.isXMLDoc(this) ) {
				// IE copies events bound via attachEvent when
				// using cloneNode. Calling detachEvent on the
				// clone will also remove the events from the orignal
				// In order to get around this, we use innerHTML.
				// Unfortunately, this means some modifications to
				// attributes in IE that are actually only stored
				// as properties will not be copied (such as the
				// the name attribute on an input).
				var html =3D this.outerHTML, ownerDocument =3D this.ownerDocument;
				if ( !html ) {
					var div =3D ownerDocument.createElement("div");
					div.appendChild( this.cloneNode(true) );
					html =3D div.innerHTML;
				}

				return jQuery.clean([html.replace(rinlinejQuery, "")
					// Handle the case in IE 8 where action=3D/test/> self-closes a tag
					.replace(/=3D([^=3D"'>\s]+\/)>/g, '=3D"$1">')
					.replace(rleadingWhitespace, "")], ownerDocument)[0];
			} else {
				return this.cloneNode(true);
			}
		});

		// Copy the events from the original to the clone
		if ( events =3D=3D=3D true ) {
			cloneCopyEvent( this, ret );
			cloneCopyEvent( this.find("*"), ret.find("*") );
		}

		// Return the cloned set
		return ret;
	},

	html: function( value ) {
		if ( value =3D=3D=3D undefined ) {
			return this[0] && this[0].nodeType =3D=3D=3D 1 ?
				this[0].innerHTML.replace(rinlinejQuery, "") :
				null;

		// See if we can take a shortcut and just use innerHTML
		} else if ( typeof value =3D=3D=3D "string" && !rnocache.test( value ) =
&&
			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value =
)) &&
			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

			value =3D value.replace(rxhtmlTag, fcloseTag);

			try {
				for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
					// Remove element nodes and prevent memory leaks
					if ( this[i].nodeType =3D=3D=3D 1 ) {
						jQuery.cleanData( this[i].getElementsByTagName("*") );
						this[i].innerHTML =3D value;
					}
				}

			// If using innerHTML throws an exception, use the fallback method
			} catch(e) {
				this.empty().append( value );
			}

		} else if ( jQuery.isFunction( value ) ) {
			this.each(function(i){
				var self =3D jQuery(this), old =3D self.html();
				self.empty().append(function(){
					return value.call( this, i, old );
				});
			});

		} else {
			this.empty().append( value );
		}

		return this;
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they =
are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self =3D jQuery(this), old =3D self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !=3D=3D "string" ) {
				value =3D jQuery(value).detach();
			}

			return this.each(function() {
				var next =3D this.nextSibling, parent =3D this.parentNode;

				jQuery(this).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.pushStack( jQuery(jQuery.isFunction(value) ? value() : =
value), "replaceWith", value );
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, value =3D args[0], scripts =3D [], fragment, =
parent;

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length =3D=3D=3D 3 && =
typeof value =3D=3D=3D "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				args[0] =3D value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			parent =3D value && value.parentNode;

			// If we're in a fragment, just use that instead of building a new =
one
			if ( jQuery.support.parentNode && parent && parent.nodeType =3D=3D=3D =
11 && parent.childNodes.length =3D=3D=3D this.length ) {
				results =3D { fragment: parent };

			} else {
				results =3D buildFragment( args, this, scripts );
			}
		=09
			fragment =3D results.fragment;
		=09
			if ( fragment.childNodes.length =3D=3D=3D 1 ) {
				first =3D fragment =3D fragment.firstChild;
			} else {
				first =3D fragment.firstChild;
			}

			if ( first ) {
				table =3D table && jQuery.nodeName( first, "tr" );

				for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						i > 0 || results.cacheable || this.length > 1  ?
							fragment.cloneNode(true) :
							fragment
					);
				}
			}

			if ( scripts.length ) {
				jQuery.each( scripts, evalScript );
			}
		}

		return this;

		function root( elem, cur ) {
			return jQuery.nodeName(elem, "table") ?
				(elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
				elem;
		}
	}
});

function cloneCopyEvent(orig, ret) {
	var i =3D 0;

	ret.each(function() {
		if ( this.nodeName !=3D=3D (orig[i] && orig[i].nodeName) ) {
			return;
		}

		var oldData =3D jQuery.data( orig[i++] ), curData =3D jQuery.data( =
this, oldData ), events =3D oldData && oldData.events;

		if ( events ) {
			delete curData.handle;
			curData.events =3D {};

			for ( var type in events ) {
				for ( var handler in events[ type ] ) {
					jQuery.event.add( this, type, events[ type ][ handler ], events[ =
type ][ handler ].data );
				}
			}
		}
	});
}

function buildFragment( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults,
		doc =3D (nodes && nodes[0] ? nodes[0].ownerDocument || nodes[0] : =
document);

	// Only cache "small" (1/2 KB) strings that are associated with the =
main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a =
fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so =
don't cache
	if ( args.length =3D=3D=3D 1 && typeof args[0] =3D=3D=3D "string" && =
args[0].length < 512 && doc =3D=3D=3D document &&
		!rnocache.test( args[0] ) && (jQuery.support.checkClone || =
!rchecked.test( args[0] )) ) {

		cacheable =3D true;
		cacheresults =3D jQuery.fragments[ args[0] ];
		if ( cacheresults ) {
			if ( cacheresults !=3D=3D 1 ) {
				fragment =3D cacheresults;
			}
		}
	}

	if ( !fragment ) {
		fragment =3D doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ args[0] ] =3D cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
}

jQuery.fragments =3D {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] =3D function( selector ) {
		var ret =3D [], insert =3D jQuery( selector ),
			parent =3D this.length =3D=3D=3D 1 && this[0].parentNode;
	=09
		if ( parent && parent.nodeType =3D=3D=3D 11 && =
parent.childNodes.length =3D=3D=3D 1 && insert.length =3D=3D=3D 1 ) {
			insert[ original ]( this[0] );
			return this;
		=09
		} else {
			for ( var i =3D 0, l =3D insert.length; i < l; i++ ) {
				var elems =3D (i > 0 ? this.clone(true) : this).get();
				jQuery.fn[ original ].apply( jQuery(insert[i]), elems );
				ret =3D ret.concat( elems );
			}
	=09
			return this.pushStack( ret, name, insert.selector );
		}
	};
});

jQuery.extend({
	clean: function( elems, context, fragment, scripts ) {
		context =3D context || document;

		// !context.createElement fails in IE with an error but returns typeof =
'object'
		if ( typeof context.createElement =3D=3D=3D "undefined" ) {
			context =3D context.ownerDocument || context[0] && =
context[0].ownerDocument || document;
		}

		var ret =3D [];

		for ( var i =3D 0, elem; (elem =3D elems[i]) !=3D null; i++ ) {
			if ( typeof elem =3D=3D=3D "number" ) {
				elem +=3D "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem =3D=3D=3D "string" && !rhtml.test( elem ) ) {
				elem =3D context.createTextNode( elem );

			} else if ( typeof elem =3D=3D=3D "string" ) {
				// Fix "XHTML"-style tags in all browsers
				elem =3D elem.replace(rxhtmlTag, fcloseTag);

				// Trim whitespace, otherwise indexOf won't work as expected
				var tag =3D (rtagName.exec( elem ) || ["", ""])[1].toLowerCase(),
					wrap =3D wrapMap[ tag ] || wrapMap._default,
					depth =3D wrap[0],
					div =3D context.createElement("div");

				// Go to html and back, then peel off extra wrappers
				div.innerHTML =3D wrap[1] + elem + wrap[2];

				// Move to the right depth
				while ( depth-- ) {
					div =3D div.lastChild;
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !jQuery.support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					var hasBody =3D rtbody.test(elem),
						tbody =3D tag =3D=3D=3D "table" && !hasBody ?
							div.firstChild && div.firstChild.childNodes :

							// String was a bare <thead> or <tfoot>
							wrap[1] =3D=3D=3D "<table>" && !hasBody ?
								div.childNodes :
								[];

					for ( var j =3D tbody.length - 1; j >=3D 0 ; --j ) {
						if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j =
].childNodes.length ) {
							tbody[ j ].parentNode.removeChild( tbody[ j ] );
						}
					}

				}

				// IE completely kills leading whitespace when innerHTML is used
				if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( =
elem ) ) {
					div.insertBefore( context.createTextNode( =
rleadingWhitespace.exec(elem)[0] ), div.firstChild );
				}

				elem =3D div.childNodes;
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret =3D jQuery.merge( ret, elem );
			}
		}

		if ( fragment ) {
			for ( var i =3D 0; ret[i]; i++ ) {
				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type =
|| ret[i].type.toLowerCase() =3D=3D=3D "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( =
ret[i] ) : ret[i] );
			=09
				} else {
					if ( ret[i].nodeType =3D=3D=3D 1 ) {
						ret.splice.apply( ret, [i + 1, =
0].concat(jQuery.makeArray(ret[i].getElementsByTagName("script"))) );
					}
					fragment.appendChild( ret[i] );
				}
			}
		}

		return ret;
	},
=09
	cleanData: function( elems ) {
		var data, id, cache =3D jQuery.cache,
			special =3D jQuery.event.special,
			deleteExpando =3D jQuery.support.deleteExpando;
	=09
		for ( var i =3D 0, elem; (elem =3D elems[i]) !=3D null; i++ ) {
			id =3D elem[ jQuery.expando ];
		=09
			if ( id ) {
				data =3D cache[ id ];
			=09
				if ( data.events ) {
					for ( var type in data.events ) {
						if ( special[ type ] ) {
							jQuery.event.remove( elem, type );

						} else {
							removeEvent( elem, type, data.handle );
						}
					}
				}
			=09
				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else if ( elem.removeAttribute ) {
					elem.removeAttribute( jQuery.expando );
				}
			=09
				delete cache[ id ];
			}
		}
	}
});
// exclude the following css properties to add px
var rexclude =3D /z-?index|font-?weight|opacity|zoom|line-?height/i,
	ralpha =3D /alpha\([^)]*\)/,
	ropacity =3D /opacity=3D([^)]*)/,
	rfloat =3D /float/i,
	rdashAlpha =3D /-([a-z])/ig,
	rupper =3D /([A-Z])/g,
	rnumpx =3D /^-?\d+(?:px)?$/i,
	rnum =3D /^-?\d/,

	cssShow =3D { position: "absolute", visibility: "hidden", =
display:"block" },
	cssWidth =3D [ "Left", "Right" ],
	cssHeight =3D [ "Top", "Bottom" ],

	// cache check for defaultView.getComputedStyle
	getComputedStyle =3D document.defaultView && =
document.defaultView.getComputedStyle,
	// normalize float css property
	styleFloat =3D jQuery.support.cssFloat ? "cssFloat" : "styleFloat",
	fcamelCase =3D function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn.css =3D function( name, value ) {
	return access( this, name, value, true, function( elem, name, value ) {
		if ( value =3D=3D=3D undefined ) {
			return jQuery.curCSS( elem, name );
		}
	=09
		if ( typeof value =3D=3D=3D "number" && !rexclude.test(name) ) {
			value +=3D "px";
		}

		jQuery.style( elem, name, value );
	});
};

jQuery.extend({
	style: function( elem, name, value ) {
		// don't set styles on text and comment nodes
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) =
{
			return undefined;
		}

		// ignore negative width and height values #1599
		if ( (name =3D=3D=3D "width" || name =3D=3D=3D "height") && =
parseFloat(value) < 0 ) {
			value =3D undefined;
		}

		var style =3D elem.style || elem, set =3D value !=3D=3D undefined;

		// IE uses filters for opacity
		if ( !jQuery.support.opacity && name =3D=3D=3D "opacity" ) {
			if ( set ) {
				// IE has trouble with opacity if it does not have layout
				// Force it by setting the zoom level
				style.zoom =3D 1;

				// Set the alpha filter to set the opacity
				var opacity =3D parseInt( value, 10 ) + "" =3D=3D=3D "NaN" ? "" : =
"alpha(opacity=3D" + value * 100 + ")";
				var filter =3D style.filter || jQuery.curCSS( elem, "filter" ) || =
"";
				style.filter =3D ralpha.test(filter) ? filter.replace(ralpha, =
opacity) : opacity;
			}

			return style.filter && style.filter.indexOf("opacity=3D") >=3D 0 ?
				(parseFloat( ropacity.exec(style.filter)[1] ) / 100) + "":
				"";
		}

		// Make sure we're using the right name for getting the float value
		if ( rfloat.test( name ) ) {
			name =3D styleFloat;
		}

		name =3D name.replace(rdashAlpha, fcamelCase);

		if ( set ) {
			style[ name ] =3D value;
		}

		return style[ name ];
	},

	css: function( elem, name, force, extra ) {
		if ( name =3D=3D=3D "width" || name =3D=3D=3D "height" ) {
			var val, props =3D cssShow, which =3D name =3D=3D=3D "width" ? =
cssWidth : cssHeight;

			function getWH() {
				val =3D name =3D=3D=3D "width" ? elem.offsetWidth : =
elem.offsetHeight;

				if ( extra =3D=3D=3D "border" ) {
					return;
				}

				jQuery.each( which, function() {
					if ( !extra ) {
						val -=3D parseFloat(jQuery.curCSS( elem, "padding" + this, true)) =
|| 0;
					}

					if ( extra =3D=3D=3D "margin" ) {
						val +=3D parseFloat(jQuery.curCSS( elem, "margin" + this, true)) =
|| 0;
					} else {
						val -=3D parseFloat(jQuery.curCSS( elem, "border" + this + =
"Width", true)) || 0;
					}
				});
			}

			if ( elem.offsetWidth !=3D=3D 0 ) {
				getWH();
			} else {
				jQuery.swap( elem, props, getWH );
			}

			return Math.max(0, Math.round(val));
		}

		return jQuery.curCSS( elem, name, force );
	},

	curCSS: function( elem, name, force ) {
		var ret, style =3D elem.style, filter;

		// IE uses filters for opacity
		if ( !jQuery.support.opacity && name =3D=3D=3D "opacity" && =
elem.currentStyle ) {
			ret =3D ropacity.test(elem.currentStyle.filter || "") ?
				(parseFloat(RegExp.$1) / 100) + "" :
				"";

			return ret =3D=3D=3D "" ?
				"1" :
				ret;
		}

		// Make sure we're using the right name for getting the float value
		if ( rfloat.test( name ) ) {
			name =3D styleFloat;
		}

		if ( !force && style && style[ name ] ) {
			ret =3D style[ name ];

		} else if ( getComputedStyle ) {

			// Only "float" is needed here
			if ( rfloat.test( name ) ) {
				name =3D "float";
			}

			name =3D name.replace( rupper, "-$1" ).toLowerCase();

			var defaultView =3D elem.ownerDocument.defaultView;

			if ( !defaultView ) {
				return null;
			}

			var computedStyle =3D defaultView.getComputedStyle( elem, null );

			if ( computedStyle ) {
				ret =3D computedStyle.getPropertyValue( name );
			}

			// We should always get a number back from opacity
			if ( name =3D=3D=3D "opacity" && ret =3D=3D=3D "" ) {
				ret =3D "1";
			}

		} else if ( elem.currentStyle ) {
			var camelCase =3D name.replace(rdashAlpha, fcamelCase);

			ret =3D elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];

			// From the awesome hack by Dean Edwards
			// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

			// If we're not dealing with a regular pixel number
			// but a number that has a weird ending, we need to convert it to =
pixels
			if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {
				// Remember the original values
				var left =3D style.left, rsLeft =3D elem.runtimeStyle.left;

				// Put in the new values to get a computed value out
				elem.runtimeStyle.left =3D elem.currentStyle.left;
				style.left =3D camelCase =3D=3D=3D "fontSize" ? "1em" : (ret || 0);
				ret =3D style.pixelLeft + "px";

				// Revert the changed values
				style.left =3D left;
				elem.runtimeStyle.left =3D rsLeft;
			}
		}

		return ret;
	},

	// A method for quickly swapping in/out CSS properties to get correct =
calculations
	swap: function( elem, options, callback ) {
		var old =3D {};

		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] =3D elem.style[ name ];
			elem.style[ name ] =3D options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( var name in options ) {
			elem.style[ name ] =3D old[ name ];
		}
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden =3D function( elem ) {
		var width =3D elem.offsetWidth, height =3D elem.offsetHeight,
			skip =3D elem.nodeName.toLowerCase() =3D=3D=3D "tr";

		return width =3D=3D=3D 0 && height =3D=3D=3D 0 && !skip ?
			true :
			width > 0 && height > 0 && !skip ?
				false :
				jQuery.curCSS(elem, "display") =3D=3D=3D "none";
	};

	jQuery.expr.filters.visible =3D function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}
var jsc =3D now(),
	rscript =3D /<script(.|\s)*?\/script>/gi,
	rselectTextarea =3D /select|textarea/i,
	rinput =3D =
/color|date|datetime|email|hidden|month|number|password|range|search|tel|=
text|time|url|week/i,
	jsre =3D /=3D\?(&|$)/,
	rquery =3D /\?/,
	rts =3D /(\?|&)_=3D.*?(&|$)/,
	rurl =3D /^(\w+:)?\/\/([^\/?#]+)/,
	r20 =3D /%20/g,

	// Keep a copy of the old load method
	_load =3D jQuery.fn.load;

jQuery.fn.extend({
	load: function( url, params, callback ) {
		if ( typeof url !=3D=3D "string" ) {
			return _load.call( this, url );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off =3D url.indexOf(" ");
		if ( off >=3D 0 ) {
			var selector =3D url.slice(off, url.length);
			url =3D url.slice(0, off);
		}

		// Default to a GET request
		var type =3D "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback =3D params;
				params =3D null;

			// Otherwise, build a param string
			} else if ( typeof params =3D=3D=3D "object" ) {
				params =3D jQuery.param( params, jQuery.ajaxSettings.traditional );
				type =3D "POST";
			}
		}

		var self =3D this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			complete: function( res, status ) {
				// If successful, inject the HTML into all the matched elements
				if ( status =3D=3D=3D "success" || status =3D=3D=3D "notmodified" ) =
{
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div />")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(res.responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						res.responseText );
				}

				if ( callback ) {
					self.each( callback, [res.responseText, status, res] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param(this.serializeArray());
	},
	serializeArray: function() {
		return this.map(function() {
			return this.elements ? jQuery.makeArray(this.elements) : this;
		})
		.filter(function() {
			return this.name && !this.disabled &&
				(this.checked || rselectTextarea.test(this.nodeName) ||
					rinput.test(this.type));
		})
		.map(function( i, elem ) {
			var val =3D jQuery(this).val();

			return val =3D=3D null ?
				null :
				jQuery.isArray(val) ?
					jQuery.map( val, function( val, i ) {
						return { name: elem.name, value: val };
					}) :
					{ name: elem.name, value: val };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess =
ajaxSend".split(" "), function( i, o ) {
	jQuery.fn[o] =3D function( f ) {
		return this.bind(o, f);
	};
});

jQuery.extend({

	get: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type =3D type || callback;
			callback =3D data;
			data =3D null;
		}

		return jQuery.ajax({
			type: "GET",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	getScript: function( url, callback ) {
		return jQuery.get(url, null, callback, "script");
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get(url, data, callback, "json");
	},

	post: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type =3D type || callback;
			callback =3D data;
			data =3D {};
		}

		return jQuery.ajax({
			type: "POST",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	ajaxSetup: function( settings ) {
		jQuery.extend( jQuery.ajaxSettings, settings );
	},

	ajaxSettings: {
		url: location.href,
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		username: null,
		password: null,
		traditional: false,
		*/
		// Create the request object; Microsoft failed to properly
		// implement the XMLHttpRequest in IE7 (can't request local files),
		// so we use the ActiveXObject when it is available
		// This function can be overriden by calling jQuery.ajaxSetup
		xhr: window.XMLHttpRequest && (window.location.protocol !=3D=3D =
"file:" || !window.ActiveXObject) ?
			function() {
				return new window.XMLHttpRequest();
			} :
			function() {
				try {
					return new window.ActiveXObject("Microsoft.XMLHTTP");
				} catch(e) {}
			},
		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			script: "text/javascript, application/javascript",
			json: "application/json, text/javascript",
			text: "text/plain",
			_default: "*/*"
		}
	},

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajax: function( origSettings ) {
		var s =3D jQuery.extend(true, {}, jQuery.ajaxSettings, origSettings);
	=09
		var jsonp, status, data,
			callbackContext =3D origSettings && origSettings.context || s,
			type =3D s.type.toUpperCase();

		// convert data if not already a string
		if ( s.data && s.processData && typeof s.data !=3D=3D "string" ) {
			s.data =3D jQuery.param( s.data, s.traditional );
		}

		// Handle JSONP Parameter Callbacks
		if ( s.dataType =3D=3D=3D "jsonp" ) {
			if ( type =3D=3D=3D "GET" ) {
				if ( !jsre.test( s.url ) ) {
					s.url +=3D (rquery.test( s.url ) ? "&" : "?") + (s.jsonp || =
"callback") + "=3D?";
				}
			} else if ( !s.data || !jsre.test(s.data) ) {
				s.data =3D (s.data ? s.data + "&" : "") + (s.jsonp || "callback") + =
"=3D?";
			}
			s.dataType =3D "json";
		}

		// Build temporary JSONP function
		if ( s.dataType =3D=3D=3D "json" && (s.data && jsre.test(s.data) || =
jsre.test(s.url)) ) {
			jsonp =3D s.jsonpCallback || ("jsonp" + jsc++);

			// Replace the =3D? sequence both in the query string and the data
			if ( s.data ) {
				s.data =3D (s.data + "").replace(jsre, "=3D" + jsonp + "$1");
			}

			s.url =3D s.url.replace(jsre, "=3D" + jsonp + "$1");

			// We need to make sure
			// that a JSONP style response is executed properly
			s.dataType =3D "script";

			// Handle JSONP-style loading
			window[ jsonp ] =3D window[ jsonp ] || function( tmp ) {
				data =3D tmp;
				success();
				complete();
				// Garbage collect
				window[ jsonp ] =3D undefined;

				try {
					delete window[ jsonp ];
				} catch(e) {}

				if ( head ) {
					head.removeChild( script );
				}
			};
		}

		if ( s.dataType =3D=3D=3D "script" && s.cache =3D=3D=3D null ) {
			s.cache =3D false;
		}

		if ( s.cache =3D=3D=3D false && type =3D=3D=3D "GET" ) {
			var ts =3D now();

			// try replacing _=3D if it is there
			var ret =3D s.url.replace(rts, "$1_=3D" + ts + "$2");

			// if nothing was replaced, add timestamp to the end
			s.url =3D ret + ((ret =3D=3D=3D s.url) ? (rquery.test(s.url) ? "&" : =
"?") + "_=3D" + ts : "");
		}

		// If data is available, append data to url for get requests
		if ( s.data && type =3D=3D=3D "GET" ) {
			s.url +=3D (rquery.test(s.url) ? "&" : "?") + s.data;
		}

		// Watch for a new set of requests
		if ( s.global && ! jQuery.active++ ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Matches an absolute URL, and saves the domain
		var parts =3D rurl.exec( s.url ),
			remote =3D parts && (parts[1] && parts[1] !=3D=3D location.protocol =
|| parts[2] !=3D=3D location.host);

		// If we're requesting a remote document
		// and trying to load JSON or Script with a GET
		if ( s.dataType =3D=3D=3D "script" && type =3D=3D=3D "GET" && remote ) =
{
			var head =3D document.getElementsByTagName("head")[0] || =
document.documentElement;
			var script =3D document.createElement("script");
			script.src =3D s.url;
			if ( s.scriptCharset ) {
				script.charset =3D s.scriptCharset;
			}

			// Handle Script loading
			if ( !jsonp ) {
				var done =3D false;

				// Attach handlers for all browsers
				script.onload =3D script.onreadystatechange =3D function() {
					if ( !done && (!this.readyState ||
							this.readyState =3D=3D=3D "loaded" || this.readyState =3D=3D=3D =
"complete") ) {
						done =3D true;
						success();
						complete();

						// Handle memory leak in IE
						script.onload =3D script.onreadystatechange =3D null;
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}
					}
				};
			}

			// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
			// This arises when a base node is used (#2709 and #4378).
			head.insertBefore( script, head.firstChild );

			// We handle everything using the script element injection
			return undefined;
		}

		var requestDone =3D false;

		// Create the request object
		var xhr =3D s.xhr();

		if ( !xhr ) {
			return;
		}

		// Open the socket
		// Passing null username, generates a login popup on Opera (#2865)
		if ( s.username ) {
			xhr.open(type, s.url, s.async, s.username, s.password);
		} else {
			xhr.open(type, s.url, s.async);
		}

		// Need an extra try/catch for cross domain requests in Firefox 3
		try {
			// Set the correct header, if data is being sent
			if ( s.data || origSettings && origSettings.contentType ) {
				xhr.setRequestHeader("Content-Type", s.contentType);
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[s.url] ) {
					xhr.setRequestHeader("If-Modified-Since", =
jQuery.lastModified[s.url]);
				}

				if ( jQuery.etag[s.url] ) {
					xhr.setRequestHeader("If-None-Match", jQuery.etag[s.url]);
				}
			}

			// Set header so the called script knows that it's an XMLHttpRequest
			// Only send the header if it's not a remote XHR
			if ( !remote ) {
				xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
			}

			// Set the Accepts header for the server, depending on the dataType
			xhr.setRequestHeader("Accept", s.dataType && s.accepts[ s.dataType ] =
?
				s.accepts[ s.dataType ] + ", */*" :
				s.accepts._default );
		} catch(e) {}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && s.beforeSend.call(callbackContext, xhr, s) =
=3D=3D=3D false ) {
			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active ) {
				jQuery.event.trigger( "ajaxStop" );
			}

			// close opended socket
			xhr.abort();
			return false;
		}

		if ( s.global ) {
			trigger("ajaxSend", [xhr, s]);
		}

		// Wait for a response to come back
		var onreadystatechange =3D xhr.onreadystatechange =3D function( =
isTimeout ) {
			// The request was aborted
			if ( !xhr || xhr.readyState =3D=3D=3D 0 || isTimeout =3D=3D=3D =
"abort" ) {
				// Opera doesn't call onreadystatechange before this point
				// so we simulate the call
				if ( !requestDone ) {
					complete();
				}

				requestDone =3D true;
				if ( xhr ) {
					xhr.onreadystatechange =3D jQuery.noop;
				}

			// The transfer is complete and the data is available, or the request =
timed out
			} else if ( !requestDone && xhr && (xhr.readyState =3D=3D=3D 4 || =
isTimeout =3D=3D=3D "timeout") ) {
				requestDone =3D true;
				xhr.onreadystatechange =3D jQuery.noop;

				status =3D isTimeout =3D=3D=3D "timeout" ?
					"timeout" :
					!jQuery.httpSuccess( xhr ) ?
						"error" :
						s.ifModified && jQuery.httpNotModified( xhr, s.url ) ?
							"notmodified" :
							"success";

				var errMsg;

				if ( status =3D=3D=3D "success" ) {
					// Watch for, and catch, XML document parse errors
					try {
						// process the data (runs the xml through httpData regardless of =
callback)
						data =3D jQuery.httpData( xhr, s.dataType, s );
					} catch(err) {
						status =3D "parsererror";
						errMsg =3D err;
					}
				}

				// Make sure that the request was successful or notmodified
				if ( status =3D=3D=3D "success" || status =3D=3D=3D "notmodified" ) =
{
					// JSONP handles its own success callback
					if ( !jsonp ) {
						success();
					}
				} else {
					jQuery.handleError(s, xhr, status, errMsg);
				}

				// Fire the complete handlers
				complete();

				if ( isTimeout =3D=3D=3D "timeout" ) {
					xhr.abort();
				}

				// Stop memory leaks
				if ( s.async ) {
					xhr =3D null;
				}
			}
		};

		// Override the abort handler, if we can (IE doesn't allow it, but =
that's OK)
		// Opera doesn't fire onreadystatechange at all on abort
		try {
			var oldAbort =3D xhr.abort;
			xhr.abort =3D function() {
				if ( xhr ) {
					oldAbort.call( xhr );
				}

				onreadystatechange( "abort" );
			};
		} catch(e) { }

		// Timeout checker
		if ( s.async && s.timeout > 0 ) {
			setTimeout(function() {
				// Check to see if the request is still happening
				if ( xhr && !requestDone ) {
					onreadystatechange( "timeout" );
				}
			}, s.timeout);
		}

		// Send the data
		try {
			xhr.send( type =3D=3D=3D "POST" || type =3D=3D=3D "PUT" || type =
=3D=3D=3D "DELETE" ? s.data : null );
		} catch(e) {
			jQuery.handleError(s, xhr, null, e);
			// Fire the complete handlers
			complete();
		}

		// firefox 1.5 doesn't fire statechange for sync requests
		if ( !s.async ) {
			onreadystatechange();
		}

		function success() {
			// If a local callback was specified, fire it and pass it the data
			if ( s.success ) {
				s.success.call( callbackContext, data, status, xhr );
			}

			// Fire the global callback
			if ( s.global ) {
				trigger( "ajaxSuccess", [xhr, s] );
			}
		}

		function complete() {
			// Process result
			if ( s.complete ) {
				s.complete.call( callbackContext, xhr, status);
			}

			// The request was completed
			if ( s.global ) {
				trigger( "ajaxComplete", [xhr, s] );
			}

			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active ) {
				jQuery.event.trigger( "ajaxStop" );
			}
		}
	=09
		function trigger(type, args) {
			(s.context ? jQuery(s.context) : jQuery.event).trigger(type, args);
		}

		// return XMLHttpRequest to allow aborting the request etc.
		return xhr;
	},

	handleError: function( s, xhr, status, e ) {
		// If a local callback was specified, fire it
		if ( s.error ) {
			s.error.call( s.context || s, xhr, status, e );
		}

		// Fire the global callback
		if ( s.global ) {
			(s.context ? jQuery(s.context) : jQuery.event).trigger( "ajaxError", =
[xhr, s, e] );
		}
	},

	// Counter for holding the number of active queries
	active: 0,

	// Determines if an XMLHttpRequest was successful or not
	httpSuccess: function( xhr ) {
		try {
			// IE error sometimes returns 1223 when it should be 204 so treat it =
as success, see #1450
			return !xhr.status && location.protocol =3D=3D=3D "file:" ||
				// Opera returns 0 when status is 304
				( xhr.status >=3D 200 && xhr.status < 300 ) ||
				xhr.status =3D=3D=3D 304 || xhr.status =3D=3D=3D 1223 || xhr.status =
=3D=3D=3D 0;
		} catch(e) {}

		return false;
	},

	// Determines if an XMLHttpRequest returns NotModified
	httpNotModified: function( xhr, url ) {
		var lastModified =3D xhr.getResponseHeader("Last-Modified"),
			etag =3D xhr.getResponseHeader("Etag");

		if ( lastModified ) {
			jQuery.lastModified[url] =3D lastModified;
		}

		if ( etag ) {
			jQuery.etag[url] =3D etag;
		}

		// Opera returns 0 when status is 304
		return xhr.status =3D=3D=3D 304 || xhr.status =3D=3D=3D 0;
	},

	httpData: function( xhr, type, s ) {
		var ct =3D xhr.getResponseHeader("content-type") || "",
			xml =3D type =3D=3D=3D "xml" || !type && ct.indexOf("xml") >=3D 0,
			data =3D xml ? xhr.responseXML : xhr.responseText;

		if ( xml && data.documentElement.nodeName =3D=3D=3D "parsererror" ) {
			jQuery.error( "parsererror" );
		}

		// Allow a pre-filtering function to sanitize the response
		// s is checked to keep backwards compatibility
		if ( s && s.dataFilter ) {
			data =3D s.dataFilter( data, type );
		}

		// The filter can actually parse the response
		if ( typeof data =3D=3D=3D "string" ) {
			// Get the JavaScript object, if JSON is used.
			if ( type =3D=3D=3D "json" || !type && ct.indexOf("json") >=3D 0 ) {
				data =3D jQuery.parseJSON( data );

			// If the type is "script", eval it in global context
			} else if ( type =3D=3D=3D "script" || !type && =
ct.indexOf("javascript") >=3D 0 ) {
				jQuery.globalEval( data );
			}
		}

		return data;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s =3D [];
	=09
		// Set traditional to true for jQuery <=3D 1.3.2 behavior.
		if ( traditional =3D=3D=3D undefined ) {
			traditional =3D jQuery.ajaxSettings.traditional;
		}
	=09
		// If an array was passed in, assume that it is an array of form =
elements.
		if ( jQuery.isArray(a) || a.jquery ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});
		=09
		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[prefix] );
			}
		}

		// Return the resulting serialization
		return s.join("&").replace(r20, "+");

		function buildParams( prefix, obj ) {
			if ( jQuery.isArray(obj) ) {
				// Serialize array item.
				jQuery.each( obj, function( i, v ) {
					if ( traditional || /\[\]$/.test( prefix ) ) {
						// Treat each array item as a scalar.
						add( prefix, v );
					} else {
						// If array item is non-scalar (array or object), encode its
						// numeric index to resolve deserialization ambiguity issues.
						// Note that rack (as of 1.0.0) can't currently deserialize
						// nested arrays properly, and attempting to do so may cause
						// a server error. Possible fixes are to modify rack's
						// deserialization algorithm or to provide an option or flag
						// to force array serialization to be shallow.
						buildParams( prefix + "[" + ( typeof v =3D=3D=3D "object" || =
jQuery.isArray(v) ? i : "" ) + "]", v );
					}
				});
				=09
			} else if ( !traditional && obj !=3D null && typeof obj =3D=3D=3D =
"object" ) {
				// Serialize object item.
				jQuery.each( obj, function( k, v ) {
					buildParams( prefix + "[" + k + "]", v );
				});
				=09
			} else {
				// Serialize scalar item.
				add( prefix, obj );
			}
		}

		function add( key, value ) {
			// If value is a function, invoke it and return its value
			value =3D jQuery.isFunction(value) ? value() : value;
			s[ s.length ] =3D encodeURIComponent(key) + "=3D" + =
encodeURIComponent(value);
		}
	}
});
var elemdisplay =3D {},
	rfxtypes =3D /toggle|show|hide/,
	rfxnum =3D /^([+-]=3D)?([\d+-.]+)(.*)$/,
	timerId,
	fxAttrs =3D [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" =
],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" =
],
		// opacity animations
		[ "opacity" ]
	];

jQuery.fn.extend({
	show: function( speed, callback ) {
		if ( speed || speed =3D=3D=3D 0) {
			return this.animate( genFx("show", 3), speed, callback);

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var old =3D jQuery.data(this[i], "olddisplay");

				this[i].style.display =3D old || "";

				if ( jQuery.css(this[i], "display") =3D=3D=3D "none" ) {
					var nodeName =3D this[i].nodeName, display;

					if ( elemdisplay[ nodeName ] ) {
						display =3D elemdisplay[ nodeName ];

					} else {
						var elem =3D jQuery("<" + nodeName + " />").appendTo("body");

						display =3D elem.css("display");

						if ( display =3D=3D=3D "none" ) {
							display =3D "block";
						}

						elem.remove();

						elemdisplay[ nodeName ] =3D display;
					}

					jQuery.data(this[i], "olddisplay", display);
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( var j =3D 0, k =3D this.length; j < k; j++ ) {
				this[j].style.display =3D jQuery.data(this[j], "olddisplay") || "";
			}

			return this;
		}
	},

	hide: function( speed, callback ) {
		if ( speed || speed =3D=3D=3D 0 ) {
			return this.animate( genFx("hide", 3), speed, callback);

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var old =3D jQuery.data(this[i], "olddisplay");
				if ( !old && old !=3D=3D "none" ) {
					jQuery.data(this[i], "olddisplay", jQuery.css(this[i], "display"));
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( var j =3D 0, k =3D this.length; j < k; j++ ) {
				this[j].style.display =3D "none";
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2 ) {
		var bool =3D typeof fn =3D=3D=3D "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn =3D=3D null || bool ) {
			this.each(function() {
				var state =3D bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2);
		}

		return this;
	},

	fadeTo: function( speed, to, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall =3D jQuery.speed(speed, easing, callback);

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete );
		}

		return this[ optall.queue =3D=3D=3D false ? "each" : "queue" =
](function() {
			var opt =3D jQuery.extend({}, optall), p,
				hidden =3D this.nodeType =3D=3D=3D 1 && jQuery(this).is(":hidden"),
				self =3D this;

			for ( p in prop ) {
				var name =3D p.replace(rdashAlpha, fcamelCase);

				if ( p !=3D=3D name ) {
					prop[ name ] =3D prop[ p ];
					delete prop[ p ];
					p =3D name;
				}

				if ( prop[p] =3D=3D=3D "hide" && hidden || prop[p] =3D=3D=3D "show" =
&& !hidden ) {
					return opt.complete.call(this);
				}

				if ( ( p =3D=3D=3D "height" || p =3D=3D=3D "width" ) && this.style ) =
{
					// Store display property
					opt.display =3D jQuery.css(this, "display");

					// Make sure that nothing sneaks out
					opt.overflow =3D this.style.overflow;
				}

				if ( jQuery.isArray( prop[p] ) ) {
					// Create (if needed) and add to specialEasing
					(opt.specialEasing =3D opt.specialEasing || {})[p] =3D prop[p][1];
					prop[p] =3D prop[p][0];
				}
			}

			if ( opt.overflow !=3D null ) {
				this.style.overflow =3D "hidden";
			}

			opt.curAnim =3D jQuery.extend({}, prop);

			jQuery.each( prop, function( name, val ) {
				var e =3D new jQuery.fx( self, opt, name );

				if ( rfxtypes.test(val) ) {
					e[ val =3D=3D=3D "toggle" ? hidden ? "show" : "hide" : val ]( prop =
);

				} else {
					var parts =3D rfxnum.exec(val),
						start =3D e.cur(true) || 0;

					if ( parts ) {
						var end =3D parseFloat( parts[2] ),
							unit =3D parts[3] || "px";

						// We need to compute starting value
						if ( unit !=3D=3D "px" ) {
							self.style[ name ] =3D (end || 1) + unit;
							start =3D ((end || 1) / e.cur(true)) * start;
							self.style[ name ] =3D start + unit;
						}

						// If a +=3D/-=3D token was provided, we're doing a relative =
animation
						if ( parts[1] ) {
							end =3D ((parts[1] =3D=3D=3D "-=3D" ? -1 : 1) * end) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			});

			// For JS strict compliance
			return true;
		});
	},

	stop: function( clearQueue, gotoEnd ) {
		var timers =3D jQuery.timers;

		if ( clearQueue ) {
			this.queue([]);
		}

		this.each(function() {
			// go in reverse order so anything added to the queue during the loop =
is ignored
			for ( var i =3D timers.length - 1; i >=3D 0; i-- ) {
				if ( timers[i].elem =3D=3D=3D this ) {
					if (gotoEnd) {
						// force the next step to be the last
						timers[i](true);
					}

					timers.splice(i, 1);
				}
			}
		});

		// start the next in the queue if the last step wasn't forced
		if ( !gotoEnd ) {
			this.dequeue();
		}

		return this;
	}

});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show", 1),
	slideUp: genFx("hide", 1),
	slideToggle: genFx("toggle", 1),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" }
}, function( name, props ) {
	jQuery.fn[ name ] =3D function( speed, callback ) {
		return this.animate( props, speed, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt =3D speed && typeof speed =3D=3D=3D "object" ? speed : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction(easing) && =
easing
		};

		opt.duration =3D jQuery.fx.off ? 0 : typeof opt.duration =3D=3D=3D =
"number" ? opt.duration :
			jQuery.fx.speeds[opt.duration] || jQuery.fx.speeds._default;

		// Queueing
		opt.old =3D opt.complete;
		opt.complete =3D function() {
			if ( opt.queue !=3D=3D false ) {
				jQuery(this).dequeue();
			}
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options =3D options;
		this.elem =3D elem;
		this.prop =3D prop;

		if ( !options.orig ) {
			options.orig =3D {};
		}
	}

});

jQuery.fx.prototype =3D {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );

		// Set display property to block for height/width animations
		if ( ( this.prop =3D=3D=3D "height" || this.prop =3D=3D=3D "width" ) =
&& this.elem.style ) {
			this.elem.style.display =3D "block";
		}
	},

	// Get the current size
	cur: function( force ) {
		if ( this.elem[this.prop] !=3D null && (!this.elem.style || =
this.elem.style[this.prop] =3D=3D null) ) {
			return this.elem[ this.prop ];
		}

		var r =3D parseFloat(jQuery.css(this.elem, this.prop, force));
		return r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, =
this.prop)) || 0;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		this.startTime =3D now();
		this.start =3D from;
		this.end =3D to;
		this.unit =3D unit || this.unit || "px";
		this.now =3D this.start;
		this.pos =3D this.state =3D 0;

		var self =3D this;
		function t( gotoEnd ) {
			return self.step(gotoEnd);
		}

		t.elem =3D this.elem;

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			timerId =3D setInterval(jQuery.fx.tick, 13);
		}
	},

	// Simple 'show' function
	show: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] =3D jQuery.style( this.elem, this.prop );
		this.options.show =3D true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any
		// flash of content
		this.custom(this.prop =3D=3D=3D "width" || this.prop =3D=3D=3D =
"height" ? 1 : 0, this.cur());

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] =3D jQuery.style( this.elem, this.prop );
		this.options.hide =3D true;

		// Begin the animation
		this.custom(this.cur(), 0);
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var t =3D now(), done =3D true;

		if ( gotoEnd || t >=3D this.options.duration + this.startTime ) {
			this.now =3D this.end;
			this.pos =3D this.state =3D 1;
			this.update();

			this.options.curAnim[ this.prop ] =3D true;

			for ( var i in this.options.curAnim ) {
				if ( this.options.curAnim[i] !=3D=3D true ) {
					done =3D false;
				}
			}

			if ( done ) {
				if ( this.options.display !=3D null ) {
					// Reset the overflow
					this.elem.style.overflow =3D this.options.overflow;

					// Reset the display
					var old =3D jQuery.data(this.elem, "olddisplay");
					this.elem.style.display =3D old ? old : this.options.display;

					if ( jQuery.css(this.elem, "display") =3D=3D=3D "none" ) {
						this.elem.style.display =3D "block";
					}
				}

				// Hide the element if the "hide" operation was done
				if ( this.options.hide ) {
					jQuery(this.elem).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( this.options.hide || this.options.show ) {
					for ( var p in this.options.curAnim ) {
						jQuery.style(this.elem, p, this.options.orig[p]);
					}
				}

				// Execute the complete function
				this.options.complete.call( this.elem );
			}

			return false;

		} else {
			var n =3D t - this.startTime;
			this.state =3D n / this.options.duration;

			// Perform the easing function, defaults to swing
			var specialEasing =3D this.options.specialEasing && =
this.options.specialEasing[this.prop];
			var defaultEasing =3D this.options.easing || (jQuery.easing.swing ? =
"swing" : "linear");
			this.pos =3D jQuery.easing[specialEasing || =
defaultEasing](this.state, n, 0, 1, this.options.duration);
			this.now =3D this.start + ((this.end - this.start) * this.pos);

			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		var timers =3D jQuery.timers;

		for ( var i =3D 0; i < timers.length; i++ ) {
			if ( !timers[i]() ) {
				timers.splice(i--, 1);
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},
	=09
	stop: function() {
		clearInterval( timerId );
		timerId =3D null;
	},
=09
	speeds: {
		slow: 600,
 		fast: 200,
 		// Default speed
 		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style(fx.elem, "opacity", fx.now);
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] !=3D null ) {
				fx.elem.style[ fx.prop ] =3D (fx.prop =3D=3D=3D "width" || fx.prop =
=3D=3D=3D "height" ? Math.max(0, fx.now) : fx.now) + fx.unit;
			} else {
				fx.elem[ fx.prop ] =3D fx.now;
			}
		}
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated =3D function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem =3D=3D=3D fn.elem;
		}).length;
	};
}

function genFx( type, num ) {
	var obj =3D {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function() =
{
		obj[ this ] =3D type;
	});

	return obj;
}
if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset =3D function( options ) {
		var elem =3D this[0];

		if ( options ) {=20
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem =3D=3D=3D elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		var box =3D elem.getBoundingClientRect(), doc =3D elem.ownerDocument, =
body =3D doc.body, docElem =3D doc.documentElement,
			clientTop =3D docElem.clientTop || body.clientTop || 0, clientLeft =
=3D docElem.clientLeft || body.clientLeft || 0,
			top  =3D box.top  + (self.pageYOffset || jQuery.support.boxModel && =
docElem.scrollTop  || body.scrollTop ) - clientTop,
			left =3D box.left + (self.pageXOffset || jQuery.support.boxModel && =
docElem.scrollLeft || body.scrollLeft) - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset =3D function( options ) {
		var elem =3D this[0];

		if ( options ) {=20
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem =3D=3D=3D elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		jQuery.offset.initialize();

		var offsetParent =3D elem.offsetParent, prevOffsetParent =3D elem,
			doc =3D elem.ownerDocument, computedStyle, docElem =3D =
doc.documentElement,
			body =3D doc.body, defaultView =3D doc.defaultView,
			prevComputedStyle =3D defaultView ? defaultView.getComputedStyle( =
elem, null ) : elem.currentStyle,
			top =3D elem.offsetTop, left =3D elem.offsetLeft;

		while ( (elem =3D elem.parentNode) && elem !=3D=3D body && elem =
!=3D=3D docElem ) {
			if ( jQuery.offset.supportsFixedPosition && =
prevComputedStyle.position =3D=3D=3D "fixed" ) {
				break;
			}

			computedStyle =3D defaultView ? defaultView.getComputedStyle(elem, =
null) : elem.currentStyle;
			top  -=3D elem.scrollTop;
			left -=3D elem.scrollLeft;

			if ( elem =3D=3D=3D offsetParent ) {
				top  +=3D elem.offsetTop;
				left +=3D elem.offsetLeft;

				if ( jQuery.offset.doesNotAddBorder && =
!(jQuery.offset.doesAddBorderForTableAndCells && =
/^t(able|d|h)$/i.test(elem.nodeName)) ) {
					top  +=3D parseFloat( computedStyle.borderTopWidth  ) || 0;
					left +=3D parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent =3D offsetParent, offsetParent =3D =
elem.offsetParent;
			}

			if ( jQuery.offset.subtractsBorderForOverflowNotVisible && =
computedStyle.overflow !=3D=3D "visible" ) {
				top  +=3D parseFloat( computedStyle.borderTopWidth  ) || 0;
				left +=3D parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle =3D computedStyle;
		}

		if ( prevComputedStyle.position =3D=3D=3D "relative" || =
prevComputedStyle.position =3D=3D=3D "static" ) {
			top  +=3D body.offsetTop;
			left +=3D body.offsetLeft;
		}

		if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position =
=3D=3D=3D "fixed" ) {
			top  +=3D Math.max( docElem.scrollTop, body.scrollTop );
			left +=3D Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset =3D {
	initialize: function() {
		var body =3D document.body, container =3D =
document.createElement("div"), innerDiv, checkDiv, table, td, =
bodyMarginTop =3D parseFloat( jQuery.curCSS(body, "marginTop", true) ) =
|| 0,
			html =3D "<div =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";

		jQuery.extend( container.style, { position: "absolute", top: 0, left: =
0, margin: 0, border: 0, width: "1px", height: "1px", visibility: =
"hidden" } );

		container.innerHTML =3D html;
		body.insertBefore( container, body.firstChild );
		innerDiv =3D container.firstChild;
		checkDiv =3D innerDiv.firstChild;
		td =3D innerDiv.nextSibling.firstChild.firstChild;

		this.doesNotAddBorder =3D (checkDiv.offsetTop !=3D=3D 5);
		this.doesAddBorderForTableAndCells =3D (td.offsetTop =3D=3D=3D 5);

		checkDiv.style.position =3D "fixed", checkDiv.style.top =3D "20px";
		// safari subtracts parent border width here which is 5px
		this.supportsFixedPosition =3D (checkDiv.offsetTop =3D=3D=3D 20 || =
checkDiv.offsetTop =3D=3D=3D 15);
		checkDiv.style.position =3D checkDiv.style.top =3D "";

		innerDiv.style.overflow =3D "hidden", innerDiv.style.position =3D =
"relative";
		this.subtractsBorderForOverflowNotVisible =3D (checkDiv.offsetTop =
=3D=3D=3D -5);

		this.doesNotIncludeMarginInBodyOffset =3D (body.offsetTop !=3D=3D =
bodyMarginTop);

		body.removeChild( container );
		body =3D container =3D innerDiv =3D checkDiv =3D table =3D td =3D =
null;
		jQuery.offset.initialize =3D jQuery.noop;
	},

	bodyOffset: function( body ) {
		var top =3D body.offsetTop, left =3D body.offsetLeft;

		jQuery.offset.initialize();

		if ( jQuery.offset.doesNotIncludeMarginInBodyOffset ) {
			top  +=3D parseFloat( jQuery.curCSS(body, "marginTop",  true) ) || 0;
			left +=3D parseFloat( jQuery.curCSS(body, "marginLeft", true) ) || 0;
		}

		return { top: top, left: left };
	},
=09
	setOffset: function( elem, options, i ) {
		// set position first, in-case top/left are set even on static elem
		if ( /static/.test( jQuery.curCSS( elem, "position" ) ) ) {
			elem.style.position =3D "relative";
		}
		var curElem   =3D jQuery( elem ),
			curOffset =3D curElem.offset(),
			curTop    =3D parseInt( jQuery.curCSS( elem, "top",  true ), 10 ) || =
0,
			curLeft   =3D parseInt( jQuery.curCSS( elem, "left", true ), 10 ) || =
0;

		if ( jQuery.isFunction( options ) ) {
			options =3D options.call( elem, i, curOffset );
		}

		var props =3D {
			top:  (options.top  - curOffset.top)  + curTop,
			left: (options.left - curOffset.left) + curLeft
		};
	=09
		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({
	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem =3D this[0],

		// Get *real* offsetParent
		offsetParent =3D this.offsetParent(),

		// Get correct offsets
		offset       =3D this.offset(),
		parentOffset =3D /^body|html$/i.test(offsetParent[0].nodeName) ? { =
top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and =
marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -=3D parseFloat( jQuery.curCSS(elem, "marginTop",  true) ) =
|| 0;
		offset.left -=3D parseFloat( jQuery.curCSS(elem, "marginLeft", true) ) =
|| 0;

		// Add offsetParent borders
		parentOffset.top  +=3D parseFloat( jQuery.curCSS(offsetParent[0], =
"borderTopWidth",  true) ) || 0;
		parentOffset.left +=3D parseFloat( jQuery.curCSS(offsetParent[0], =
"borderLeftWidth", true) ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent =3D this.offsetParent || document.body;
			while ( offsetParent && (!/^body|html$/i.test(offsetParent.nodeName) =
&& jQuery.css(offsetParent, "position") =3D=3D=3D "static") ) {
				offsetParent =3D offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method =3D "scroll" + name;

	jQuery.fn[ method ] =3D function(val) {
		var elem =3D this[0], win;
	=09
		if ( !elem ) {
			return null;
		}

		if ( val !=3D=3D undefined ) {
			// Set the scroll offset
			return this.each(function() {
				win =3D getWindow( this );

				if ( win ) {
					win.scrollTo(
						!i ? val : jQuery(win).scrollLeft(),
						 i ? val : jQuery(win).scrollTop()
					);

				} else {
					this[ method ] =3D val;
				}
			});
		} else {
			win =3D getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : =
"pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}
	};
});

function getWindow( elem ) {
	return ("scrollTo" in elem && elem.document) ?
		elem :
		elem.nodeType =3D=3D=3D 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type =3D name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn["inner" + name] =3D function() {
		return this[0] ?
			jQuery.css( this[0], type, false, "padding" ) :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn["outer" + name] =3D function( margin ) {
		return this[0] ?
			jQuery.css( this[0], type, false, margin ? "margin" : "border" ) :
			null;
	};

	jQuery.fn[ type ] =3D function( size ) {
		// Get window width or height
		var elem =3D this[0];
		if ( !elem ) {
			return size =3D=3D null ? null : this;
		}
	=09
		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self =3D jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		return ("scrollTo" in elem && elem.document) ? // does it walk and =
quack like a window?
			// Everyone else use document.documentElement or document.body =
depending on Quirks vs Standards mode
			elem.document.compatMode =3D=3D=3D "CSS1Compat" && =
elem.document.documentElement[ "client" + name ] ||
			elem.document.body[ "client" + name ] :

			// Get document width or height
			(elem.nodeType =3D=3D=3D 9) ? // is it a document
				// Either scroll[Width/Height] or offset[Width/Height], whichever is =
greater
				Math.max(
					elem.documentElement["client" + name],
					elem.body["scroll" + name], elem.documentElement["scroll" + name],
					elem.body["offset" + name], elem.documentElement["offset" + name]
				) :

				// Get or set width or height on the element
				size =3D=3D=3D undefined ?
					// Get width or height on the element
					jQuery.css( elem, type ) :

					// Set the width or height on the element (default to pixels if =
value is unitless)
					this.css( type, typeof size =3D=3D=3D "string" ? size : size + "px" =
);
	};

});
// Expose jQuery to the global object
window.jQuery =3D window.$ =3D jQuery;

})(window);

------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-js
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/_docs/syntax/!script.js

/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.1.364 (October 15 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
//
// Begin anonymous function. This is used to contain local scope =
variables without polutting global scope.
//
if (!window.SyntaxHighlighter) var SyntaxHighlighter =3D function() {=20

// Shortcut object which will be assigned to the SyntaxHighlighter =
variable.
// This is a shorthand for local reference in order to avoid long =
namespace=20
// references to SyntaxHighlighter.whatever...
var sh =3D {
	defaults : {
		/** Additional CSS class names to be added to highlighter elements. */
		'class-name' : '',
	=09
		/** First line number. */
		'first-line' : 1,
	=09
		/**
		 * Pads line numbers. Possible values are:
		 *
		 *   false - don't pad line numbers.
		 *   true  - automaticaly pad numbers with minimum required number of =
leading zeroes.
		 *   [int] - length up to which pad line numbers.
		 */
		'pad-line-numbers' : true,
	=09
		/** Lines to highlight. */
		'highlight' : null,
	=09
		/** Enables or disables smart tabs. */
		'smart-tabs' : true,
	=09
		/** Gets or sets tab size. */
		'tab-size' : 4,
	=09
		/** Enables or disables gutter. */
		'gutter' : true,
	=09
		/** Enables or disables toolbar. */
		'toolbar' : true,
	=09
		/** Forces code view to be collapsed. */
		'collapse' : false,
	=09
		/** Enables or disables automatic links. */
		'auto-links' : true,
	=09
		/** Gets or sets light mode. Equavalent to turning off gutter and =
toolbar. */
		'light' : false,
	=09
		/** Enables or disables automatic line wrapping. */
		'wrap-lines' : true,
	=09
		'html-script' : false
	},
=09
	config : {
		/** Enables use of <SCRIPT type=3D"syntaxhighlighter" /> tags. */
		useScriptTags : true,
	=09
		/** Path to the copy to clipboard SWF file. */
		clipboardSwf : null,

		/** Width of an item in the toolbar. */
		toolbarItemWidth : 16,

		/** Height of an item in the toolbar. */
		toolbarItemHeight : 16,
	=09
		/** Blogger mode flag. */
		bloggerMode : false,
	=09
		stripBrs : false,
	=09
		/** Name of the tag that SyntaxHighlighter will automatically look =
for. */
		tagName : 'pre',
	=09
		strings : {
			expandSource : 'show source',
			viewSource : 'view source',
			copyToClipboard : 'copy to clipboard',
			copyToClipboardConfirmation : 'The code is in your clipboard now',
			print : 'print',
			help : '?',
			alert: 'SyntaxHighlighter\n\n',
			noBrush : 'Can\'t find brush for: ',
			brushNotHtmlScript : 'Brush wasn\'t configured for html-script =
option: ',
		=09
			// this is populated by the build script
			aboutDialog : '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 =
Transitional//EN" =
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html =
xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta =
http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8" =
/><title>About SyntaxHighlighter</title></head><body =
style=3D"font-family:Geneva,Arial,Helvetica,sans-serif;background-color:#=
fff;color:#000;font-size:1em;text-align:center;"><div =
style=3D"text-align:center;margin-top:3em;"><div =
style=3D"font-size:xx-large;">SyntaxHighlighter</div><div =
style=3D"font-size:.75em;margin-bottom:4em;"><div>version 2.1.364 =
(October 15 2009)</div><div><a href=3D"http://alexgorbatchev.com" =
target=3D"_blank" =
style=3D"color:#0099FF;text-decoration:none;">http://alexgorbatchev.com</=
a></div><div>If you like this script, please <a =
href=3D"https://www.paypal.com/cgi-bin/webscr?cmd=3D_s-xclick&hosted_butt=
on_id=3D2930402" =
style=3D"color:#0099FF;text-decoration:none;">donate</a> to keep =
development active!</div></div><div>JavaScript code syntax =
highlighter.</div><div>Copyright 2004-2009 Alex =
Gorbatchev.</div></div></body></html>'
		},

		/** If true, output will show HTML produces instead. */
		debug : false
	},
=09
	/** Internal 'global' variables. */
	vars : {
		discoveredBrushes : null,
		spaceWidth : null,
		printFrame : null,
		highlighters : {}
	},
=09
	/** This object is populated by user included external brush files. */
	brushes : {},

	/** Common regular expressions. */
	regexLib : {
		multiLineCComments			: /\/\*[\s\S]*?\*\//gm,
		singleLineCComments			: /\/\/.*$/gm,
		singleLinePerlComments		: /#.*$/gm,
		doubleQuotedString			: /"([^\\"\n]|\\.)*"/g,
		singleQuotedString			: /'([^\\'\n]|\\.)*'/g,
		multiLineDoubleQuotedString	: /"([^\\"]|\\.)*"/g,
		multiLineSingleQuotedString	: /'([^\\']|\\.)*'/g,
		xmlComments					: /(&lt;|<)!--[\s\S]*?--(&gt;|>)/gm,
		url							: =
/&lt;\w+:\/\/[\w-.\/?%&=3D@:;]*&gt;|\w+:\/\/[\w-.\/?%&=3D@:;]*/g,
	=09
		/** <?=3D ?> tags. */
		phpScriptTags 				: { left: /(&lt;|<)\?=3D?/g, right: /\?(&gt;|>)/g },
	=09
		/** <%=3D %> tags. */
		aspScriptTags				: { left: /(&lt;|<)%=3D?/g, right: /%(&gt;|>)/g },
	=09
		/** <script></script> tags. */
		scriptScriptTags			: { left: /(&lt;|<)\s*script.*?(&gt;|>)/gi, right: =
/(&lt;|<)\/\s*script\s*(&gt;|>)/gi }
	},

	toolbar : {
		/**
		 * Creates new toolbar for a highlighter.
		 * @param {Highlighter} highlighter    Target highlighter.
		 */
		create : function(highlighter)
		{
			var div =3D document.createElement('DIV'),
				items =3D sh.toolbar.items
				;
		=09
			div.className =3D 'toolbar';
		=09
			for (var name in items)=20
			{
				var constructor =3D items[name],
					command =3D new constructor(highlighter),
					element =3D command.create()
					;
			=09
				highlighter.toolbarCommands[name] =3D command;
			=09
				if (element =3D=3D null)
					continue;
				=09
				if (typeof(element) =3D=3D 'string')
					element =3D sh.toolbar.createButton(element, highlighter.id, name);
			=09
				element.className +=3D 'item ' + name;
				div.appendChild(element);
			}
		=09
			return div;
		},
	=09
		/**
		 * Create a standard anchor button for the toolbar.
		 * @param {String} label			Label text to display.
		 * @param {String} highlighterId	Highlighter ID that this button would =
belong to.
		 * @param {String} commandName		Command name that would be executed.
		 * @return {Element}				Returns an 'A' element.
		 */
		createButton : function(label, highlighterId, commandName)
		{
			var a =3D document.createElement('a'),
				style =3D a.style,
				config =3D sh.config,
				width =3D config.toolbarItemWidth,
				height =3D config.toolbarItemHeight
				;
		=09
			a.href =3D '#' + commandName;
			a.title =3D label;
			a.highlighterId =3D highlighterId;
			a.commandName =3D commandName;
			a.innerHTML =3D label;
		=09
			if (isNaN(width) =3D=3D false)
				style.width =3D width + 'px';

			if (isNaN(height) =3D=3D false)
				style.height =3D height + 'px';
		=09
			a.onclick =3D function(e)
			{
				try
				{
					sh.toolbar.executeCommand(
						this,=20
						e || window.event,
						this.highlighterId,=20
						this.commandName
					);
				}
				catch(e)
				{
					sh.utils.alert(e.message);
				}
			=09
				return false;
			};
		=09
			return a;
		},
	=09
		/**
		 * Executes a toolbar command.
		 * @param {Element}		sender  		Sender element.
		 * @param {MouseEvent}	event			Original mouse event object.
		 * @param {String}		highlighterId	Highlighter DIV element ID.
		 * @param {String}		commandName		Name of the command to execute.
		 * @return {Object} Passes out return value from command execution.
		 */
		executeCommand : function(sender, event, highlighterId, commandName, =
args)
		{
			var highlighter =3D sh.vars.highlighters[highlighterId],=20
				command
				;

			if (highlighter =3D=3D null || (command =3D =
highlighter.toolbarCommands[commandName]) =3D=3D null)=20
				return null;

			return command.execute(sender, event, args);
		},
	=09
		/** Collection of toolbar items. */
		items : {
			expandSource : function(highlighter)
			{
				this.create =3D function()
				{
					if (highlighter.getParam('collapse') !=3D true)
						return;
				=09
					return sh.config.strings.expandSource;
				};
		=09
				this.execute =3D function(sender, event, args)
				{
					var div =3D highlighter.div;
				=09
					sender.parentNode.removeChild(sender);
					div.className =3D div.className.replace('collapsed', '');
				};
			},
	=09
			/**=20
			 * Command to open a new window and display the original unformatted =
source code inside.
			 */
			viewSource : function(highlighter)
			{
				this.create =3D function()
				{
					return sh.config.strings.viewSource;
				};
			=09
				this.execute =3D function(sender, event, args)
				{
					var code =3D =
sh.utils.fixInputString(highlighter.originalCode).replace(/</g, '&lt;'),
						wnd =3D sh.utils.popup('', '_blank', 750, 400, 'location=3D0, =
resizable=3D1, menubar=3D0, scrollbars=3D1')
						;
				=09
					code =3D sh.utils.unindent(code);
				=09
					wnd.document.write('<pre>' + code + '</pre>');
					wnd.document.close();
				};
			},
		=09
			/**
			 * Command to copy the original source code in to the clipboard.
			 * Uses Flash method if <code>clipboardSwf</code> is configured.
			 */
			copyToClipboard : function(highlighter)
			{
				var flashDiv, flashSwf,
					highlighterId =3D highlighter.id
					;
			=09
				this.create =3D function()
				{
					var config =3D sh.config;
				=09
					// disable functionality if running locally
					if (config.clipboardSwf =3D=3D null)
						return null;

					function params(list)
					{
						var result =3D '';
					=09
						for (var name in list)
							result +=3D "<param name=3D'" + name + "' value=3D'" + list[name] =
+ "'/>";
						=09
						return result;
					};
				=09
					function attributes(list)
					{
						var result =3D '';
					=09
						for (var name in list)
							result +=3D " " + name + "=3D'" + list[name] + "'";
						=09
						return result;
					};
				=09
					var args1 =3D {
							width				: config.toolbarItemWidth,
							height				: config.toolbarItemHeight,
							id					: highlighterId + '_clipboard',
							type				: 'application/x-shockwave-flash',
							title				: sh.config.strings.copyToClipboard
						},
					=09
						// these arguments are used in IE's <param /> collection
						args2 =3D {
							allowScriptAccess	: 'always',
							wmode				: 'transparent',
							flashVars			: 'highlighterId=3D' + highlighterId,
							menu				: 'false'
						},
						swf =3D config.clipboardSwf,
						html
					;

					if (/msie/i.test(navigator.userAgent))
					{
						html =3D '<object'
							+ attributes({
								classid : 'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000',
								codebase : =
'http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#vers=
ion=3D9,0,0,0'
							})
							+ attributes(args1)
							+ '>'
							+ params(args2)
							+ params({ movie : swf })
							+ '</object>'
						;
					}
					else
					{
						html =3D '<embed'
							+ attributes(args1)
							+ attributes(args2)
							+ attributes({ src : swf })
							+ '/>'
						;
					}

					flashDiv =3D document.createElement('div');
					flashDiv.innerHTML =3D html;
				=09
					return flashDiv;
				};
			=09
				this.execute =3D function(sender, event, args)
				{
					var command =3D args.command;

					switch (command)
					{
						case 'get':
							var code =3D sh.utils.unindent(
								sh.utils.fixInputString(highlighter.originalCode)
									.replace(/&lt;/g, '<')
									.replace(/&gt;/g, '>')
									.replace(/&amp;/g, '&')
								);

							if(window.clipboardData)
								// will fall through to the confirmation because there isn't a =
break
								window.clipboardData.setData('text', code);
							else
								return sh.utils.unindent(code);
						=09
						case 'ok':
							sh.utils.alert(sh.config.strings.copyToClipboardConfirmation);
							break;
						=09
						case 'error':
							sh.utils.alert(args.message);
							break;
					}
				};
			},
		=09
			/** Command to print the colored source code. */
			printSource : function(highlighter)
			{
				this.create =3D function()
				{
					return sh.config.strings.print;
				};
			=09
				this.execute =3D function(sender, event, args)
				{
					var iframe =3D document.createElement('IFRAME'),
						doc =3D null
						;
				=09
					// make sure there is never more than one hidden iframe created by =
SH
					if (sh.vars.printFrame !=3D null)
						document.body.removeChild(sh.vars.printFrame);
				=09
					sh.vars.printFrame =3D iframe;
				=09
					// this hides the iframe
					iframe.style.cssText =3D =
'position:absolute;width:0px;height:0px;left:-500px;top:-500px;';
			=09
					document.body.appendChild(iframe);
					doc =3D iframe.contentWindow.document;
				=09
					copyStyles(doc, window.document);
					doc.write('<div class=3D"' + =
highlighter.div.className.replace('collapsed', '') + ' printing">' + =
highlighter.div.innerHTML + '</div>');
					doc.close();
				=09
					iframe.contentWindow.focus();
					iframe.contentWindow.print();
				=09
					function copyStyles(destDoc, sourceDoc)
					{
						var links =3D sourceDoc.getElementsByTagName('link');
				=09
						for(var i =3D 0; i < links.length; i++)
							if(links[i].rel.toLowerCase() =3D=3D 'stylesheet' && =
/shCore\.css$/.test(links[i].href))
								destDoc.write('<link type=3D"text/css" rel=3D"stylesheet" =
href=3D"' + links[i].href + '"></link>');
					};
				};
			},

			/** Command to display the about dialog window. */
			about : function(highlighter)
			{
				this.create =3D function()
				{=09
					return sh.config.strings.help;
				};

				this.execute =3D function(sender, event)
				{=09
					var wnd =3D sh.utils.popup('', '_blank', 500, 250, =
'scrollbars=3D0'),
						doc =3D wnd.document
						;
				=09
					doc.write(sh.config.strings.aboutDialog);
					doc.close();
					wnd.focus();
				};
			}
		}
	},

	utils : {
		/**
		 * Finds an index of element in the array.
		 * @ignore
		 * @param {Object} searchElement
		 * @param {Number} fromIndex
		 * @return {Number} Returns index of element if found; -1 otherwise.
		 */
		indexOf : function(array, searchElement, fromIndex)
		{
			fromIndex =3D Math.max(fromIndex || 0, 0);

			for (var i =3D fromIndex; i < array.length; i++)
				if(array[i] =3D=3D searchElement)
					return i;

			return -1;
		},
	=09
		/**
		 * Generates a unique element ID.
		 */
		guid : function(prefix)
		{
			return prefix + Math.round(Math.random() * 1000000).toString();
		},
	=09
		/**
		 * Merges two objects. Values from obj2 override values in obj1.
		 * Function is NOT recursive and works only for one dimensional =
objects.
		 * @param {Object} obj1 First object.
		 * @param {Object} obj2 Second object.
		 * @return {Object} Returns combination of both objects.
		 */
		merge: function(obj1, obj2)
		{
			var result =3D {}, name;

			for (name in obj1)=20
				result[name] =3D obj1[name];
		=09
			for (name in obj2)=20
				result[name] =3D obj2[name];
			=09
			return result;
		},
	=09
		/**
		 * Attempts to convert string to boolean.
		 * @param {String} value Input string.
		 * @return {Boolean} Returns true if input was "true", false if input =
was "false" and value otherwise.
		 */
		toBoolean: function(value)
		{
			switch (value)
			{
				case "true":
					return true;
				=09
				case "false":
					return false;
			}
		=09
			return value;
		},
	=09
		/**
		 * Opens up a centered popup window.
		 * @param {String} url		URL to open in the window.
		 * @param {String} name		Popup name.
		 * @param {int} width		Popup width.
		 * @param {int} height		Popup height.
		 * @param {String} options	window.open() options.
		 * @return {Window}			Returns window instance.
		 */
		popup: function(url, name, width, height, options)
		{
			var x =3D (screen.width - width) / 2,
				y =3D (screen.height - height) / 2
				;
			=09
			options +=3D	', left=3D' + x +=20
						', top=3D' + y +
						', width=3D' + width +
						', height=3D' + height
				;
			options =3D options.replace(/^,/, '');

			var win =3D window.open(url, name, options);
			win.focus();
			return win;
		},
	=09
		/**
		 * Adds event handler to the target object.
		 * @param {Object} obj		Target object.
		 * @param {String} type		Name of the event.
		 * @param {Function} func	Handling function.
		 */
		addEvent: function(obj, type, func)
		{
			if (obj.attachEvent)=20
			{
				obj['e' + type + func] =3D func;
				obj[type + func] =3D function()
				{
					obj['e' + type + func](window.event);
				}
				obj.attachEvent('on' + type, obj[type + func]);
			}
			else=20
			{
				obj.addEventListener(type, func, false);
			}
		},
	=09
		/**
		 * Displays an alert.
		 * @param {String} str String to display.
		 */
		alert: function(str)
		{
			alert(sh.config.strings.alert + str)
		},
	=09
		/**
		 * Finds a brush by its alias.
		 *
		 * @param {String} alias	Brush alias.
		 * @param {Boolean} alert	Suppresses the alert if false.
		 * @return {Brush}			Returns bursh constructor if found, null =
otherwise.
		 */
		findBrush: function(alias, alert)
		{
			var brushes =3D sh.vars.discoveredBrushes,
				result =3D null
				;
		=09
			if (brushes =3D=3D null)=20
			{
				brushes =3D {};
			=09
				// Find all brushes
				for (var brush in sh.brushes)=20
				{
					var aliases =3D sh.brushes[brush].aliases;
				=09
					if (aliases =3D=3D null)=20
						continue;
				=09
					// keep the brush name
					sh.brushes[brush].name =3D brush.toLowerCase();
				=09
					for (var i =3D 0; i < aliases.length; i++)=20
						brushes[aliases[i]] =3D brush;
				}
			=09
				sh.vars.discoveredBrushes =3D brushes;
			}
		=09
			result =3D sh.brushes[brushes[alias]];

			if (result =3D=3D null && alert !=3D false)
				sh.utils.alert(sh.config.strings.noBrush + alias);
		=09
			return result;
		},
	=09
		/**
		 * Executes a callback on each line and replaces each line with result =
from the callback.
		 * @param {Object} str			Input string.
		 * @param {Object} callback		Callback function taking one string =
argument and returning a string.
		 */
		eachLine: function(str, callback)
		{
			var lines =3D str.split('\n');
		=09
			for (var i =3D 0; i < lines.length; i++)
				lines[i] =3D callback(lines[i]);
			=09
			return lines.join('\n');
		},
	=09
		/**
		 * This is a special trim which only removes first and last empty =
lines
		 * and doesn't affect valid leading space on the first line.
		 *=20
		 * @param {String} str   Input string
		 * @return {String}      Returns string without empty first and last =
lines.
		 */
		trimFirstAndLastLines: function(str)
		{
			return str.replace(/^[ ]*[\n]+|[\n]*[ ]*$/g, '');
		},
	=09
		/**
		 * Parses key/value pairs into hash object.
		 *=20
		 * Understands the following formats:
		 * - name: word;
		 * - name: [word, word];
		 * - name: "string";
		 * - name: 'string';
		 *=20
		 * For example:
		 *   name1: value; name2: [value, value]; name3: 'value'
		 *  =20
		 * @param {String} str    Input string.
		 * @return {Object}       Returns deserialized object.
		 */
		parseParams: function(str)
		{
			var match,=20
				result =3D {},
				arrayRegex =3D new XRegExp("^\\[(?<values>(.*?))\\]$"),
				regex =3D new XRegExp(
					"(?<name>[\\w-]+)" +
					"\\s*:\\s*" +
					"(?<value>" +
						"[\\w-%#]+|" +		// word
						"\\[.*?\\]|" +		// [] array
						'".*?"|' +			// "" string
						"'.*?'" +			// '' string
					")\\s*;?",
					"g"
				)
				;

			while ((match =3D regex.exec(str)) !=3D null)=20
			{
				var value =3D match.value
					.replace(/^['"]|['"]$/g, '') // strip quotes from end of strings
					;
			=09
				// try to parse array value
				if (value !=3D null && arrayRegex.test(value))
				{
					var m =3D arrayRegex.exec(value);
					value =3D m.values.length > 0 ? m.values.split(/\s*,\s*/) : [];
				}
			=09
				result[match.name] =3D value;
			}
		=09
			return result;
		},
=09
		/**
		 * Wraps each line of the string into <code/> tag with given style =
applied to it.
		 *=20
		 * @param {String} str   Input string.
		 * @param {String} css   Style name to apply to the string.
		 * @return {String}      Returns input string with each line =
surrounded by <span/> tag.
		 */
		decorate: function(str, css)
		{
			if (str =3D=3D null || str.length =3D=3D 0 || str =3D=3D '\n')=20
				return str;
=09
			str =3D str.replace(/</g, '&lt;');
=09
			// Replace two or more sequential spaces with &nbsp; leaving last =
space untouched.
			str =3D str.replace(/ {2,}/g, function(m)
			{
				var spaces =3D '';
			=09
				for (var i =3D 0; i < m.length - 1; i++)
					spaces +=3D '&nbsp;';
			=09
				return spaces + ' ';
			});

			// Split each line and apply <span class=3D"...">...</span> to them =
so that
			// leading spaces aren't included.
			if (css !=3D null)=20
				str =3D sh.utils.eachLine(str, function(line)
				{
					if (line.length =3D=3D 0)=20
						return '';
				=09
					var spaces =3D '';
				=09
					line =3D line.replace(/^(&nbsp;| )+/, function(s)
					{
						spaces =3D s;
						return '';
					});
				=09
					if (line.length =3D=3D 0)=20
						return spaces;
				=09
					return spaces + '<code class=3D"' + css + '">' + line + '</code>';
				});

			return str;
		},
=09
		/**
		 * Pads number with zeros until it's length is the same as given =
length.
		 *=20
		 * @param {Number} number	Number to pad.
		 * @param {Number} length	Max string length with.
		 * @return {String}			Returns a string padded with proper amount of =
'0'.
		 */
		padNumber : function(number, length)
		{
			var result =3D number.toString();
		=09
			while (result.length < length)
				result =3D '0' + result;
		=09
			return result;
		},
	=09
		/**
		 * Measures width of a single space character.
		 * @return {Number} Returns width of a single space character.
		 */
		measureSpace : function()
		{
			var container =3D document.createElement('div'),
				span,
				result =3D 0,
				body =3D document.body,
				id =3D sh.utils.guid('measureSpace'),
			=09
				// variable names will be compressed, so it's better than a plain =
string
				divOpen =3D '<div class=3D"',
				closeDiv =3D '</div>',
				closeSpan =3D '</span>'
				;

			// we have to duplicate highlighter nested structure in order to get =
an acurate space measurment
			container.innerHTML =3D=20
				divOpen + 'syntaxhighlighter">'=20
					+ divOpen + 'lines">'=20
						+ divOpen + 'line">'=20
							+ divOpen + 'content'
								+ '"><span class=3D"block"><span id=3D"' + id + '">&nbsp;' + =
closeSpan + closeSpan
							+ closeDiv=20
						+ closeDiv=20
					+ closeDiv=20
				+ closeDiv
				;
		=09
			body.appendChild(container);
			span =3D document.getElementById(id);
		=09
			if (/opera/i.test(navigator.userAgent))
			{
				var style =3D window.getComputedStyle(span, null);
				result =3D parseInt(style.getPropertyValue("width"));
			}
			else
			{
				result =3D span.offsetWidth;
			}

			body.removeChild(container);

			return result;
		},
	=09
		/**
		 * Replaces tabs with spaces.
		 *=20
		 * @param {String} code		Source code.
		 * @param {Number} tabSize	Size of the tab.
		 * @return {String}			Returns code with all tabs replaces by spaces.
		 */
		processTabs : function(code, tabSize)
		{
			var tab =3D '';
		=09
			for (var i =3D 0; i < tabSize; i++)
				tab +=3D ' ';

			return code.replace(/\t/g, tab);
		},
	=09
		/**
		 * Replaces tabs with smart spaces.
		 *=20
		 * @param {String} code    Code to fix the tabs in.
		 * @param {Number} tabSize Number of spaces in a column.
		 * @return {String}        Returns code with all tabs replaces with =
roper amount of spaces.
		 */
		processSmartTabs : function(code, tabSize)
		{
			var lines =3D code.split('\n'),
				tab =3D '\t',
				spaces =3D ''
				;
		=09
			// Create a string with 1000 spaces to copy spaces from...=20
			// It's assumed that there would be no indentation longer than that.
			for (var i =3D 0; i < 50; i++)=20
				spaces +=3D '                    '; // 20 spaces * 50
				=09
			// This function inserts specified amount of spaces in the string
			// where a tab is while removing that given tab.
			function insertSpaces(line, pos, count)
			{
				return line.substr(0, pos)
					+ spaces.substr(0, count)
					+ line.substr(pos + 1, line.length) // pos + 1 will get rid of the =
tab
					;
			};
=09
			// Go through all the lines and do the 'smart tabs' magic.
			code =3D sh.utils.eachLine(code, function(line)
			{
				if (line.indexOf(tab) =3D=3D -1)=20
					return line;
			=09
				var pos =3D 0;
			=09
				while ((pos =3D line.indexOf(tab)) !=3D -1)=20
				{
					// This is pretty much all there is to the 'smart tabs' logic.
					// Based on the position within the line and size of a tab,
					// calculate the amount of spaces we need to insert.
					var spaces =3D tabSize - pos % tabSize;
					line =3D insertSpaces(line, pos, spaces);
				}
			=09
				return line;
			});
		=09
			return code;
		},
	=09
		/**
		 * Performs various string fixes based on configuration.
		 */
		fixInputString : function(str)
		{
			var br =3D /<br\s*\/?>|&lt;br\s*\/?&gt;/gi;
		=09
			if (sh.config.bloggerMode =3D=3D true)
				str =3D str.replace(br, '\n');

			if (sh.config.stripBrs =3D=3D true)
				str =3D str.replace(br, '');
			=09
			return str;
		},
	=09
		/**
		 * Removes all white space at the begining and end of a string.
		 *=20
		 * @param {String} str   String to trim.
		 * @return {String}      Returns string without leading and following =
white space characters.
		 */
		trim: function(str)
		{
			return str.replace(/^\s+|\s+$/g, '');
		},
	=09
		/**
		 * Unindents a block of text by the lowest common indent amount.
		 * @param {String} str   Text to unindent.
		 * @return {String}      Returns unindented text block.
		 */
		unindent: function(str)
		{
			var lines =3D sh.utils.fixInputString(str).split('\n'),
				indents =3D new Array(),
				regex =3D /^\s*/,
				min =3D 1000
				;
		=09
			// go through every line and check for common number of indents
			for (var i =3D 0; i < lines.length && min > 0; i++)=20
			{
				var line =3D lines[i];
			=09
				if (sh.utils.trim(line).length =3D=3D 0)=20
					continue;
			=09
				var matches =3D regex.exec(line);
			=09
				// In the event that just one line doesn't have leading white space
				// we can't unindent anything, so bail completely.
				if (matches =3D=3D null)=20
					return str;
				=09
				min =3D Math.min(matches[0].length, min);
			}
		=09
			// trim minimum common number of white space from the begining of =
every line
			if (min > 0)=20
				for (var i =3D 0; i < lines.length; i++)=20
					lines[i] =3D lines[i].substr(min);
		=09
			return lines.join('\n');
		},
=09
		/**
		 * Callback method for Array.sort() which sorts matches by
		 * index position and then by length.
		 *=20
		 * @param {Match} m1	Left object.
		 * @param {Match} m2    Right object.
		 * @return {Number}     Returns -1, 0 or -1 as a comparison result.
		 */
		matchesSortCallback: function(m1, m2)
		{
			// sort matches by index first
			if(m1.index < m2.index)
				return -1;
			else if(m1.index > m2.index)
				return 1;
			else
			{
				// if index is the same, sort by length
				if(m1.length < m2.length)
					return -1;
				else if(m1.length > m2.length)
					return 1;
			}
		=09
			return 0;
		},
=09
		/**
		 * Executes given regular expression on provided code and returns all
		 * matches that are found.
		 *=20
		 * @param {String} code    Code to execute regular expression on.
		 * @param {Object} regex   Regular expression item info from =
<code>regexList</code> collection.
		 * @return {Array}         Returns a list of Match objects.
		 */=20
		getMatches: function(code, regexInfo)
		{
			function defaultAdd(match, regexInfo)
			{
				return [new sh.Match(match[0], match.index, regexInfo.css)];
			};
		=09
			var index =3D 0,
				match =3D null,
				result =3D [],
				func =3D regexInfo.func ? regexInfo.func : defaultAdd
				;
		=09
			while((match =3D regexInfo.regex.exec(code)) !=3D null)
				result =3D result.concat(func(match, regexInfo));
			=09
			return result;
		},
	=09
		processUrls: function(code)
		{
			var lt =3D '&lt;',
				gt =3D '&gt;'
				;
		=09
			return code.replace(sh.regexLib.url, function(m)
			{
				var suffix =3D '', prefix =3D '';
			=09
				// We include &lt; and &gt; in the URL for the common cases like =
<http://google.com>
				// The problem is that they get transformed into =
&lt;http://google.com&gt;
				// Where as &gt; easily looks like part of the URL string.
			=09
				if (m.indexOf(lt) =3D=3D 0)
				{
					prefix =3D lt;
					m =3D m.substring(lt.length);
				}

				if (m.indexOf(gt) =3D=3D m.length - gt.length)
				{
					m =3D m.substring(0, m.length - gt.length);
					suffix =3D gt;
				}
			=09
				return prefix + '<a href=3D"' + m + '">' + m + '</a>' + suffix;
			});
		},
	=09
		/**
		 * Finds all <SCRIPT TYPE=3D"syntaxhighlighter" /> elements.
		 * @return {Array} Returns array of all found SyntaxHighlighter tags.
		 */
		getSyntaxHighlighterScriptTags: function()
		{
			var tags =3D document.getElementsByTagName('script'),
				result =3D []
				;
		=09
			for (var i =3D 0; i < tags.length; i++)
				if (tags[i].type =3D=3D 'syntaxhighlighter')
					result.push(tags[i]);
				=09
			return result;
		},
	=09
		/**
		 * Strips <![CDATA[]]> from <SCRIPT /> content because it should be =
used
		 * there in most cases for XHTML compliance.
		 * @param {String} original	Input code.
		 * @return {String} Returns code without leading <![CDATA[]]> tags.
		 */
		stripCData: function(original)
		{
			var left =3D '<![CDATA[',
				right =3D ']]>',
				// for some reason IE inserts some leading blanks here
				copy =3D sh.utils.trim(original),
				changed =3D false
				;
		=09
			if (copy.indexOf(left) =3D=3D 0)
			{
				copy =3D copy.substring(left.length);
				changed =3D true;
			}
		=09
			if (copy.indexOf(right) =3D=3D copy.length - right.length)
			{
				copy =3D copy.substring(0, copy.length - right.length);
				changed =3D true;
			}
		=09
			return changed ? copy : original;
		}
	}, // end of utils
=09
	/**
	 * Shorthand to highlight all elements on the page that are marked as=20
	 * SyntaxHighlighter source code.
	 *=20
	 * @param {Object} globalParams		Optional parameters which override =
element's=20
	 * 									parameters. Only used if element is specified.
	 *=20
	 * @param {Object} element	Optional element to highlight. If none is
	 * 							provided, all elements in the current document=20
	 * 							are highlighted.
	 */=20
	highlight : function(globalParams, element)
	{
		function toArray(source)
		{
			var result =3D [];
		=09
			for (var i =3D 0; i < source.length; i++)=20
				result.push(source[i]);
			=09
			return result;
		};
	=09
		var elements =3D element ? [element] : =
toArray(document.getElementsByTagName(sh.config.tagName)),=20
			propertyName =3D 'innerHTML',=20
			highlighter =3D null,
			conf =3D sh.config
			;

		// support for <SCRIPT TYPE=3D"syntaxhighlighter" /> feature
		if (conf.useScriptTags)
			elements =3D =
elements.concat(sh.utils.getSyntaxHighlighterScriptTags());

		if (elements.length =3D=3D=3D 0)=20
			return;
=09
		for (var i =3D 0; i < elements.length; i++)=20
		{
			var target =3D elements[i],=20
				params =3D sh.utils.parseParams(target.className),
				brushName,
				code,
				result
				;

			// local params take precedence over globals
			params =3D sh.utils.merge(globalParams, params);
			brushName =3D params['brush'];

			if (brushName =3D=3D null)
				continue;

			// Instantiate a brush
			if (params['html-script'] =3D=3D 'true' || sh.defaults['html-script'] =
=3D=3D true)=20
			{
				highlighter =3D new sh.HtmlScript(brushName);
				brushName =3D 'htmlscript';
			}
			else
			{
				var brush =3D sh.utils.findBrush(brushName);
			=09
				if (brush)
				{
					brushName =3D brush.name;
					highlighter =3D new brush();
				}
				else
				{
					continue;
				}
			}
		=09
			code =3D target[propertyName];
		=09
			// remove CDATA from <SCRIPT/> tags if it's present
			if (conf.useScriptTags)
				code =3D sh.utils.stripCData(code);
		=09
			params['brush-name'] =3D brushName;
			highlighter.highlight(code, params);
		=09
			result =3D highlighter.div;
		=09
			if (sh.config.debug)=20
			{
				result =3D document.createElement('textarea');
				result.value =3D highlighter.div.innerHTML;
				result.style.width =3D '70em';
				result.style.height =3D '30em';
			}
		=09
			target.parentNode.replaceChild(result, target);
		}
	},

	/**
	 * Main entry point for the SyntaxHighlighter.
	 * @param {Object} params Optional params to apply to all highlighted =
elements.
	 */
	all : function(params)
	{
		sh.utils.addEvent(
			window,
			'load',
			function() { sh.highlight(params); }
		);
	}
}; // end of sh

/**
 * Match object.
 */
sh.Match =3D function(value, index, css)
{
	this.value =3D value;
	this.index =3D index;
	this.length =3D value.length;
	this.css =3D css;
	this.brushName =3D null;
};

sh.Match.prototype.toString =3D function()
{
	return this.value;
};

/**
 * Simulates HTML code with a scripting language embedded.
 *=20
 * @param {String} scriptBrushName Brush name of the scripting language.
 */
sh.HtmlScript =3D function(scriptBrushName)
{
	var brushClass =3D sh.utils.findBrush(scriptBrushName),
		scriptBrush,
		xmlBrush =3D new sh.brushes.Xml(),
		bracketsRegex =3D null
		;

	if (brushClass =3D=3D null)
		return;
=09
	scriptBrush =3D new brushClass();
	this.xmlBrush =3D xmlBrush;
=09
	if (scriptBrush.htmlScript =3D=3D null)
	{
		sh.utils.alert(sh.config.strings.brushNotHtmlScript + =
scriptBrushName);
		return;
	}
=09
	xmlBrush.regexList.push(
		{ regex: scriptBrush.htmlScript.code, func: process }
	);
=09
	function offsetMatches(matches, offset)
	{
		for (var j =3D 0; j < matches.length; j++)=20
			matches[j].index +=3D offset;
	}
=09
	function process(match, info)
	{
		var code =3D match.code,
			matches =3D [],
			regexList =3D scriptBrush.regexList,
			offset =3D match.index + match.left.length,
			htmlScript =3D scriptBrush.htmlScript,
			result
			;

		// add all matches from the code
		for (var i =3D 0; i < regexList.length; i++)
		{
			result =3D sh.utils.getMatches(code, regexList[i]);
			offsetMatches(result, offset);
			matches =3D matches.concat(result);
		}
	=09
		// add left script bracket
		if (htmlScript.left !=3D null && match.left !=3D null)
		{
			result =3D sh.utils.getMatches(match.left, htmlScript.left);
			offsetMatches(result, match.index);
			matches =3D matches.concat(result);
		}
	=09
		// add right script bracket
		if (htmlScript.right !=3D null && match.right !=3D null)
		{
			result =3D sh.utils.getMatches(match.right, htmlScript.right);
			offsetMatches(result, match.index + =
match[0].lastIndexOf(match.right));
			matches =3D matches.concat(result);
		}
	=09
		for (var j =3D 0; j < matches.length; j++)
			matches[j].brushName =3D brushClass.name;

		return matches;
	}
};

sh.HtmlScript.prototype.highlight =3D function(code, params)
{
	this.xmlBrush.highlight(code, params);
	this.div =3D this.xmlBrush.div;
}

/**
 * Main Highlither class.
 * @constructor
 */
sh.Highlighter =3D function()
{
};

sh.Highlighter.prototype =3D {
	/**
	 * Returns value of the parameter passed to the highlighter.
	 * @param {String} name				Name of the parameter.
	 * @param {Object} defaultValue		Default value.
	 * @return {Object}					Returns found value or default value otherwise.
	 */
	getParam : function(name, defaultValue)
	{
		var result =3D this.params[name];
		return sh.utils.toBoolean(result =3D=3D null ? defaultValue : result);
	},
=09
	/**
	 * Shortcut to document.createElement().
	 * @param {String} name		Name of the element to create (DIV, A, etc).
	 * @return {HTMLElement}	Returns new HTML element.
	 */
	create: function(name)
	{
		return document.createElement(name);
	},
=09
	/**
	 * Applies all regular expression to the code and stores all found
	 * matches in the `this.matches` array.
	 * @param {Array} regexList		List of regular expressions.
	 * @param {String} code			Source code.
	 * @return {Array}				Returns list of matches.
	 */
	findMatches: function(regexList, code)
	{
		var result =3D [];
	=09
		if (regexList !=3D null)
			for (var i =3D 0; i < regexList.length; i++)=20
				// BUG: length returns len+1 for array if methods added to prototype =
chain (oising@gmail.com)
				if (typeof (regexList[i]) =3D=3D "object")
					result =3D result.concat(sh.utils.getMatches(code, regexList[i]));
	=09
		// sort the matches
		return result.sort(sh.utils.matchesSortCallback);
	},
=09
	/**
	 * Checks to see if any of the matches are inside of other matches.=20
	 * This process would get rid of highligted strings inside comments,=20
	 * keywords inside strings and so on.
	 */
	removeNestedMatches: function()
	{
		var matches =3D this.matches;
	=09
		// Optimized by Jose Prado (http://joseprado.com)
		for (var i =3D 0; i < matches.length; i++)=20
		{=20
			if (matches[i] =3D=3D=3D null)
				continue;
		=09
			var itemI =3D matches[i],
				itemIEndPos =3D itemI.index + itemI.length
				;
		=09
			for (var j =3D i + 1; j < matches.length && matches[i] !=3D=3D null; =
j++)=20
			{
				var itemJ =3D matches[j];
			=09
				if (itemJ =3D=3D=3D null)=20
					continue;
				else if (itemJ.index > itemIEndPos)=20
					break;
				else if (itemJ.index =3D=3D itemI.index && itemJ.length > =
itemI.length)
					this.matches[i] =3D null;
				else if (itemJ.index >=3D itemI.index && itemJ.index < itemIEndPos)=20
					this.matches[j] =3D null;
			}
		}
	},
=09
	/**
	 * Splits block of text into individual DIV lines.
	 * @param {String} code     Code to highlight.
	 * @return {String}         Returns highlighted code in HTML form.
	 */
	createDisplayLines : function(code)
	{
		var lines =3D code.split(/\n/g),
			firstLine =3D parseInt(this.getParam('first-line')),
			padLength =3D this.getParam('pad-line-numbers'),
			highlightedLines =3D this.getParam('highlight', []),
			hasGutter =3D this.getParam('gutter')
			;
	=09
		code =3D '';
	=09
		if (padLength =3D=3D true)
			padLength =3D (firstLine + lines.length - 1).toString().length;
		else if (isNaN(padLength) =3D=3D true)
			padLength =3D 0;

		for (var i =3D 0; i < lines.length; i++)
		{
			var line =3D lines[i],
				indent =3D /^(&nbsp;|\s)+/.exec(line),
				lineClass =3D 'alt' + (i % 2 =3D=3D 0 ? 1 : 2),
				lineNumber =3D sh.utils.padNumber(firstLine + i, padLength),
				highlighted =3D sh.utils.indexOf(highlightedLines, (firstLine + =
i).toString()) !=3D -1,
				spaces =3D null
				;

			if (indent !=3D null)
			{
				spaces =3D indent[0].toString();
				line =3D line.substr(spaces.length);
			}

			line =3D sh.utils.trim(line);
		=09
			if (line.length =3D=3D 0)
				line =3D '&nbsp;';
		=09
			if (highlighted)
				lineClass +=3D ' highlighted';
		=09
			code +=3D=20
				'<div class=3D"line ' + lineClass + '">'
					+ '<table>'
						+ '<tr>'
							+ (hasGutter ? '<td class=3D"number"><code>' + lineNumber + =
'</code></td>' : '')
							+ '<td class=3D"content">'
								+ (spaces !=3D null ? '<code class=3D"spaces">' + =
spaces.replace(' ', '&nbsp;') + '</code>' : '')
								+ line
							+ '</td>'
						+ '</tr>'
					+ '</table>'
				+ '</div>'
				;
		}
	=09
		return code;
	},
=09
	/**
	 * Finds all matches in the source code.
	 * @param {String} code		Source code to process matches in.
	 * @param {Array} matches	Discovered regex matches.
	 * @return {String} Returns formatted HTML with processed mathes.
	 */
	processMatches: function(code, matches)
	{
		var pos =3D 0,=20
			result =3D '',
			decorate =3D sh.utils.decorate, // make an alias to save some bytes
			brushName =3D this.getParam('brush-name', '')
			;
	=09
		function getBrushNameCss(match)
		{
			var result =3D match ? (match.brushName || brushName) : brushName;
			return result ? result + ' ' : '';
		};
	=09
		// Finally, go through the final list of matches and pull the all
		// together adding everything in between that isn't a match.
		for (var i =3D 0; i < matches.length; i++)=20
		{
			var match =3D matches[i],
				matchBrushName
				;
		=09
			if (match =3D=3D=3D null || match.length =3D=3D=3D 0)=20
				continue;
		=09
			matchBrushName =3D getBrushNameCss(match);
		=09
			result +=3D decorate(code.substr(pos, match.index - pos), =
matchBrushName + 'plain')
					+ decorate(match.value, matchBrushName + match.css)
					;

			pos =3D match.index + match.length;
		}

		// don't forget to add whatever's remaining in the string
		result +=3D decorate(code.substr(pos), getBrushNameCss() + 'plain');

		return result;
	},
=09
	/**
	 * Highlights the code and returns complete HTML.
	 * @param {String} code     Code to highlight.
	 * @param {Object} params   Parameters object.
	 */
	highlight: function(code, params)
	{
		// using variables for shortcuts because JS compressor will shorten =
local variable names
		var conf =3D sh.config,
			vars =3D sh.vars,
			div,
			divClassName,
			tabSize,
			important =3D 'important'
			;

		this.params =3D {};
		this.div =3D null;
		this.lines =3D null;
		this.code =3D null;
		this.bar =3D null;
		this.toolbarCommands =3D {};
		this.id =3D sh.utils.guid('highlighter_');

		// register this instance in the highlighters list
		vars.highlighters[this.id] =3D this;

		if (code =3D=3D=3D null)=20
			code =3D '';
	=09
		// local params take precedence over defaults
		this.params =3D sh.utils.merge(sh.defaults, params || {});

		// process light mode
		if (this.getParam('light') =3D=3D true)
			this.params.toolbar =3D this.params.gutter =3D false;
	=09
		this.div =3D div =3D this.create('DIV');
		this.lines =3D this.create('DIV');
		this.lines.className =3D 'lines';

		className =3D 'syntaxhighlighter';
		div.id =3D this.id;
	=09
		// make collapsed
		if (this.getParam('collapse'))
			className +=3D ' collapsed';
	=09
		// disable gutter
		if (this.getParam('gutter') =3D=3D false)
			className +=3D ' nogutter';
	=09
		// disable line wrapping
		if (this.getParam('wrap-lines') =3D=3D false)
		 	this.lines.className +=3D ' no-wrap';

		// add custom user style name
		className +=3D ' ' + this.getParam('class-name');
	=09
		// add brush alias to the class name for custom CSS
		className +=3D ' ' + this.getParam('brush-name');
	=09
		div.className =3D className;
	=09
		this.originalCode =3D code;
		this.code =3D sh.utils.trimFirstAndLastLines(code)
			.replace(/\r/g, ' ') // IE lets these buggers through
			;
	=09
		tabSize =3D this.getParam('tab-size');
	=09
		// replace tabs with spaces
		this.code =3D this.getParam('smart-tabs') =3D=3D true
			? sh.utils.processSmartTabs(this.code, tabSize)
			: sh.utils.processTabs(this.code, tabSize)
			;

		this.code =3D sh.utils.unindent(this.code);

		// add controls toolbar
		if (this.getParam('toolbar'))=20
		{
			this.bar =3D this.create('DIV');
			this.bar.className =3D 'bar';
			this.bar.appendChild(sh.toolbar.create(this));
			div.appendChild(this.bar);
		=09
			// set up toolbar rollover
			var bar =3D this.bar;
			function hide() { bar.className =3D bar.className.replace('show', =
''); }
			div.onmouseover =3D function() { hide(); bar.className +=3D ' show'; =
};
			div.onmouseout =3D function() { hide(); }
		}
	=09
		div.appendChild(this.lines);
=09
		this.matches =3D this.findMatches(this.regexList, this.code);
		this.removeNestedMatches();
	=09
		code =3D this.processMatches(this.code, this.matches);
	=09
		// finally, split all lines so that they wrap well
		code =3D this.createDisplayLines(sh.utils.trim(code));
	=09
		// finally, process the links
		if (this.getParam('auto-links'))
			code =3D sh.utils.processUrls(code);

		this.lines.innerHTML =3D code;
	},
=09
	/**
	 * Converts space separated list of keywords into a regular expression =
string.
	 * @param {String} str    Space separated keywords.
	 * @return {String}       Returns regular expression string.
	 */=09
	getKeywords: function(str)
	{
		str =3D str
			.replace(/^\s+|\s+$/g, '')
			.replace(/\s+/g, '|')
			;
	=09
		return '\\b(?:' + str + ')\\b';
	},
=09
	/**
	 * Makes a brush compatible with the `html-script` functionality.
	 * @param {Object} regexGroup Object containing `left` and `right` =
regular expressions.
	 */
	forHtmlScript: function(regexGroup)
	{
		this.htmlScript =3D {
			left : { regex: regexGroup.left, css: 'script' },
			right : { regex: regexGroup.right, css: 'script' },
			code : new XRegExp(
				"(?<left>" + regexGroup.left.source + ")" +
				"(?<code>.*?)" +
				"(?<right>" + regexGroup.right.source + ")",
				"sgi"
				)
		};
	}
}; // end of Highlighter

return sh;
}(); // end of anonymous function


/**
 * XRegExp 0.6.1
 * (c) 2007-2008 Steven Levithan
 * <http://stevenlevithan.com/regex/xregexp/>
 * MIT License
 *=20
 * provides an augmented, cross-browser implementation of regular =
expressions
 * including support for additional modifiers and syntax. several =
convenience
 * methods and a recursive-construct parser are also included.
 */

// prevent running twice, which would break references to native globals
if (!window.XRegExp) {
// anonymous function to avoid global variables
(function () {
// copy various native globals for reference. can't use the name =
``native``
// because it's a reserved JavaScript keyword.
var real =3D {
        exec:    RegExp.prototype.exec,
        match:   String.prototype.match,
        replace: String.prototype.replace,
        split:   String.prototype.split
    },
    /* regex syntax parsing with support for all the necessary cross-
       browser and context issues (escapings, character classes, etc.) =
*/
    lib =3D {
        part:       =
/(?:[^\\([#\s.]+|\\(?!k<[\w$]+>|[pP]{[^}]+})[\S\s]?|\((?=3D\?(?!#|<[\w$]+=
>)))+|(\()(?:\?(?:(#)[^)]*\)|<([$\w]+)>))?|\\(?:k<([\w$]+)>|[pP]{([^}]+)}=
)|(\[\^?)|([\S\s])/g,
        replaceVar: =
/(?:[^$]+|\$(?![1-9$&`']|{[$\w]+}))+|\$(?:([1-9]\d*|[$&`'])|{([$\w]+)})/g=
,
        extended:   /^(?:\s+|#.*)+/,
        quantifier: /^(?:[?*+]|{\d+(?:,\d*)?})/,
        classLeft:  /&&\[\^?/g,
        classRight: /]/g
    },
    indexOf =3D function (array, item, from) {
        for (var i =3D from || 0; i < array.length; i++)
            if (array[i] =3D=3D=3D item) return i;
        return -1;
    },
    brokenExecUndef =3D /()??/.exec("")[1] !=3D=3D undefined,
    plugins =3D {};

/**
 * Accepts a pattern and flags, returns a new, extended RegExp object.
 * differs from a native regex in that additional flags and syntax are
 * supported and browser inconsistencies are ameliorated.
 * @ignore
 */
XRegExp =3D function (pattern, flags) {
    if (pattern instanceof RegExp) {
        if (flags !=3D=3D undefined)
            throw TypeError("can't supply flags when constructing one =
RegExp from another");
        return pattern.addFlags(); // new copy
    }

    var flags           =3D flags || "",
        singleline      =3D flags.indexOf("s") > -1,
        extended        =3D flags.indexOf("x") > -1,
        hasNamedCapture =3D false,
        captureNames    =3D [],
        output          =3D [],
        part            =3D lib.part,
        match, cc, len, index, regex;

    part.lastIndex =3D 0; // in case the last XRegExp compilation threw =
an error (unbalanced character class)

    while (match =3D real.exec.call(part, pattern)) {
        // comment pattern. this check must come before the capturing =
group check,
        // because both match[1] and match[2] will be non-empty.
        if (match[2]) {
            // keep tokens separated unless the following token is a =
quantifier
            if (!lib.quantifier.test(pattern.slice(part.lastIndex)))
                output.push("(?:)");
        // capturing group
        } else if (match[1]) {
            captureNames.push(match[3] || null);
            if (match[3])
                hasNamedCapture =3D true;
            output.push("(");
        // named backreference
        } else if (match[4]) {
            index =3D indexOf(captureNames, match[4]);
            // keep backreferences separate from subsequent literal =
numbers
            // preserve backreferences to named groups that are =
undefined at this point as literal strings
            output.push(index > -1 ?
                "\\" + (index + 1) + =
(isNaN(pattern.charAt(part.lastIndex)) ? "" : "(?:)") :
                match[0]
            );
        // unicode element (requires plugin)
        } else if (match[5]) {
            output.push(plugins.unicode ?
                plugins.unicode.get(match[5], match[0].charAt(1) =
=3D=3D=3D "P") :
                match[0]
            );
        // character class opening delimiter ("[" or "[^")
        // (non-native unicode elements are not supported within =
character classes)
        } else if (match[6]) {
            if (pattern.charAt(part.lastIndex) =3D=3D=3D "]") {
                // for cross-browser compatibility with ECMA-262 v3 =
behavior,
                // convert [] to (?!) and [^] to [\S\s].
                output.push(match[6] =3D=3D=3D "[" ? "(?!)" : =
"[\\S\\s]");
                part.lastIndex++;
            } else {
                // parse the character class with support for inner =
escapes and
                // ES4's infinitely nesting intersection syntax =
([&&[^&&[]]]).
                cc =3D XRegExp.matchRecursive("&&" + =
pattern.slice(match.index), lib.classLeft, lib.classRight, "", =
{escapeChar: "\\"})[0];
                output.push(match[6] + cc + "]");
                part.lastIndex +=3D cc.length + 1;
            }
        // dot ("."), pound sign ("#"), or whitespace character
        } else if (match[7]) {
            if (singleline && match[7] =3D=3D=3D ".") {
                output.push("[\\S\\s]");
            } else if (extended && lib.extended.test(match[7])) {
                len =3D real.exec.call(lib.extended, =
pattern.slice(part.lastIndex - 1))[0].length;
                // keep tokens separated unless the following token is a =
quantifier
                if (!lib.quantifier.test(pattern.slice(part.lastIndex - =
1 + len)))
                    output.push("(?:)");
                part.lastIndex +=3D len - 1;
            } else {
                output.push(match[7]);
            }
        } else {
            output.push(match[0]);
        }
    }

    regex =3D RegExp(output.join(""), real.replace.call(flags, /[sx]+/g, =
""));
    regex._x =3D {
        source:       pattern,
        captureNames: hasNamedCapture ? captureNames : null
    };
    return regex;
};

/**
 * Barebones plugin support for now (intentionally undocumented)
 * @ignore
 * @param {Object} name
 * @param {Object} o
 */
XRegExp.addPlugin =3D function (name, o) {
    plugins[name] =3D o;
};

/**
 * Adds named capture support, with values returned as ``result.name``.
 *=20
 * Also fixes two cross-browser issues, following the ECMA-262 v3 spec:
 *  - captured values for non-participating capturing groups should be =
returned
 *    as ``undefined``, rather than the empty string.
 *  - the regex's ``lastIndex`` should not be incremented after =
zero-length
 *    matches.
 * @ignore
 */
RegExp.prototype.exec =3D function (str) {
    var match =3D real.exec.call(this, str),
        name, i, r2;
    if (match) {
        // fix browsers whose exec methods don't consistently return
        // undefined for non-participating capturing groups
        if (brokenExecUndef && match.length > 1) {
            // r2 doesn't need /g or /y, but they shouldn't hurt
            r2 =3D new RegExp("^" + this.source + "$(?!\\s)", =
this.getNativeFlags());
            real.replace.call(match[0], r2, function () {
                for (i =3D 1; i < arguments.length - 2; i++) {
                    if (arguments[i] =3D=3D=3D undefined) match[i] =3D =
undefined;
                }
            });
        }
        // attach named capture properties
        if (this._x && this._x.captureNames) {
            for (i =3D 1; i < match.length; i++) {
                name =3D this._x.captureNames[i - 1];
                if (name) match[name] =3D match[i];
            }
        }
        // fix browsers that increment lastIndex after zero-length =
matches
        if (this.global && this.lastIndex > (match.index + =
match[0].length))
            this.lastIndex--;
    }
    return match;
};
})(); // end anonymous function
} // end if(!window.XRegExp)

/**
 * intentionally undocumented
 * @ignore
 */
RegExp.prototype.getNativeFlags =3D function () {
    return (this.global     ? "g" : "") +
           (this.ignoreCase ? "i" : "") +
           (this.multiline  ? "m" : "") +
           (this.extended   ? "x" : "") +
           (this.sticky     ? "y" : "");
};

/**
 * Accepts flags; returns a new XRegExp object generated by recompiling
 * the regex with the additional flags (may include non-native flags).
 * The original regex object is not altered.
 * @ignore
 */
RegExp.prototype.addFlags =3D function (flags) {
    var regex =3D new XRegExp(this.source, (flags || "") + =
this.getNativeFlags());
    if (this._x) {
        regex._x =3D {
            source:       this._x.source,
            captureNames: this._x.captureNames ? =
this._x.captureNames.slice(0) : null
        };
    }
    return regex;
};

/**
 * Accepts a context object and string; returns the result of calling
 * ``exec`` with the provided string. the context is ignored but is
 * accepted for congruity with ``Function.prototype.call``.
 * @ignore
 */
RegExp.prototype.call =3D function (context, str) {
    return this.exec(str);
};

/**
 * Accepts a context object and arguments array; returns the result of
 * calling ``exec`` with the first value in the arguments array. the =
context
 * is ignored but is accepted for congruity with =
``Function.prototype.apply``.
 * @ignore
 */
RegExp.prototype.apply =3D function (context, args) {
    return this.exec(args[0]);
};

/**
 * Accepts a pattern and flags; returns an XRegExp object. if the =
pattern
 * and flag combination has previously been cached, the cached copy is
 * returned, otherwise the new object is cached.
 * @ignore
 */
XRegExp.cache =3D function (pattern, flags) {
    var key =3D "/" + pattern + "/" + (flags || "");
    return XRegExp.cache[key] || (XRegExp.cache[key] =3D new =
XRegExp(pattern, flags));
};

/**
 * Accepts a string; returns the string with regex metacharacters =
escaped.
 * the returned string can safely be used within a regex to match a =
literal
 * string. escaped characters are [, ], {, }, (, ), -, *, +, ?, ., \, ^, =
$,
 * |, #, [comma], and whitespace.
 * @ignore
 */
XRegExp.escape =3D function (str) {
    return str.replace(/[-[\]{}()*+?.\\^$|,#\s]/g, "\\$&");
};

/**
 * Accepts a string to search, left and right delimiters as regex =
pattern
 * strings, optional regex flags (may include non-native s, x, and y =
flags),
 * and an options object which allows setting an escape character and =
changing
 * the return format from an array of matches to a two-dimensional array =
of
 * string parts with extended position data. returns an array of matches
 * (optionally with extended data), allowing nested instances of left =
and right
 * delimiters. use the g flag to return all matches, otherwise only the =
first
 * is returned. if delimiters are unbalanced within the subject data, an =
error
 * is thrown.
 *=20
 * This function admittedly pushes the boundaries of what can be =
accomplished
 * sensibly without a "real" parser. however, by doing so it provides =
flexible
 * and powerful recursive parsing capabilities with minimal code weight.
 *=20
 * Warning: the ``escapeChar`` option is considered experimental and =
might be
 * changed or removed in future versions of XRegExp.
 *=20
 * unsupported features:
 *  - backreferences within delimiter patterns when using =
``escapeChar``.
 *  - although providing delimiters as regex objects adds the minor =
feature of
 *    independent delimiter flags, it introduces other limitations and =
is only
 *    intended to be done by the ``XRegExp`` constructor (which can't =
call
 *    itself while building a regex).
 *=20
 * @ignore
 */
XRegExp.matchRecursive =3D function (str, left, right, flags, options) {
    var options      =3D options || {},
        escapeChar   =3D options.escapeChar,
        vN           =3D options.valueNames,
        flags        =3D flags || "",
        global       =3D flags.indexOf("g") > -1,
        ignoreCase   =3D flags.indexOf("i") > -1,
        multiline    =3D flags.indexOf("m") > -1,
        sticky       =3D flags.indexOf("y") > -1,
        /* sticky mode has its own handling in this function, which =
means you
           can use flag "y" even in browsers which don't support it =
natively */
        flags        =3D flags.replace(/y/g, ""),
        left         =3D left  instanceof RegExp ? (left.global  ? left  =
: left.addFlags("g"))  : new XRegExp(left,  "g" + flags),
        right        =3D right instanceof RegExp ? (right.global ? right =
: right.addFlags("g")) : new XRegExp(right, "g" + flags),
        output       =3D [],
        openTokens   =3D 0,
        delimStart   =3D 0,
        delimEnd     =3D 0,
        lastOuterEnd =3D 0,
        outerStart, innerStart, leftMatch, rightMatch, escaped, esc;

    if (escapeChar) {
        if (escapeChar.length > 1) throw SyntaxError("can't supply more =
than one escape character");
        if (multiline)             throw TypeError("can't supply escape =
character when using the multiline flag");
        escaped =3D XRegExp.escape(escapeChar);
        /* Escape pattern modifiers:
            /g - not needed here
            /i - included
            /m - **unsupported**, throws error
            /s - handled by XRegExp when delimiters are provided as =
strings
            /x - handled by XRegExp when delimiters are provided as =
strings
            /y - not needed here; supported by other handling in this =
function
        */
        esc =3D new RegExp(
            "^(?:" + escaped + "[\\S\\s]|(?:(?!" + left.source + "|" + =
right.source + ")[^" + escaped + "])+)+",
            ignoreCase ? "i" : ""
        );
    }

    while (true) {
        /* advance the starting search position to the end of the last =
delimiter match.
           a couple special cases are also covered:
            - if using an escape character, advance to the next =
delimiter's starting position,
              skipping any escaped characters
            - first time through, reset lastIndex in case delimiters =
were provided as regexes
        */
        left.lastIndex =3D right.lastIndex =3D delimEnd +
            (escapeChar ? (esc.exec(str.slice(delimEnd)) || =
[""])[0].length : 0);

        leftMatch  =3D left.exec(str);
        rightMatch =3D right.exec(str);

        // only keep the result which matched earlier in the string
        if (leftMatch && rightMatch) {
            if (leftMatch.index <=3D rightMatch.index)
                 rightMatch =3D null;
            else leftMatch  =3D null;
        }

        /* paths*:
        leftMatch | rightMatch | openTokens | result
        1         | 0          | 1          | ...
        1         | 0          | 0          | ...
        0         | 1          | 1          | ...
        0         | 1          | 0          | throw
        0         | 0          | 1          | throw
        0         | 0          | 0          | break
        * - does not include the sticky mode special case
          - the loop ends after the first completed match if not in =
global mode
        */

        if (leftMatch || rightMatch) {
            delimStart =3D (leftMatch || rightMatch).index;
            delimEnd   =3D (leftMatch ? left : right).lastIndex;
        } else if (!openTokens) {
            break;
        }

        if (sticky && !openTokens && delimStart > lastOuterEnd)
            break;

        if (leftMatch) {
            if (!openTokens++) {
                outerStart =3D delimStart;
                innerStart =3D delimEnd;
            }
        } else if (rightMatch && openTokens) {
            if (!--openTokens) {
                if (vN) {
                    if (vN[0] && outerStart > lastOuterEnd)
                               output.push([vN[0], =
str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart]);
                    if (vN[1]) output.push([vN[1], str.slice(outerStart, =
  innerStart), outerStart,   innerStart]);
                    if (vN[2]) output.push([vN[2], str.slice(innerStart, =
  delimStart), innerStart,   delimStart]);
                    if (vN[3]) output.push([vN[3], str.slice(delimStart, =
  delimEnd),   delimStart,   delimEnd]);
                } else {
                    output.push(str.slice(innerStart, delimStart));
                }
                lastOuterEnd =3D delimEnd;
                if (!global)
                    break;
            }
        } else {
            // reset lastIndex in case delimiters were provided as =
regexes
            left.lastIndex =3D right.lastIndex =3D 0;
            throw Error("subject data contains unbalanced delimiters");
        }

        // if the delimiter matched an empty string, advance delimEnd to =
avoid an infinite loop
        if (delimStart =3D=3D=3D delimEnd)
            delimEnd++;
    }

    if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd)
        output.push([vN[0], str.slice(lastOuterEnd), lastOuterEnd, =
str.length]);

    // reset lastIndex in case delimiters were provided as regexes
    left.lastIndex =3D right.lastIndex =3D 0;

    return output;
};
/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.0.320 (May 03 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Xml =3D function()
{
	function process(match, regexInfo)
	{
		var constructor =3D SyntaxHighlighter.Match,
			code =3D match[0],
			tag =3D new XRegExp('(&lt;|<)[\\s\\/\\?]*(?<name>[:\\w-\\.]+)', =
'xg').exec(code),
			result =3D []
			;
	=09
		if (match.attributes !=3D null)=20
		{
			var attributes,
				regex =3D new XRegExp('(?<name> [\\w:\\-\\.]+)' +
									'\\s*=3D\\s*' +
									'(?<value> ".*?"|\'.*?\'|\\w+)',
									'xg');

			while ((attributes =3D regex.exec(code)) !=3D null)=20
			{
				result.push(new constructor(attributes.name, match.index + =
attributes.index, 'color1'));
				result.push(new constructor(attributes.value, match.index + =
attributes.index + attributes[0].indexOf(attributes.value), 'string'));
			}
		}

		if (tag !=3D null)
			result.push(
				new constructor(tag.name, match.index + tag[0].indexOf(tag.name), =
'keyword')
			);

		return result;
	}
=09
	this.regexList =3D [
		{ regex: new =
XRegExp('(\\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\\&gt;|>)', 'gm'),	=
		css: 'color2' },	// <![ ... [ ... ]]>
		{ regex: new XRegExp('(\\&lt;|<)!--\\s*.*?\\s*--(\\&gt;|>)', 'gm'),				=
				css: 'comments' },	// <!-- ... -->
		{ regex: new =
XRegExp('(&lt;|<)[\\s\\/\\?]*(\\w+)(?<attributes>.*?)[\\s\\/\\?]*(&gt;|>)=
', 'sg'), func: process }
	];
};

SyntaxHighlighter.brushes.Xml.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Xml.aliases	=3D ['xml', 'xhtml', 'xslt', =
'html', 'xhtml'];
/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please =
donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.0.320 (May 03 2009)
 *=20
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 *=20
 * SyntaxHighlighter is free software: you can redistribute it and/or =
modify
 * it under the terms of the GNU Lesser General Public License as =
published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *=20
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *=20
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see =
<http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.JScript =3D function()
{
	var keywords =3D	'break case catch continue ' +
					'default delete do else false  ' +
					'for function if in instanceof ' +
					'new null return super switch ' +
					'this throw true try typeof var while with'
					;

	this.regexList =3D [
		{ regex: SyntaxHighlighter.regexLib.singleLineCComments,	css: =
'comments' },			// one line comments
		{ regex: SyntaxHighlighter.regexLib.multiLineCComments,		css: =
'comments' },			// multiline comments
		{ regex: SyntaxHighlighter.regexLib.doubleQuotedString,		css: 'string' =
},			// double quoted strings
		{ regex: SyntaxHighlighter.regexLib.singleQuotedString,		css: 'string' =
},			// single quoted strings
		{ regex: /\s*#.*/gm,										css: 'preprocessor' },		// preprocessor =
tags like #region and #endregion
		{ regex: new RegExp(this.getKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keywords
		];
=09
	this.forHtmlScript(SyntaxHighlighter.regexLib.scriptScriptTags);
};

SyntaxHighlighter.brushes.JScript.prototype	=3D new =
SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.JScript.aliases	=3D ['js', 'jscript', =
'javascript'];


SyntaxHighlighter.config.clipboardSwf =3D 'syntax/clipboard.swf';
$(function () {
	var divs =3D $([]);
	$("#container .source").each(function () {
		var code =3D $(this).html().replace(/</g,'&lt;').replace(/>/g,'&gt;'),
			div  =3D $('<div class=3D"code"><pre class=3D"brush:' + ( =
$(this).is("script") ? 'js' : 'xml' ) + ';">' + code + '</pre></div>'),
			demo =3D $(this).prevAll(".demo:eq(0)");
		$(this).after(div);
		divs =3D divs.add(div);
	});
	SyntaxHighlighter.all();

	setTimeout((function (divs) {=20
		return function () {
			divs.each(function () {
				var div		=3D $(this),
					demo	=3D $(this).prevAll(".demo:eq(0)"),
					h		=3D false;
				var h =3D Math.max(demo[0].offsetHeight, div[0].offsetHeight);
				if(h) {
					if(h < 198) h =3D 198;
					div.height(h);
					demo.height(h);
				}
			});
		}
	})(divs), 500);

	// $(".panel").hide().prev().click(function () { =
$(this).next().toggle(); }).css("cursor","pointer");
});
------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-js
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/jquery.cookie.js

/**
 * Cookie plugin
 *
 * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */

/**
 * Create a cookie with the given name and value and other optional =
parameters.
 *
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Set the value of a cookie.
 * @example $.cookie('the_cookie', 'the_value', { expires: 7, path: '/', =
domain: 'jquery.com', secure: true });
 * @desc Create a cookie with all available options.
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Create a session cookie.
 * @example $.cookie('the_cookie', null);
 * @desc Delete a cookie by passing null as value. Keep in mind that you =
have to use the same path and domain
 *       used when the cookie was set.
 *
 * @param String name The name of the cookie.
 * @param String value The value of the cookie.
 * @param Object options An object literal containing key/value pairs to =
provide optional cookie attributes.
 * @option Number|Date expires Either an integer specifying the =
expiration date from now on in days or a Date object.
 *                             If a negative value is specified (e.g. a =
date in the past), the cookie will be deleted.
 *                             If set to null or omitted, the cookie =
will be a session cookie and will not be retained
 *                             when the the browser exits.
 * @option String path The value of the path atribute of the cookie =
(default: path of page that created the cookie).
 * @option String domain The value of the domain attribute of the cookie =
(default: domain of page that created the cookie).
 * @option Boolean secure If true, the secure attribute of the cookie =
will be set and the cookie transmission will
 *                        require a secure protocol (like HTTPS).
 * @type undefined
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */

/**
 * Get the value of a cookie with the given name.
 *
 * @example $.cookie('the_cookie');
 * @desc Get the value of a cookie.
 *
 * @param String name The name of the cookie.
 * @return The value of the cookie.
 * @type String
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */
jQuery.cookie =3D function(name, value, options) {
    if (typeof value !=3D 'undefined') { // name and value given, set =
cookie
        options =3D options || {};
        if (value =3D=3D=3D null) {
            value =3D '';
            options.expires =3D -1;
        }
        var expires =3D '';
        if (options.expires && (typeof options.expires =3D=3D 'number' =
|| options.expires.toUTCString)) {
            var date;
            if (typeof options.expires =3D=3D 'number') {
                date =3D new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 =
* 60 * 1000));
            } else {
                date =3D options.expires;
            }
            expires =3D '; expires=3D' + date.toUTCString(); // use =
expires attribute, max-age is not supported by IE
        }
        // CAUTION: Needed to parenthesize options.path and =
options.domain
        // in the following expressions, otherwise they evaluate to =
undefined
        // in the packed version for some reason...
        var path =3D options.path ? '; path=3D' + (options.path) : '';
        var domain =3D options.domain ? '; domain=3D' + (options.domain) =
: '';
        var secure =3D options.secure ? '; secure' : '';
        document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain, secure].join('');
    } else { // only name given, get cookie
        var cookieValue =3D null;
        if (document.cookie && document.cookie !=3D '') {
            var cookies =3D document.cookie.split(';');
            for (var i =3D 0; i < cookies.length; i++) {
                var cookie =3D jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) =3D=3D (name + =
'=3D')) {
                    cookieValue =3D =
decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};
------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-js
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/jquery.hotkeys.js

/*
 * jQuery Hotkeys Plugin
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Based upon the plugin by Tzury Bar Yochay:
 * http://github.com/tzuryby/hotkeys
 *
 * Original idea by:
 * Binny V A, http://www.openjs.com/scripts/events/keyboard_shortcuts/
*/

(function(jQuery){
=09
	jQuery.hotkeys =3D {
		version: "0.8",

		specialKeys: {
			8: "backspace", 9: "tab", 13: "return", 16: "shift", 17: "ctrl", 18: =
"alt", 19: "pause",
			20: "capslock", 27: "esc", 32: "space", 33: "pageup", 34: "pagedown", =
35: "end", 36: "home",
			37: "left", 38: "up", 39: "right", 40: "down", 45: "insert", 46: =
"del",=20
			96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", =
103: "7",
			104: "8", 105: "9", 106: "*", 107: "+", 109: "-", 110: ".", 111 : =
"/",=20
			112: "f1", 113: "f2", 114: "f3", 115: "f4", 116: "f5", 117: "f6", =
118: "f7", 119: "f8",=20
			120: "f9", 121: "f10", 122: "f11", 123: "f12", 144: "numlock", 145: =
"scroll", 191: "/", 224: "meta"
		},
=09
		shiftNums: {
			"`": "~", "1": "!", "2": "@", "3": "#", "4": "$", "5": "%", "6": "^", =
"7": "&",=20
			"8": "*", "9": "(", "0": ")", "-": "_", "=3D": "+", ";": ": ", "'": =
"\"", ",": "<",=20
			".": ">",  "/": "?",  "\\": "|"
		}
	};

	function keyHandler( handleObj ) {
		// Only care when a possible input has been specified
		if ( typeof handleObj.data !=3D=3D "string" ) {
			return;
		}
	=09
		var origHandler =3D handleObj.handler,
			keys =3D handleObj.data.toLowerCase().split(" ");
=09
		handleObj.handler =3D function( event ) {
			// Don't fire in text-accepting inputs that we didn't directly bind =
to
			if ( this !=3D=3D event.target && (/textarea|select/i.test( =
event.target.nodeName ) ||
				 event.target.type =3D=3D=3D "text") ) {
				return;
			}
		=09
			// Keypress represents characters, not special keys
			var special =3D event.type !=3D=3D "keypress" && =
jQuery.hotkeys.specialKeys[ event.which ],
				character =3D String.fromCharCode( event.which ).toLowerCase(),
				key, modif =3D "", possible =3D {};

			// check combinations (alt|ctrl|shift+anything)
			if ( event.altKey && special !=3D=3D "alt" ) {
				modif +=3D "alt+";
			}

			if ( event.ctrlKey && special !=3D=3D "ctrl" ) {
				modif +=3D "ctrl+";
			}
		=09
			// TODO: Need to make sure this works consistently across platforms
			if ( event.metaKey && !event.ctrlKey && special !=3D=3D "meta" ) {
				modif +=3D "meta+";
			}

			if ( event.shiftKey && special !=3D=3D "shift" ) {
				modif +=3D "shift+";
			}

			if ( special ) {
				possible[ modif + special ] =3D true;

			} else {
				possible[ modif + character ] =3D true;
				possible[ modif + jQuery.hotkeys.shiftNums[ character ] ] =3D true;

				// "$" can be triggered as "Shift+4" or "Shift+$" or just "$"
				if ( modif =3D=3D=3D "shift+" ) {
					possible[ jQuery.hotkeys.shiftNums[ character ] ] =3D true;
				}
			}

			for ( var i =3D 0, l =3D keys.length; i < l; i++ ) {
				if ( possible[ keys[i] ] ) {
					return origHandler.apply( this, arguments );
				}
			}
		};
	}

	jQuery.each([ "keydown", "keyup", "keypress" ], function() {
		jQuery.event.special[ this ] =3D { add: keyHandler };
	});

})( jQuery );
------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/x-js
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.jstree.com/v.1.0rc2/jquery.jstree.js

/*
 * jsTree 1.0-rc1
 * http://jstree.com/
 *
 * Copyright (c) 2010 Ivan Bozhanov (vakata.com)
 *
 * Dual licensed under the MIT and GPL licenses (same as jQuery):
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * $Date: 2010-07-01 10:51:11 +0300 (=D1=87=D0=B5=D1=82=D0=B2, 01 =
=D1=8E=D0=BB=D0=B8 2010) $
 * $Revision: 191 $
 */

/*jslint browser: true, onevar: true, undef: true, bitwise: true, =
strict: true */
/*global window : false, clearInterval: false, clearTimeout: false, =
document: false, setInterval: false, setTimeout: false, jQuery: false, =
navigator: false, XSLTProcessor: false, DOMParser: false, XMLSerializer: =
false*/

"use strict";
// Common functions not related to jsTree=20
// decided to move them to a `vakata` "namespace"
(function ($) {
	$.vakata =3D {};
	// CSS related functions
	$.vakata.css =3D {
		get_css : function(rule_name, delete_flag, sheet) {
			rule_name =3D rule_name.toLowerCase();
			var css_rules =3D sheet.cssRules || sheet.rules,
				j =3D 0;
			do {
				if(css_rules.length && j > css_rules.length + 5) { return false; }
				if(css_rules[j].selectorText && =
css_rules[j].selectorText.toLowerCase() =3D=3D rule_name) {
					if(delete_flag =3D=3D=3D true) {
						if(sheet.removeRule) { sheet.removeRule(j); }
						if(sheet.deleteRule) { sheet.deleteRule(j); }
						return true;
					}
					else { return css_rules[j]; }
				}
			}
			while (css_rules[++j]);
			return false;
		},
		add_css : function(rule_name, sheet) {
			if($.jstree.css.get_css(rule_name, false, sheet)) { return false; }
			if(sheet.insertRule) { sheet.insertRule(rule_name + ' { }', 0); } =
else { sheet.addRule(rule_name, null, 0); }
			return $.vakata.css.get_css(rule_name);
		},
		remove_css : function(rule_name, sheet) {=20
			return $.vakata.css.get_css(rule_name, true, sheet);=20
		},
		add_sheet : function(opts) {
			var tmp;
			if(opts.str) {
				tmp =3D document.createElement("style");
				tmp.setAttribute('type',"text/css");
				if(tmp.styleSheet) {
					document.getElementsByTagName("head")[0].appendChild(tmp);
					tmp.styleSheet.cssText =3D opts.str;
				}
				else {
					tmp.appendChild(document.createTextNode(opts.str));
					document.getElementsByTagName("head")[0].appendChild(tmp);
				}
				return tmp.sheet || tmp.styleSheet;
			}
			if(opts.url) {
				if(document.createStyleSheet) {
					try { tmp =3D document.createStyleSheet(opts.url); } catch (e) { }
				}
				else {
					tmp			=3D document.createElement('link');
					tmp.rel		=3D 'stylesheet';
					tmp.type	=3D 'text/css';
					tmp.media	=3D "all";
					tmp.href	=3D opts.url;
					document.getElementsByTagName("head")[0].appendChild(tmp);
					return tmp.styleSheet;
				}
			}
		}
	};
})(jQuery);

/*=20
 * jsTree core 1.0
 */
(function ($) {
	// private variables=20
	var instances =3D [],			// instance array (used by =
$.jstree.reference/create/focused)
		focused_instance =3D -1,	// the index in the instance array of the =
currently focused instance
		plugins =3D {},			// list of included plugins
		prepared_move =3D {},		// for the move plugin
		is_ie6 =3D false;

	// jQuery plugin wrapper (thanks to jquery UI widget function)
	$.fn.jstree =3D function (settings) {
		var isMethodCall =3D (typeof settings =3D=3D 'string'), // is this a =
method call like $().jstree("open_node")
			args =3D Array.prototype.slice.call(arguments, 1),=20
			returnValue =3D this;

		// extend settings and allow for multiple hashes and metadata
		if(!isMethodCall && $.meta) { args.push($.metadata.get(this).jstree); =
}
		settings =3D !isMethodCall && args.length ? $.extend.apply(null, =
[true, settings].concat(args)) : settings;
		// block calls to "private" methods
		if(isMethodCall && settings.substring(0, 1) =3D=3D '_') { return =
returnValue; }

		// if a method call execute the method on all selected instances
		if(isMethodCall) {
			this.each(function() {
				var instance =3D instances[$.data(this, "jstree-instance-id")],
					methodValue =3D (instance && $.isFunction(instance[settings])) ? =
instance[settings].apply(instance, args) : instance;
					if(typeof methodValue !=3D=3D "undefined" && =
(settings.indexOf("is_" =3D=3D=3D 0) || (methodValue !=3D=3D true && =
methodValue !=3D=3D false))) { returnValue =3D methodValue; return =
false; }
			});
		}
		else {
			this.each(function() {
				var instance_id =3D $.data(this, "jstree-instance-id"),
					s =3D false;
				// if an instance already exists, destroy it first
				if(typeof instance_id !=3D=3D "undefined" && instances[instance_id]) =
{ instances[instance_id].destroy(); }
				// push a new empty object to the instances array
				instance_id =3D parseInt(instances.push({}),10) - 1;
				// store the jstree instance id to the container element
				$.data(this, "jstree-instance-id", instance_id);
				// clean up all plugins
				if(!settings) { settings =3D {}; }
				settings.plugins =3D $.isArray(settings.plugins) ? settings.plugins =
: $.jstree.defaults.plugins;
				if($.inArray("core", settings.plugins) =3D=3D=3D -1) { =
settings.plugins.unshift("core"); }
			=09
				// only unique plugins (NOT WORKING)
				// settings.plugins =3D =
settings.plugins.sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$=
1$2$4").replace(/,,+/g,",").replace(/,$/,"").split(",");

				// extend defaults with passed data
				s =3D $.extend(true, {}, $.jstree.defaults, settings);
				s.plugins =3D settings.plugins;
				$.each(plugins, function (i, val) { if($.inArray(i, s.plugins) =
=3D=3D=3D -1) { s[i] =3D null; delete s[i]; } });
				// push the new object to the instances array (at the same time set =
the default classes to the container) and init
				instances[instance_id] =3D new $.jstree._instance(instance_id, =
$(this).addClass("jstree jstree-" + instance_id), s);=20
				// init all activated plugins for this instance
				$.each(instances[instance_id]._get_settings().plugins, function (i, =
val) { instances[instance_id].data[val] =3D {}; });
				$.each(instances[instance_id]._get_settings().plugins, function (i, =
val) { if(plugins[val]) { =
plugins[val].__init.apply(instances[instance_id]); } });
				// initialize the instance
				instances[instance_id].init();
			});
		}
		// return the jquery selection (or if it was a method call that =
returned a value - the returned value)
		return returnValue;
	};
	// object to store exposed functions and objects
	$.jstree =3D {
		defaults : {
			plugins : []
		},
		_focused : function () { return instances[focused_instance] || null; =
},
		_reference : function (needle) {=20
			// get by instance id
			if(instances[needle]) { return instances[needle]; }
			// get by DOM (if still no luck - return null
			var o =3D $(needle);=20
			if(!o.length && typeof needle =3D=3D=3D "string") { o =3D $("#" + =
needle); }
			if(!o.length) { return null; }
			return instances[o.closest(".jstree").data("jstree-instance-id")] || =
null;=20
		},
		_instance : function (index, container, settings) {=20
			// for plugins to store data in
			this.data =3D { core : {} };
			this.get_settings	=3D function () { return $.extend(true, {}, =
settings); };
			this._get_settings	=3D function () { return settings; };
			this.get_index		=3D function () { return index; };
			this.get_container	=3D function () { return container; };
			this._set_settings	=3D function (s) {=20
				settings =3D $.extend(true, {}, settings, s);
			};
		},
		_fn : { },
		plugin : function (pname, pdata) {
			pdata =3D $.extend({}, {
				__init		: $.noop,=20
				__destroy	: $.noop,
				_fn			: {},
				defaults	: false
			}, pdata);
			plugins[pname] =3D pdata;

			$.jstree.defaults[pname] =3D pdata.defaults;
			$.each(pdata._fn, function (i, val) {
				val.plugin		=3D pname;
				val.old			=3D $.jstree._fn[i];
				$.jstree._fn[i] =3D function () {
					var rslt,
						func =3D val,
						args =3D Array.prototype.slice.call(arguments),
						evnt =3D new $.Event("before.jstree"),
						rlbk =3D false;

					// Check if function belongs to the included plugins of this =
instance
					do {
						if(func && func.plugin && $.inArray(func.plugin, =
this._get_settings().plugins) !=3D=3D -1) { break; }
						func =3D func.old;
					} while(func);
					if(!func) { return; }

					// a chance to stop execution (or change arguments):=20
					// * just bind to jstree.before
					// * check the additional data object (func property)
					// * call event.stopImmediatePropagation()
					// * return false (or an array of arguments)
					rslt =3D this.get_container().triggerHandler(evnt, { "func" : i, =
"inst" : this, "args" : args });
					if(rslt =3D=3D=3D false) { return; }
					if(typeof rslt !=3D=3D "undefined") { args =3D rslt; }

					// context and function to trigger events, then finally call the =
function
					if(i.indexOf("_") =3D=3D=3D 0) {
						rslt =3D func.apply(this, args);
					}
					else {
						rslt =3D func.apply(
							$.extend({}, this, {=20
								__callback : function (data) {=20
									this.get_container().triggerHandler( i + '.jstree', { "inst" : =
this, "args" : args, "rslt" : data, "rlbk" : rlbk });
								},
								__rollback : function () {=20
									rlbk =3D this.get_rollback();
									return rlbk;
								},
								__call_old : function (replace_arguments) {
									return func.old.apply(this, (replace_arguments ? =
Array.prototype.slice.call(arguments, 1) : args ) );
								}
							}), args);
					}

					// return the result
					return rslt;
				};
				$.jstree._fn[i].old =3D val.old;
				$.jstree._fn[i].plugin =3D pname;
			});
		},
		rollback : function (rb) {
			if(rb) {
				if(!$.isArray(rb)) { rb =3D [ rb ]; }
				$.each(rb, function (i, val) {
					instances[val.i].set_rollback(val.h, val.d);
				});
			}
		}
	};
	// set the prototype for all instances
	$.jstree._fn =3D $.jstree._instance.prototype =3D {};

	// css functions - used internally

	// load the css when DOM is ready
	$(function() {
		// code is copied form jQuery ($.browser is deprecated + there is a =
bug in IE)
		var u =3D navigator.userAgent.toLowerCase(),
			v =3D (u.match( /.+?(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [0,'0'])[1],
			css_string =3D '' +=20
				'.jstree ul, .jstree li { display:block; margin:0 0 0 0; padding:0 0 =
0 0; list-style-type:none; } ' +=20
				'.jstree li { display:block; min-height:18px; line-height:18px; =
white-space:nowrap; margin-left:18px; } ' +=20
				'.jstree-rtl li { margin-left:0; margin-right:18px; } ' +=20
				'.jstree > ul > li { margin-left:0px; } ' +=20
				'.jstree-rtl > ul > li { margin-right:0px; } ' +=20
				'.jstree ins { display:inline-block; text-decoration:none; =
width:18px; height:18px; margin:0 0 0 0; padding:0; } ' +=20
				'.jstree a { display:inline-block; line-height:16px; height:16px; =
color:black; white-space:nowrap; text-decoration:none; padding:1px 2px; =
margin:0; } ' +=20
				'.jstree a:focus { outline: none; } ' +=20
				'.jstree a > ins { height:16px; width:16px; } ' +=20
				'.jstree a > .jstree-icon { margin-right:3px; } ' +=20
				'.jstree-rtl a > .jstree-icon { margin-left:3px; margin-right:0; } ' =
+=20
				'li.jstree-open > ul { display:block; } ' +=20
				'li.jstree-closed > ul { display:none; } ';
		// Correct IE 6 (does not support the > CSS selector)
		if(/msie/.test(u) && parseInt(v, 10) =3D=3D 6) {=20
			is_ie6 =3D true;
			css_string +=3D '' +=20
				'.jstree li { height:18px; margin-left:0; margin-right:0; } ' +=20
				'.jstree li li { margin-left:18px; } ' +=20
				'.jstree-rtl li li { margin-left:0px; margin-right:18px; } ' +=20
				'li.jstree-open ul { display:block; } ' +=20
				'li.jstree-closed ul { display:none !important; } ' +=20
				'.jstree li a { display:inline; border-width:0 !important; =
padding:0px 2px !important; } ' +=20
				'.jstree li a ins { height:16px; width:16px; margin-right:3px; } ' + =

				'.jstree-rtl li a ins { margin-right:0px; margin-left:3px; } ';
		}
		// Correct IE 7 (shifts anchor nodes onhover)
		if(/msie/.test(u) && parseInt(v, 10) =3D=3D 7) {=20
			css_string +=3D '.jstree li a { border-width:0 !important; =
padding:0px 2px !important; } ';
		}
		$.vakata.css.add_sheet({ str : css_string });
	});

	// core functions (open, close, create, update, delete)
	$.jstree.plugin("core", {
		__init : function () {
			this.data.core.to_open =3D =
$.map($.makeArray(this.get_settings().core.initially_open), function (n) =
{ return "#" + =
n.toString().replace(/^#/,"").replace('\\/','/').replace('/','\\/'); });
		},
		defaults : {=20
			html_titles	: false,
			animation	: 500,
			initially_open : [],
			rtl			: false,
			strings		: {
				loading		: "Loading ...",
				new_node	: "New node"
			}
		},
		_fn : {=20
			init	: function () {=20
				this.set_focus();=20
				if(this._get_settings().core.rtl) {
					this.get_container().addClass("jstree-rtl").css("direction", =
"rtl");
				}
				this.get_container().html("<ul><li class=3D'jstree-last =
jstree-leaf'><ins>&#160;</ins><a class=3D'jstree-loading' =
href=3D'#'><ins class=3D'jstree-icon'>&#160;</ins>" + =
this._get_settings().core.strings.loading + "</a></li></ul>");
				this.data.core.li_height =3D this.get_container().find("ul =
li.jstree-closed, ul li.jstree-leaf").eq(0).height() || 18;

				this.get_container()
					.delegate("li > ins", "click.jstree", $.proxy(function (event) {
							var trgt =3D $(event.target);
							if(trgt.is("ins") && event.pageY - trgt.offset().top < =
this.data.core.li_height) { this.toggle_node(trgt); }
						}, this))
					.bind("mousedown.jstree", $.proxy(function () {=20
							this.set_focus(); // This used to be setTimeout(set_focus,0) - =
why?
						}, this))
					.bind("dblclick.jstree", function (event) {=20
						var sel;
						if(document.selection && document.selection.empty) { =
document.selection.empty(); }
						else {
							if(window.getSelection) {
								sel =3D window.getSelection();
								try {=20
									sel.removeAllRanges();
									sel.collapse();
								} catch (err) { }
							}
						}
					});
				this.__callback();
				this.load_node(-1, function () { this.loaded(); this.reopen(); });
			},
			destroy	: function () {=20
				var i,
					n =3D this.get_index(),
					s =3D this._get_settings(),
					_this =3D this;

				$.each(s.plugins, function (i, val) {
					try { plugins[val].__destroy.apply(_this); } catch(err) { }
				});
				this.__callback();
				// set focus to another instance if this one is focused
				if(this.is_focused()) {=20
					for(i in instances) {=20
						if(instances.hasOwnProperty(i) && i !=3D n) {=20
							instances[i].set_focus();=20
							break;=20
						}=20
					}
				}
				// if no other instance found
				if(n =3D=3D=3D focused_instance) { focused_instance =3D -1; }
				// remove all traces of jstree in the DOM (only the ones set using =
jstree*) and cleans all events
				this.get_container()
					.unbind(".jstree")
					.undelegate(".jstree")
					.removeData("jstree-instance-id")
					.find("[class^=3D'jstree']")
						.andSelf()
						.attr("class", function () { return =
this.className.replace(/jstree[^ ]*|$/ig,''); });
				// remove the actual data
				instances[n] =3D null;
				delete instances[n];
			},
			save_opened : function () {
				var _this =3D this;
				this.data.core.to_open =3D [];
				this.get_container().find(".jstree-open").each(function () {=20
					_this.data.core.to_open.push("#" + =
this.id.toString().replace(/^#/,"").replace('\\/','/').replace('/','\\/')=
);=20
				});
				this.__callback(_this.data.core.to_open);
			},
			reopen : function (is_callback) {
				var _this =3D this,
					done =3D true,
					current =3D [],
					remaining =3D [];
				if(!is_callback) { this.data.core.reopen =3D false; =
this.data.core.refreshing =3D true; }
				if(this.data.core.to_open.length) {
					$.each(this.data.core.to_open, function (i, val) {
						if(val =3D=3D "#") { return true; }
						if($(val).length && $(val).is(".jstree-closed")) { =
current.push(val); }
						else { remaining.push(val); }
					});
					if(current.length) {
						this.data.core.to_open =3D remaining;
						$.each(current, function (i, val) {=20
							_this.open_node(val, function () { _this.reopen(true); }, true);=20
						});
						done =3D false;
					}
				}
				if(done) {=20
					// TODO: find a more elegant approach to syncronizing returning =
requests
					if(this.data.core.reopen) { clearTimeout(this.data.core.reopen); }
					this.data.core.reopen =3D setTimeout(function () { =
_this.__callback({}, _this); }, 50);
					this.data.core.refreshing =3D false;
				}
			},
			refresh : function (obj) {
				var _this =3D this;
				this.save_opened();
				if(!obj) { obj =3D -1; }
				obj =3D this._get_node(obj);
				if(!obj) { obj =3D -1; }
				if(obj !=3D=3D -1) { obj.children("UL").remove(); }
				this.load_node(obj, function () { _this.__callback({ "obj" : obj}); =
_this.reopen(); });
			},
			// Dummy function to fire after the first load (so that there is a =
jstree.loaded event)
			loaded	: function () {=20
				this.__callback();=20
			},
			// deal with focus
			set_focus	: function () {=20
				var f =3D $.jstree._focused();
				if(f && f !=3D=3D this) {
					f.get_container().removeClass("jstree-focused");=20
				}
				if(f !=3D=3D this) {
					this.get_container().addClass("jstree-focused");=20
					focused_instance =3D this.get_index();=20
				}
				this.__callback();
			},
			is_focused	: function () {=20
				return focused_instance =3D=3D this.get_index();=20
			},

			// traverse
			_get_node		: function (obj) {=20
				var $obj =3D $(obj, this.get_container());=20
				if($obj.is(".jstree") || obj =3D=3D -1) { return -1; }=20
				$obj =3D $obj.closest("li", this.get_container());=20
				return $obj.length ? $obj : false;=20
			},
			_get_next		: function (obj, strict) {
				obj =3D this._get_node(obj);
				if(obj =3D=3D=3D -1) { return this.get_container().find("> ul > =
li:first-child"); }
				if(!obj.length) { return false; }
				if(strict) { return (obj.nextAll("li").size() > 0) ? =
obj.nextAll("li:eq(0)") : false; }

				if(obj.hasClass("jstree-open")) { return obj.find("li:eq(0)"); }
				else if(obj.nextAll("li").size() > 0) { return =
obj.nextAll("li:eq(0)"); }
				else { return obj.parentsUntil(".jstree","li").next("li").eq(0); }
			},
			_get_prev		: function (obj, strict) {
				obj =3D this._get_node(obj);
				if(obj =3D=3D=3D -1) { return this.get_container().find("> ul > =
li:last-child"); }
				if(!obj.length) { return false; }
				if(strict) { return (obj.prevAll("li").length > 0) ? =
obj.prevAll("li:eq(0)") : false; }

				if(obj.prev("li").length) {
					obj =3D obj.prev("li").eq(0);
					while(obj.hasClass("jstree-open")) { obj =3D =
obj.children("ul:eq(0)").children("li:last"); }
					return obj;
				}
				else { var o =3D obj.parentsUntil(".jstree","li:eq(0)"); return =
o.length ? o : false; }
			},
			_get_parent		: function (obj) {
				obj =3D this._get_node(obj);
				if(obj =3D=3D -1 || !obj.length) { return false; }
				var o =3D obj.parentsUntil(".jstree", "li:eq(0)");
				return o.length ? o : -1;
			},
			_get_children	: function (obj) {
				obj =3D this._get_node(obj);
				if(obj =3D=3D=3D -1) { return =
this.get_container().children("ul:eq(0)").children("li"); }
				if(!obj.length) { return false; }
				return obj.children("ul:eq(0)").children("li");
			},
			get_path		: function (obj, id_mode) {
				var p =3D [],
					_this =3D this;
				obj =3D this._get_node(obj);
				if(obj =3D=3D=3D -1 || !obj || !obj.length) { return false; }
				obj.parentsUntil(".jstree", "li").each(function () {
					p.push( id_mode ? this.id : _this.get_text(this) );
				});
				p.reverse();
				p.push( id_mode ? obj.attr("id") : this.get_text(obj) );
				return p;
			},

			is_open		: function (obj) { obj =3D this._get_node(obj); return obj =
&& obj !=3D=3D -1 && obj.hasClass("jstree-open"); },
			is_closed	: function (obj) { obj =3D this._get_node(obj); return obj =
&& obj !=3D=3D -1 && obj.hasClass("jstree-closed"); },
			is_leaf		: function (obj) { obj =3D this._get_node(obj); return obj =
&& obj !=3D=3D -1 && obj.hasClass("jstree-leaf"); },
			// open/close
			open_node	: function (obj, callback, skip_animation) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				if(!obj.hasClass("jstree-closed")) { if(callback) { callback.call(); =
} return false; }
				var s =3D skip_animation || is_ie6 ? 0 : =
this._get_settings().core.animation,
					t =3D this;
				if(!this._is_loaded(obj)) {
					obj.children("a").addClass("jstree-loading");
					this.load_node(obj, function () { t.open_node(obj, callback, =
skip_animation); }, callback);
				}
				else {
					if(s) { obj.children("ul").css("display","none"); }
					=
obj.removeClass("jstree-closed").addClass("jstree-open").children("a").re=
moveClass("jstree-loading");
					if(s) { obj.children("ul").stop(true).slideDown(s, function () { =
this.style.display =3D ""; }); }
					this.__callback({ "obj" : obj });
					if(callback) { callback.call(); }
				}
			},
			close_node	: function (obj, skip_animation) {
				obj =3D this._get_node(obj);
				var s =3D skip_animation || is_ie6 ? 0 : =
this._get_settings().core.animation;
				if(!obj.length || !obj.hasClass("jstree-open")) { return false; }
				if(s) { obj.children("ul").attr("style","display:block !important"); =
}
				obj.removeClass("jstree-open").addClass("jstree-closed");
				if(s) { obj.children("ul").stop(true).slideUp(s, function () { =
this.style.display =3D ""; }); }
				this.__callback({ "obj" : obj });
			},
			toggle_node	: function (obj) {
				obj =3D this._get_node(obj);
				if(obj.hasClass("jstree-closed")) { return this.open_node(obj); }
				if(obj.hasClass("jstree-open")) { return this.close_node(obj); }
			},
			open_all	: function (obj, original_obj) {
				obj =3D obj ? this._get_node(obj) : this.get_container();
				if(!obj || obj =3D=3D=3D -1) { obj =3D this.get_container(); }
				if(original_obj) {=20
					obj =3D obj.find("li.jstree-closed");
				}
				else {
					original_obj =3D obj;
					if(obj.is(".jstree-closed")) { obj =3D =
obj.find("li.jstree-closed").andSelf(); }
					else { obj =3D obj.find("li.jstree-closed"); }
				}
				var _this =3D this;
				obj.each(function () {=20
					var __this =3D this;=20
					if(!_this._is_loaded(this)) { _this.open_node(this, function() { =
_this.open_all(__this, original_obj); }, true); }
					else { _this.open_node(this, false, true); }
				});
				// so that callback is fired AFTER all nodes are open
				if(original_obj.find('li.jstree-closed').length =3D=3D=3D 0) { =
this.__callback({ "obj" : original_obj }); }
			},
			close_all	: function (obj) {
				var _this =3D this;
				obj =3D obj ? this._get_node(obj) : this.get_container();
				if(!obj || obj =3D=3D=3D -1) { obj =3D this.get_container(); }
				obj.find("li.jstree-open").andSelf().each(function () { =
_this.close_node(this); });
				this.__callback({ "obj" : obj });
			},
			clean_node	: function (obj) {
				obj =3D obj && obj !=3D -1 ? $(obj) : this.get_container();
				obj =3D obj.is("li") ? obj.find("li").andSelf() : obj.find("li");
				obj.removeClass("jstree-last")
					.filter("li:last-child").addClass("jstree-last").end()
					.filter(":has(li)")
						=
.not(".jstree-open").removeClass("jstree-leaf").addClass("jstree-closed")=
;
				obj.not(".jstree-open, =
.jstree-closed").addClass("jstree-leaf").children("ul").remove();
				this.__callback({ "obj" : obj });
			},
			// rollback
			get_rollback : function () {=20
				this.__callback();
				return { i : this.get_index(), h : =
this.get_container().children("ul").clone(true), d : this.data };=20
			},
			set_rollback : function (html, data) {
				this.get_container().empty().append(html);
				this.data =3D data;
				this.__callback();
			},
			// Dummy functions to be overwritten by any datastore plugin included
			load_node	: function (obj, s_call, e_call) { this.__callback({ "obj" =
: obj }); },
			_is_loaded	: function (obj) { return true; },

			// Basic operations: create
			create_node	: function (obj, position, js, callback, is_loaded) {
				obj =3D this._get_node(obj);
				position =3D typeof position =3D=3D=3D "undefined" ? "last" : =
position;
				var d =3D $("<li>"),
					s =3D this._get_settings().core,
					tmp;

				if(obj !=3D=3D -1 && !obj.length) { return false; }
				if(!is_loaded && !this._is_loaded(obj)) { this.load_node(obj, =
function () { this.create_node(obj, position, js, callback, true); }); =
return false; }

				this.__rollback();

				if(typeof js =3D=3D=3D "string") { js =3D { "data" : js }; }
				if(!js) { js =3D {}; }
				if(js.attr) { d.attr(js.attr); }
				if(js.state) { d.addClass("jstree-" + js.state); }
				if(!js.data) { js.data =3D s.strings.new_node; }
				if(!$.isArray(js.data)) { tmp =3D js.data; js.data =3D []; =
js.data.push(tmp); }
				$.each(js.data, function (i, m) {
					tmp =3D $("<a>");
					if($.isFunction(m)) { m =3D m.call(this, js); }
					if(typeof m =3D=3D "string") { tmp.attr('href','#')[ s.html_titles =
? "html" : "text" ](m); }
					else {
						if(!m.attr) { m.attr =3D {}; }
						if(!m.attr.href) { m.attr.href =3D '#'; }
						tmp.attr(m.attr)[ s.html_titles ? "html" : "text" ](m.title);
						if(m.language) { tmp.addClass(m.language); }
					}
					tmp.prepend("<ins class=3D'jstree-icon'>&#160;</ins>");
					if(m.icon) {=20
						if(m.icon.indexOf("/") =3D=3D=3D -1) { =
tmp.children("ins").addClass(m.icon); }
						else { tmp.children("ins").css("background","url('" + m.icon + "') =
center center no-repeat"); }
					}
					d.append(tmp);
				});
				d.prepend("<ins class=3D'jstree-icon'>&#160;</ins>");
				if(obj =3D=3D=3D -1) {
					obj =3D this.get_container();
					if(position =3D=3D=3D "before") { position =3D "first"; }
					if(position =3D=3D=3D "after") { position =3D "last"; }
				}
				switch(position) {
					case "before": obj.before(d); tmp =3D this._get_parent(obj); break;
					case "after" : obj.after(d);  tmp =3D this._get_parent(obj); break;
					case "inside":
					case "first" :
						if(!obj.children("ul").length) { obj.append("<ul>"); }
						obj.children("ul").prepend(d);
						tmp =3D obj;
						break;
					case "last":
						if(!obj.children("ul").length) { obj.append("<ul>"); }
						obj.children("ul").append(d);
						tmp =3D obj;
						break;
					default:
						if(!obj.children("ul").length) { obj.append("<ul>"); }
						if(!position) { position =3D 0; }
						tmp =3D obj.children("ul").children("li").eq(position);
						if(tmp.length) { tmp.before(d); }
						else { obj.children("ul").append(d); }
						tmp =3D obj;
						break;
				}
				if(tmp =3D=3D=3D -1 || tmp.get(0) =3D=3D=3D =
this.get_container().get(0)) { tmp =3D -1; }
				this.clean_node(tmp);
				this.__callback({ "obj" : d, "parent" : tmp });
				if(callback) { callback.call(this, d); }
				return d;
			},
			// Basic operations: rename (deal with text)
			get_text	: function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				var s =3D this._get_settings().core.html_titles;
				obj =3D obj.children("a:eq(0)");
				if(s) {
					obj =3D obj.clone();
					obj.children("INS").remove();
					return obj.html();
				}
				else {
					obj =3D obj.contents().filter(function() { return this.nodeType =
=3D=3D 3; })[0];
					return obj.nodeValue;
				}
			},
			set_text	: function (obj, val) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				obj =3D obj.children("a:eq(0)");
				if(this._get_settings().core.html_titles) {
					var tmp =3D obj.children("INS").clone();
					obj.html(val).prepend(tmp);
					this.__callback({ "obj" : obj, "name" : val });
					return true;
				}
				else {
					obj =3D obj.contents().filter(function() { return this.nodeType =
=3D=3D 3; })[0];
					this.__callback({ "obj" : obj, "name" : val });
					return (obj.nodeValue =3D val);
				}
			},
			rename_node : function (obj, val) {
				obj =3D this._get_node(obj);
				this.__rollback();
				if(obj && obj.length && this.set_text.apply(this, =
Array.prototype.slice.call(arguments))) { this.__callback({ "obj" : obj, =
"name" : val }); }
			},
			// Basic operations: deleting nodes
			delete_node : function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				this.__rollback();
				var p =3D this._get_parent(obj), prev =3D this._get_prev(obj);
				obj =3D obj.remove();
				if(p !=3D=3D -1 && p.find("> ul > li").length =3D=3D=3D 0) {
					p.removeClass("jstree-open jstree-closed").addClass("jstree-leaf");
				}
				this.clean_node(p);
				this.__callback({ "obj" : obj, "prev" : prev });
				return obj;
			},
			prepare_move : function (o, r, pos, cb, is_cb) {
				var p =3D {};

				p.ot =3D $.jstree._reference(p.o) || this;
				p.o =3D p.ot._get_node(o);
				p.r =3D r =3D=3D=3D - 1 ? -1 : this._get_node(r);
				p.p =3D (typeof p =3D=3D=3D "undefined") ? "last" : pos; // TODO: =
move to a setting
				if(!is_cb && prepared_move.o && prepared_move.o[0] =3D=3D=3D p.o[0] =
&& prepared_move.r[0] =3D=3D=3D p.r[0] && prepared_move.p =3D=3D=3D p.p) =
{
					this.__callback(prepared_move);
					if(cb) { cb.call(this, prepared_move); }
					return;
				}
				p.ot =3D $.jstree._reference(p.o) || this;
				p.rt =3D r =3D=3D=3D -1 ? p.ot : $.jstree._reference(p.r) || this;
				if(p.r =3D=3D=3D -1) {
					p.cr =3D -1;
					switch(p.p) {
						case "first":
						case "before":
						case "inside":
							p.cp =3D 0;=20
							break;
						case "after":
						case "last":
							p.cp =3D p.rt.get_container().find(" > ul > li").length;=20
							break;
						default:
							p.cp =3D p.p;
							break;
					}
				}
				else {
					if(!/^(before|after)$/.test(p.p) && !this._is_loaded(p.r)) {
						return this.load_node(p.r, function () { this.prepare_move(o, r, =
pos, cb, true); });
					}
					switch(p.p) {
						case "before":
							p.cp =3D p.r.index();
							p.cr =3D p.rt._get_parent(p.r);
							break;
						case "after":
							p.cp =3D p.r.index() + 1;
							p.cr =3D p.rt._get_parent(p.r);
							break;
						case "inside":
						case "first":
							p.cp =3D 0;
							p.cr =3D p.r;
							break;
						case "last":
							p.cp =3D p.r.find(" > ul > li").length;=20
							p.cr =3D p.r;
							break;
						default:=20
							p.cp =3D p.p;
							p.cr =3D p.r;
							break;
					}
				}
				p.np =3D p.cr =3D=3D -1 ? p.rt.get_container() : p.cr;
				p.op =3D p.ot._get_parent(p.o);
				p.or =3D p.np.find(" > ul > li:nth-child(" + (p.cp + 1) + ")");

				prepared_move =3D p;
				this.__callback(prepared_move);
				if(cb) { cb.call(this, prepared_move); }
			},
			check_move : function () {
				var obj =3D prepared_move, ret =3D true;
				if(obj.or[0] =3D=3D=3D obj.o[0]) { return false; }
				obj.o.each(function () {=20
					if(obj.r.parentsUntil(".jstree").andSelf().filter("li").index(this) =
!=3D=3D -1) { ret =3D false; return false; }
				});
				return ret;
			},
			move_node : function (obj, ref, position, is_copy, is_prepared, =
skip_check) {
				if(!is_prepared) {=20
					return this.prepare_move(obj, ref, position, function (p) {
						this.move_node(p, false, false, is_copy, true, skip_check);
					});
				}
				if(!skip_check && !this.check_move()) { return false; }

				this.__rollback();
				var o =3D false;
				if(is_copy) {
					o =3D obj.o.clone();
					o.find("*[id]").andSelf().each(function () {
						if(this.id) { this.id =3D "copy_" + this.id; }
					});
				}
				else { o =3D obj.o; }

				if(obj.or.length) { obj.or.before(o); }
				else {=20
					if(!obj.np.children("ul").length) { $("<ul>").appendTo(obj.np); }
					obj.np.children("ul:eq(0)").append(o);=20
				}

				try {=20
					obj.ot.clean_node(obj.op);
					obj.rt.clean_node(obj.np);
					if(!obj.op.find("> ul > li").length) {
						obj.op.removeClass("jstree-open =
jstree-closed").addClass("jstree-leaf").children("ul").remove();
					}
				} catch (e) { }

				if(is_copy) {=20
					prepared_move.cy =3D true;
					prepared_move.oc =3D o;=20
				}
				this.__callback(prepared_move);
				return prepared_move;
			},
			_get_move : function () { return prepared_move; }
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree ui plugin 1.0
 * This plugins handles selecting/deselecting/hovering/dehovering nodes
 */
(function ($) {
	$.jstree.plugin("ui", {
		__init : function () {=20
			this.data.ui.selected =3D $();=20
			this.data.ui.last_selected =3D false;=20
			this.data.ui.hovered =3D null;
			this.data.ui.to_select =3D this.get_settings().ui.initially_select;

			this.get_container()
				.delegate("a", "click.jstree", $.proxy(function (event) {
						event.preventDefault();
						this.select_node(event.currentTarget, true, event);
					}, this))
				.delegate("a", "mouseenter.jstree", $.proxy(function (event) {
						this.hover_node(event.target);
					}, this))
				.delegate("a", "mouseleave.jstree", $.proxy(function (event) {
						this.dehover_node(event.target);
					}, this))
				.bind("reopen.jstree", $.proxy(function () {=20
						this.reselect();
					}, this))
				.bind("get_rollback.jstree", $.proxy(function () {=20
						this.dehover_node();
						this.save_selected();
					}, this))
				.bind("set_rollback.jstree", $.proxy(function () {=20
						this.reselect();
					}, this))
				.bind("close_node.jstree", $.proxy(function (event, data) {=20
						var s =3D this._get_settings().ui,
							obj =3D this._get_node(data.rslt.obj),
							clk =3D (obj && obj.length) ? =
obj.children("ul").find(".jstree-clicked") : $(),
							_this =3D this;
						if(s.selected_parent_close =3D=3D=3D false || !clk.length) { =
return; }
						clk.each(function () {=20
							_this.deselect_node(this);
							if(s.selected_parent_close =3D=3D=3D "select_parent") { =
_this.select_node(obj); }
						});
					}, this))
				.bind("delete_node.jstree", $.proxy(function (event, data) {=20
						var s =3D this._get_settings().ui.select_prev_on_delete,
							obj =3D this._get_node(data.rslt.obj),
							clk =3D (obj && obj.length) ? obj.find(".jstree-clicked") : [],
							_this =3D this;
						clk.each(function () { _this.deselect_node(this); });
						if(s && clk.length) { this.select_node(data.rslt.prev); }
					}, this))
				.bind("move_node.jstree", $.proxy(function (event, data) {=20
						if(data.rslt.cy) {=20
							=
data.rslt.oc.find(".jstree-clicked").removeClass("jstree-clicked");
						}
					}, this));
		},
		defaults : {
			select_limit : -1, // 0, 1, 2 ... or -1 for unlimited
			select_multiple_modifier : "ctrl", // on, or ctrl, shift, alt
			selected_parent_close : "select_parent", // false, "deselect", =
"select_parent"
			select_prev_on_delete : true,
			disable_selecting_children : false,
			initially_select : []
		},
		_fn : {=20
			_get_node : function (obj, allow_multiple) {
				if(typeof obj =3D=3D=3D "undefined" || obj =3D=3D=3D null) { return =
allow_multiple ? this.data.ui.selected : this.data.ui.last_selected; }
				var $obj =3D $(obj, this.get_container());=20
				if($obj.is(".jstree") || obj =3D=3D -1) { return -1; }=20
				$obj =3D $obj.closest("li", this.get_container());=20
				return $obj.length ? $obj : false;=20
			},
			save_selected : function () {
				var _this =3D this;
				this.data.ui.to_select =3D [];
				this.data.ui.selected.each(function () { =
_this.data.ui.to_select.push("#" + =
this.id.toString().replace(/^#/,"").replace('\\/','/').replace('/','\\/')=
); });
				this.__callback(this.data.ui.to_select);
			},
			reselect : function () {
				var _this =3D this,
					s =3D this.data.ui.to_select;
				s =3D $.map($.makeArray(s), function (n) { return "#" + =
n.toString().replace(/^#/,"").replace('\\/','/').replace('/','\\/'); });
				this.deselect_all();
				$.each(s, function (i, val) { if(val && val !=3D=3D "#") { =
_this.select_node(val); } });
				this.__callback();
			},
			refresh : function (obj) {
				this.save_selected();
				return this.__call_old();
			},
			hover_node : function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				//if(this.data.ui.hovered && obj.get(0) =3D=3D=3D =
this.data.ui.hovered.get(0)) { return; }
				if(!obj.hasClass("jstree-hovered")) { this.dehover_node(); }
				this.data.ui.hovered =3D =
obj.children("a").addClass("jstree-hovered").parent();
				this.__callback({ "obj" : obj });
			},
			dehover_node : function () {
				var obj =3D this.data.ui.hovered, p;
				if(!obj || !obj.length) { return false; }
				p =3D obj.children("a").removeClass("jstree-hovered").parent();
				if(this.data.ui.hovered[0] =3D=3D=3D p[0]) { this.data.ui.hovered =
=3D null; }
				this.__callback({ "obj" : obj });
			},
			select_node : function (obj, check, e) {
				obj =3D this._get_node(obj);
				if(obj =3D=3D -1 || !obj || !obj.length) { return false; }
				var s =3D this._get_settings().ui,
					is_multiple =3D (s.select_multiple_modifier =3D=3D "on" || =
(s.select_multiple_modifier !=3D=3D false && e && =
e[s.select_multiple_modifier + "Key"])),
					is_selected =3D this.is_selected(obj),
					proceed =3D true;
				if(check) {
					if(s.disable_selecting_children && is_multiple && obj.parents("li", =
this.get_container()).children(".jstree-clicked").length) {
						return false;
					}
					proceed =3D false;
					switch(!0) {
						case (is_selected && !is_multiple):=20
							this.deselect_all();
							is_selected =3D false;
							proceed =3D true;
							break;
						case (!is_selected && !is_multiple):=20
							if(s.select_limit =3D=3D -1 || s.select_limit > 0) {
								this.deselect_all();
								proceed =3D true;
							}
							break;
						case (is_selected && is_multiple):=20
							this.deselect_node(obj);
							break;
						case (!is_selected && is_multiple):=20
							if(s.select_limit =3D=3D -1 || this.data.ui.selected.length + 1 =
<=3D s.select_limit) {=20
								proceed =3D true;
							}
							break;
					}
				}
				if(proceed && !is_selected) {
					obj.children("a").addClass("jstree-clicked");
					this.data.ui.selected =3D this.data.ui.selected.add(obj);
					this.data.ui.last_selected =3D obj;
					this.__callback({ "obj" : obj });
				}
			},
			deselect_node : function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				if(this.is_selected(obj)) {
					obj.children("a").removeClass("jstree-clicked");
					this.data.ui.selected =3D this.data.ui.selected.not(obj);
					if(this.data.ui.last_selected.get(0) =3D=3D=3D obj.get(0)) { =
this.data.ui.last_selected =3D this.data.ui.selected.eq(0); }
					this.__callback({ "obj" : obj });
				}
			},
			toggle_select : function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return false; }
				if(this.is_selected(obj)) { this.deselect_node(obj); }
				else { this.select_node(obj); }
			},
			is_selected : function (obj) { return =
this.data.ui.selected.index(this._get_node(obj)) >=3D 0; },
			get_selected : function (context) {=20
				return context ? $(context).find(".jstree-clicked").parent() : =
this.data.ui.selected;=20
			},
			deselect_all : function (context) {
				if(context) { =
$(context).find(".jstree-clicked").removeClass("jstree-clicked"); }=20
				else { =
this.get_container().find(".jstree-clicked").removeClass("jstree-clicked"=
); }
				this.data.ui.selected =3D $([]);
				this.data.ui.last_selected =3D false;
				this.__callback();
			}
		}
	});
	// include the selection plugin by default
	$.jstree.defaults.plugins.push("ui");
})(jQuery);
//*/

/*=20
 * jsTree CRRM plugin 1.0
 * Handles creating/renaming/removing/moving nodes by user interaction.
 */
(function ($) {
	$.jstree.plugin("crrm", {=20
		__init : function () {
			this.get_container()
				.bind("move_node.jstree", $.proxy(function (e, data) {
					if(this._get_settings().crrm.move.open_onmove) {
						var t =3D this;
						=
data.rslt.np.parentsUntil(".jstree").andSelf().filter(".jstree-closed").e=
ach(function () {
							t.open_node(this, false, true);
						});
					}
				}, this));
		},
		defaults : {
			input_width_limit : 200,
			move : {
				always_copy			: false, // false, true or "multitree"
				open_onmove			: true,
				default_position	: "last",
				check_move			: function (m) { return true; }
			}
		},
		_fn : {
			_show_input : function (obj, callback) {
				obj =3D this._get_node(obj);
				var rtl =3D this._get_settings().core.rtl,
					w =3D this._get_settings().crrm.input_width_limit,
					w1 =3D obj.children("ins").width(),
					w2 =3D obj.find("> a:visible > ins").width() * obj.find("> =
a:visible > ins").length,
					t =3D this.get_text(obj),
					h1 =3D $("<div>", { css : { "position" : "absolute", "top" : =
"-200px", "left" : (rtl ? "0px" : "-1000px"), "visibility" : "hidden" } =
}).appendTo("body"),
					h2 =3D obj.css("position","relative").append(
					$("<input>", {=20
						"value" : t,
						// "size" : t.length,
						"css" : {
							"padding" : "0",
							"border" : "1px solid silver",
							"position" : "absolute",
							"left"  : (rtl ? "auto" : (w1 + w2 + 4) + "px"),
							"right" : (rtl ? (w1 + w2 + 4) + "px" : "auto"),
							"top" : "0px",
							"height" : (this.data.core.li_height - 2) + "px",
							"lineHeight" : (this.data.core.li_height - 2) + "px",
							"width" : "150px" // will be set a bit further down
						},
						"blur" : $.proxy(function () {
							var i =3D obj.children("input"),
								v =3D i.val();
							if(v =3D=3D=3D "") { v =3D t; }
							i.remove(); // rollback purposes
							this.set_text(obj,t); // rollback purposes
							this.rename_node(obj, v);
							callback.call(this, obj, v, t);
							obj.css("position","");
						}, this),
						"keyup" : function (event) {
							var key =3D event.keyCode || event.which;
							if(key =3D=3D 27) { this.value =3D t; this.blur(); return; }
							else if(key =3D=3D 13) { this.blur(); return; }
							else {
								h2.width(Math.min(h1.text("pW" + this.value).width(),w));
							}
						}
					})
				).children("input");=20
				this.set_text(obj, "");
				h1.css({
						fontFamily		: h2.css('fontFamily')		|| '',
						fontSize		: h2.css('fontSize')		|| '',
						fontWeight		: h2.css('fontWeight')		|| '',
						fontStyle		: h2.css('fontStyle')		|| '',
						fontStretch		: h2.css('fontStretch')		|| '',
						fontVariant		: h2.css('fontVariant')		|| '',
						letterSpacing	: h2.css('letterSpacing')	|| '',
						wordSpacing		: h2.css('wordSpacing')		|| ''
				});
				h2.width(Math.min(h1.text("pW" + =
h2[0].value).width(),w))[0].select();
			},
			rename : function (obj) {
				obj =3D this._get_node(obj);
				this.__rollback();
				var f =3D this.__callback;
				this._show_input(obj, function (obj, new_name, old_name) {=20
					f.call(this, { "obj" : obj, "new_name" : new_name, "old_name" : =
old_name });
				});
			},
			create : function (obj, position, js, callback, skip_rename) {
				var t, _this =3D this;
				obj =3D this._get_node(obj);
				if(!obj) { obj =3D -1; }
				this.__rollback();
				t =3D this.create_node(obj, position, js, function (t) {
					var p =3D this._get_parent(t),
						pos =3D $(t).index();
					if(callback) { callback.call(this, t); }
					if(p.length && p.hasClass("jstree-closed")) { this.open_node(p, =
false, true); }
					if(!skip_rename) {=20
						this._show_input(t, function (obj, new_name, old_name) {=20
							_this.__callback({ "obj" : obj, "name" : new_name, "parent" : p, =
"position" : pos });
						});
					}
					else { _this.__callback({ "obj" : t, "name" : this.get_text(t), =
"parent" : p, "position" : pos }); }
				});
				return t;
			},
			remove : function (obj) {
				obj =3D this._get_node(obj, true);
				this.__rollback();
				this.delete_node(obj);
				this.__callback({ "obj" : obj });
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var s =3D this._get_settings().crrm.move;
				if(!s.check_move.call(this, this._get_move())) { return false; }
				return true;
			},
			move_node : function (obj, ref, position, is_copy, is_prepared, =
skip_check) {
				var s =3D this._get_settings().crrm.move;
				if(!is_prepared) {=20
					if(!position) { position =3D s.default_position; }
					if(position =3D=3D=3D "inside" && =
!s.default_position.match(/^(before|after)$/)) { position =3D =
s.default_position; }
					return this.__call_old(true, obj, ref, position, is_copy, false, =
skip_check);
				}
				// if the move is already prepared
				if(s.always_copy =3D=3D=3D true || (s.always_copy =3D=3D=3D =
"multitree" && obj.rt.get_index() !=3D=3D obj.ot.get_index() )) {
					is_copy =3D true;
				}
				this.__call_old(true, obj, ref, position, is_copy, true, =
skip_check);
			},

			cut : function (obj) {
				obj =3D this._get_node(obj);
				this.data.crrm.cp_nodes =3D false;
				this.data.crrm.ct_nodes =3D false;
				if(!obj || !obj.length) { return false; }
				this.data.crrm.ct_nodes =3D obj;
			},
			copy : function (obj) {
				obj =3D this._get_node(obj);
				this.data.crrm.cp_nodes =3D false;
				this.data.crrm.ct_nodes =3D false;
				if(!obj || !obj.length) { return false; }
				this.data.crrm.cp_nodes =3D obj;
			},
			paste : function (obj) {=20
				obj =3D this._get_node(obj);
				if(!obj || !obj.length) { return false; }
				if(!this.data.crrm.ct_nodes && !this.data.crrm.cp_nodes) { return =
false; }
				if(this.data.crrm.ct_nodes) { =
this.move_node(this.data.crrm.ct_nodes, obj); }
				if(this.data.crrm.cp_nodes) { =
this.move_node(this.data.crrm.cp_nodes, obj, false, true); }
				this.data.crrm.cp_nodes =3D false;
				this.data.crrm.ct_nodes =3D false;
			}
		}
	});
	// include the crr plugin by default
	$.jstree.defaults.plugins.push("crrm");
})(jQuery);

/*=20
 * jsTree themes plugin 1.0
 * Handles loading and setting themes, as well as detecting path to =
themes, etc.
 */
(function ($) {
	var themes_loaded =3D [];
	// this variable stores the path to the themes folder - if left as =
false - it will be autodetected
	$.jstree._themes =3D false;
	$.jstree.plugin("themes", {
		__init : function () {=20
			this.get_container()
				.bind("init.jstree", $.proxy(function () {
						var s =3D this._get_settings().themes;
						this.data.themes.dots =3D s.dots;=20
						this.data.themes.icons =3D s.icons;=20
						//alert(s.dots);
						this.set_theme(s.theme, s.url);
					}, this))
				.bind("loaded.jstree", $.proxy(function () {
						// bound here too, as simple HTML tree's won't honor dots & icons =
otherwise
						if(!this.data.themes.dots) { this.hide_dots(); }
						else { this.show_dots(); }
						if(!this.data.themes.icons) { this.hide_icons(); }
						else { this.show_icons(); }
					}, this));
		},
		defaults : {=20
			theme : "default",=20
			url : false,
			dots : true,
			icons : true
		},
		_fn : {
			set_theme : function (theme_name, theme_url) {
				if(!theme_name) { return false; }
				if(!theme_url) { theme_url =3D $.jstree._themes + theme_name + =
'/style.css'; }
				if($.inArray(theme_url, themes_loaded) =3D=3D -1) {
					$.vakata.css.add_sheet({ "url" : theme_url, "rel" : "jstree" });
					themes_loaded.push(theme_url);
				}
				if(this.data.themes.theme !=3D theme_name) {
					this.get_container().removeClass('jstree-' + =
this.data.themes.theme);
					this.data.themes.theme =3D theme_name;
				}
				this.get_container().addClass('jstree-' + theme_name);
				if(!this.data.themes.dots) { this.hide_dots(); }
				else { this.show_dots(); }
				if(!this.data.themes.icons) { this.hide_icons(); }
				else { this.show_icons(); }
				this.__callback();
			},
			get_theme	: function () { return this.data.themes.theme; },

			show_dots	: function () { this.data.themes.dots =3D true; =
this.get_container().children("ul").removeClass("jstree-no-dots"); },
			hide_dots	: function () { this.data.themes.dots =3D false; =
this.get_container().children("ul").addClass("jstree-no-dots"); },
			toggle_dots	: function () { if(this.data.themes.dots) { =
this.hide_dots(); } else { this.show_dots(); } },

			show_icons	: function () { this.data.themes.icons =3D true; =
this.get_container().children("ul").removeClass("jstree-no-icons"); },
			hide_icons	: function () { this.data.themes.icons =3D false; =
this.get_container().children("ul").addClass("jstree-no-icons"); },
			toggle_icons: function () { if(this.data.themes.icons) { =
this.hide_icons(); } else { this.show_icons(); } }
		}
	});
	// autodetect themes path
	$(function () {
		if($.jstree._themes =3D=3D=3D false) {
			$("script").each(function () {=20
				if(this.src.toString().match(/jquery\.jstree[^\/]*?\.js(\?.*)?$/)) { =

					$.jstree._themes =3D =
this.src.toString().replace(/jquery\.jstree[^\/]*?\.js(\?.*)?$/, "") + =
'themes/';=20
					return false;=20
				}
			});
		}
		if($.jstree._themes =3D=3D=3D false) { $.jstree._themes =3D "themes/"; =
}
	});
	// include the themes plugin by default
	$.jstree.defaults.plugins.push("themes");
})(jQuery);
//*/

/*
 * jsTree hotkeys plugin 1.0
 * Enables keyboard navigation for all tree instances
 * Depends on the jstree ui & jquery hotkeys plugins
 */
(function ($) {
	var bound =3D [];
	function exec(i, event) {
		var f =3D $.jstree._focused(), tmp;
		if(f && f.data && f.data.hotkeys && f.data.hotkeys.enabled) {=20
			tmp =3D f._get_settings().hotkeys[i];
			if(tmp) { return tmp.call(f, event); }
		}
	}
	$.jstree.plugin("hotkeys", {
		__init : function () {
			if(typeof $.hotkeys =3D=3D=3D "undefined") { throw "jsTree hotkeys: =
jQuery hotkeys plugin not included."; }
			if(!this.data.ui) { throw "jsTree hotkeys: jsTree UI plugin not =
included."; }
			$.each(this._get_settings().hotkeys, function (i, val) {
				if($.inArray(i, bound) =3D=3D -1) {
					$(document).bind("keydown", i, function (event) { return exec(i, =
event); });
					bound.push(i);
				}
			});
			this.enable_hotkeys();
		},
		defaults : {
			"up" : function () {=20
				var o =3D this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_prev(o));
				return false;=20
			},
			"down" : function () {=20
				var o =3D this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_next(o));
				return false;
			},
			"left" : function () {=20
				var o =3D this.data.ui.hovered || this.data.ui.last_selected;
				if(o) {
					if(o.hasClass("jstree-open")) { this.close_node(o); }
					else { this.hover_node(this._get_prev(o)); }
				}
				return false;
			},
			"right" : function () {=20
				var o =3D this.data.ui.hovered || this.data.ui.last_selected;
				if(o && o.length) {
					if(o.hasClass("jstree-closed")) { this.open_node(o); }
					else { this.hover_node(this._get_next(o)); }
				}
				return false;
			},
			"space" : function () {=20
				if(this.data.ui.hovered) { =
this.data.ui.hovered.children("a:eq(0)").click(); }=20
				return false;=20
			},
			"ctrl+space" : function (event) {=20
				event.type =3D "click";
				if(this.data.ui.hovered) { =
this.data.ui.hovered.children("a:eq(0)").trigger(event); }=20
				return false;=20
			},
			"f2" : function () { this.rename(this.data.ui.hovered || =
this.data.ui.last_selected); },
			"del" : function () { this.remove(this.data.ui.hovered || =
this._get_node(null)); }
		},
		_fn : {
			enable_hotkeys : function () {
				this.data.hotkeys.enabled =3D true;
			},
			disable_hotkeys : function () {
				this.data.hotkeys.enabled =3D false;
			}
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree JSON 1.0
 * The JSON data store. Datastores are build by overriding the =
`load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.jstree.plugin("json_data", {
		defaults : {=20
			data : false,
			ajax : false,
			correct_state : true,
			progressive_render : false
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this =3D this; =
this.load_node_json(obj, function () { _this.__callback({ "obj" : obj =
}); s_call.call(this); }, e_call); },
			_is_loaded : function (obj) {=20
				var s =3D this._get_settings().json_data, d;
				obj =3D this._get_node(obj);=20
				if(obj && obj !=3D=3D -1 && s.progressive_render && =
!obj.is(".jstree-open, .jstree-leaf") && =
obj.children("ul").children("li").length =3D=3D=3D 0 && =
obj.data("jstree-children")) {
					d =3D this._parse_json(obj.data("jstree-children"));
					if(d) {
						obj.append(d);
						$.removeData(obj, "jstree-children");
					}
					this.clean_node(obj);
					return true;
				}
				return obj =3D=3D -1 || !obj || !s.ajax || obj.is(".jstree-open, =
.jstree-leaf") || obj.children("ul").children("li").size() > 0;
			},
			load_node_json : function (obj, s_call, e_call) {
				var s =3D this.get_settings().json_data, d,
					error_func =3D function () {},
					success_func =3D function () {};
				obj =3D this._get_node(obj);
				if(obj && obj !=3D=3D -1) {
					if(obj.data("jstree-is-loading")) { return; }
					else { obj.data("jstree-is-loading",true); }
				}
				switch(!0) {
					case (!s.data && !s.ajax): throw "Neither data nor ajax settings =
supplied.";
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj =
=3D=3D=3D -1)):
						if(!obj || obj =3D=3D -1) {
							d =3D this._parse_json(s.data);
							if(d) {
								=
this.get_container().children("ul").empty().append(d.children());
								this.clean_node();
							}
							else {=20
								if(s.correct_state) { =
this.get_container().children("ul").empty(); }
							}
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj =
!=3D=3D -1):
						error_func =3D function (x, t, e) {
							var ef =3D this.get_settings().json_data.ajax.error;=20
							if(ef) { ef.call(this, x, t, e); }
							if(obj !=3D -1 && obj.length) {
								obj.children(".jstree-loading").removeClass("jstree-loading");
								obj.data("jstree-is-loading",false);
								if(t =3D=3D=3D "success" && s.correct_state) { =
obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); }
							}
							else {
								if(t =3D=3D=3D "success" && s.correct_state) { =
this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func =3D function (d, t, x) {
							var sf =3D this.get_settings().json_data.ajax.success;=20
							if(sf) { d =3D sf.call(this,d,t,x) || d; }
							if(d =3D=3D=3D "" || (!$.isArray(d) && !$.isPlainObject(d))) {
								return error_func.call(this, x, t, "");
							}
							d =3D this._parse_json(d);
							if(d) {
								if(obj =3D=3D=3D -1 || !obj) { =
this.get_container().children("ul").empty().append(d.children()); }
								else { =
obj.append(d).children(".jstree-loading").removeClass("jstree-loading"); =
obj.data("jstree-is-loading",false); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
							else {
								if(obj =3D=3D=3D -1 || !obj) {
									if(s.correct_state) {=20
										this.get_container().children("ul").empty();=20
										if(s_call) { s_call.call(this); }
									}
								}
								else {
									obj.children(".jstree-loading").removeClass("jstree-loading");
									obj.data("jstree-is-loading",false);
									if(s.correct_state) {=20
										obj.removeClass("jstree-open =
jstree-closed").addClass("jstree-leaf");=20
										if(s_call) { s_call.call(this); }=20
									}
								}
							}
						};
						s.ajax.context =3D this;
						s.ajax.error =3D error_func;
						s.ajax.success =3D success_func;
						if(!s.ajax.dataType) { s.ajax.dataType =3D "json"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url =3D =
s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data =3D =
s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			},
			_parse_json : function (js, is_callback) {
				var d =3D false,=20
					p =3D this._get_settings(),
					s =3D p.json_data,
					t =3D p.core.html_titles,
					tmp, i, j, ul1, ul2;

				if(!js) { return d; }
				if($.isFunction(js)) {=20
					js =3D js.call(this);
				}
				if($.isArray(js)) {
					d =3D $();
					if(!js.length) { return false; }
					for(i =3D 0, j =3D js.length; i < j; i++) {
						tmp =3D this._parse_json(js[i], true);
						if(tmp.length) { d =3D d.add(tmp); }
					}
				}
				else {
					if(typeof js =3D=3D "string") { js =3D { data : js }; }
					if(!js.data && js.data !=3D=3D "") { return d; }
					d =3D $("<li>");
					if(js.attr) { d.attr(js.attr); }
					if(js.metadata) { d.data("jstree", js.metadata); }
					if(js.state) { d.addClass("jstree-" + js.state); }
					if(!$.isArray(js.data)) { tmp =3D js.data; js.data =3D []; =
js.data.push(tmp); }
					$.each(js.data, function (i, m) {
						tmp =3D $("<a>");
						if($.isFunction(m)) { m =3D m.call(this, js); }
						if(typeof m =3D=3D "string") { tmp.attr('href','#')[ t ? "html" : =
"text" ](m); }
						else {
							if(!m.attr) { m.attr =3D {}; }
							if(!m.attr.href) { m.attr.href =3D '#'; }
							tmp.attr(m.attr)[ t ? "html" : "text" ](m.title);
							if(m.language) { tmp.addClass(m.language); }
						}
						tmp.prepend("<ins class=3D'jstree-icon'>&#160;</ins>");
						if(!m.icon && js.icon) { m.icon =3D js.icon; }
						if(m.icon) {=20
							if(m.icon.indexOf("/") =3D=3D=3D -1) { =
tmp.children("ins").addClass(m.icon); }
							else { tmp.children("ins").css("background","url('" + m.icon + =
"') center center no-repeat"); }
						}
						d.append(tmp);
					});
					d.prepend("<ins class=3D'jstree-icon'>&#160;</ins>");
					if(js.children) {=20
						if(s.progressive_render && js.state !=3D=3D "open") {
							d.addClass("jstree-closed").data("jstree-children", js.children);
						}
						else {
							if($.isFunction(js.children)) {
								js.children =3D js.children.call(this, js);
							}
							if($.isArray(js.children) && js.children.length) {
								tmp =3D this._parse_json(js.children, true);
								if(tmp.length) {
									ul2 =3D $("<ul>");
									ul2.append(tmp);
									d.append(ul2);
								}
							}
						}
					}
				}
				if(!is_callback) {
					ul1 =3D $("<ul>");
					ul1.append(d);
					d =3D ul1;
				}
				return d;
			},
			get_json : function (obj, li_attr, a_attr, is_callback) {
				var result =3D [],=20
					s =3D this._get_settings(),=20
					_this =3D this,
					tmp1, tmp2, li, a, t, lang;
				obj =3D this._get_node(obj);
				if(!obj || obj =3D=3D=3D -1) { obj =3D this.get_container().find("> =
ul > li"); }
				li_attr =3D $.isArray(li_attr) ? li_attr : [ "id", "class" ];
				if(!is_callback && this.data.types) { =
li_attr.push(s.types.type_attr); }
				a_attr =3D $.isArray(a_attr) ? a_attr : [ ];

				obj.each(function () {
					li =3D $(this);
					tmp1 =3D { data : [] };
					if(li_attr.length) { tmp1.attr =3D { }; }
					$.each(li_attr, function (i, v) {=20
						tmp2 =3D li.attr(v);=20
						if(tmp2 && tmp2.length && tmp2.replace(/jstree[^ =
]*|$/ig,'').length) {
							tmp1.attr[v] =3D tmp2.replace(/jstree[^ ]*|$/ig,'');=20
						}
					});
					if(li.hasClass("jstree-open")) { tmp1.state =3D "open"; }
					if(li.hasClass("jstree-closed")) { tmp1.state =3D "closed"; }
					a =3D li.children("a");
					a.each(function () {
						t =3D $(this);
						if(
							a_attr.length ||=20
							$.inArray("languages", s.plugins) !=3D=3D -1 ||=20
							t.children("ins").get(0).style.backgroundImage.length ||=20
							(t.children("ins").get(0).className && =
t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').length)
						) {=20
							lang =3D false;
							if($.inArray("languages", s.plugins) !=3D=3D -1 && =
$.isArray(s.languages) && s.languages.length) {
								$.each(s.languages, function (l, lv) {
									if(t.hasClass(lv)) {
										lang =3D lv;
										return false;
									}
								});
							}
							tmp2 =3D { attr : { }, title : _this.get_text(t, lang) };=20
							$.each(a_attr, function (k, z) {
								tmp1.attr[z] =3D (t.attr(z) || "").replace(/jstree[^ =
]*|$/ig,'');
							});
							$.each(s.languages, function (k, z) {
								if(t.hasClass(z)) { tmp2.language =3D z; return true; }
							});
							if(t.children("ins").get(0).className.replace(/jstree[^ =
]*|$/ig,'').replace(/^\s+$/ig,"").length) {
								tmp2.icon =3D =
t.children("ins").get(0).className.replace(/jstree[^ =
]*|$/ig,'').replace(/^\s+$/ig,"");
							}
							if(t.children("ins").get(0).style.backgroundImage.length) {
								tmp2.icon =3D =
t.children("ins").get(0).style.backgroundImage.replace("url(","").replace=
(")","");
							}
						}
						else {
							tmp2 =3D _this.get_text(t);
						}
						if(a.length > 1) { tmp1.data.push(tmp2); }
						else { tmp1.data =3D tmp2; }
					});
					li =3D li.find("> ul > li");
					if(li.length) { tmp1.children =3D _this.get_json(li, li_attr, =
a_attr, true); }
					result.push(tmp1);
				});
				return result;
			}
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree languages plugin 1.0
 * Adds support for multiple language versions in one tree
 * This basically allows for many titles coexisting in one node, but =
only one of them being visible at any given time
 * This is useful for maintaining the same structure in many languages =
(hence the name of the plugin)
 */
(function ($) {
	$.jstree.plugin("languages", {
		__init : function () { this._load_css();  },
		defaults : [],
		_fn : {
			set_lang : function (i) {=20
				var langs =3D this._get_settings().languages,
					st =3D false,
					selector =3D ".jstree-" + this.get_index() + ' a';
				if(!$.isArray(langs) || langs.length =3D=3D=3D 0) { return false; }
				if($.inArray(i,langs) =3D=3D -1) {
					if(!!langs[i]) { i =3D langs[i]; }
					else { return false; }
				}
				if(i =3D=3D this.data.languages.current_language) { return true; }
				st =3D $.vakata.css.get_css(selector + "." + =
this.data.languages.current_language, false, =
this.data.languages.language_css);
				if(st !=3D=3D false) { st.style.display =3D "none"; }
				st =3D $.vakata.css.get_css(selector + "." + i, false, =
this.data.languages.language_css);
				if(st !=3D=3D false) { st.style.display =3D ""; }
				this.data.languages.current_language =3D i;
				this.__callback(i);
				return true;
			},
			get_lang : function () {
				return this.data.languages.current_language;
			},
			get_text : function (obj, lang) {
				obj =3D this._get_node(obj) || this.data.ui.last_selected;
				if(!obj.size()) { return false; }
				var langs =3D this._get_settings().languages,
					s =3D this._get_settings().core.html_titles;
				if($.isArray(langs) && langs.length) {
					lang =3D (lang && $.inArray(lang,langs) !=3D -1) ? lang : =
this.data.languages.current_language;
					obj =3D obj.children("a." + lang);
				}
				else { obj =3D obj.children("a:eq(0)"); }
				if(s) {
					obj =3D obj.clone();
					obj.children("INS").remove();
					return obj.html();
				}
				else {
					obj =3D obj.contents().filter(function() { return this.nodeType =
=3D=3D 3; })[0];
					return obj.nodeValue;
				}
			},
			set_text : function (obj, val, lang) {
				obj =3D this._get_node(obj) || this.data.ui.last_selected;
				if(!obj.size()) { return false; }
				var langs =3D this._get_settings().languages,
					s =3D this._get_settings().core.html_titles,
					tmp;
				if($.isArray(langs) && langs.length) {
					lang =3D (lang && $.inArray(lang,langs) !=3D -1) ? lang : =
this.data.languages.current_language;
					obj =3D obj.children("a." + lang);
				}
				else { obj =3D obj.children("a:eq(0)"); }
				if(s) {
					tmp =3D obj.children("INS").clone();
					obj.html(val).prepend(tmp);
					this.__callback({ "obj" : obj, "name" : val, "lang" : lang });
					return true;
				}
				else {
					obj =3D obj.contents().filter(function() { return this.nodeType =
=3D=3D 3; })[0];
					this.__callback({ "obj" : obj, "name" : val, "lang" : lang });
					return (obj.nodeValue =3D val);
				}
			},
			_load_css : function () {
				var langs =3D this._get_settings().languages,
					str =3D "/* languages css */",
					selector =3D ".jstree-" + this.get_index() + ' a',
					ln;
				if($.isArray(langs) && langs.length) {
					this.data.languages.current_language =3D langs[0];
					for(ln =3D 0; ln < langs.length; ln++) {
						str +=3D selector + "." + langs[ln] + " {";
						if(langs[ln] !=3D this.data.languages.current_language) { str +=3D =
" display:none; "; }
						str +=3D " } ";
					}
					this.data.languages.language_css =3D $.vakata.css.add_sheet({ 'str' =
: str });
				}
			},
			create_node : function (obj, position, js, callback) {
				var t =3D this.__call_old(true, obj, position, js, function (t) {
					var langs =3D this._get_settings().languages,
						a =3D t.children("a"),
						ln;
					if($.isArray(langs) && langs.length) {
						for(ln =3D 0; ln < langs.length; ln++) {
							if(!a.is("." + langs[ln])) {
								t.append(a.eq(0).clone().removeClass(langs.join(" =
")).addClass(langs[ln]));
							}
						}
						a.not("." + langs.join(", .")).remove();
					}
					if(callback) { callback.call(this, t); }
				});
				return t;
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree cookies plugin 1.0
 * Stores the currently opened/selected nodes in a cookie and then =
restores them
 * Depends on the jquery.cookie plugin
 */
(function ($) {
	$.jstree.plugin("cookies", {
		__init : function () {
			if(typeof $.cookie =3D=3D=3D "undefined") { throw "jsTree cookie: =
jQuery cookie plugin not included."; }

			var s =3D this._get_settings().cookies,
				tmp;
			if(!!s.save_opened) {
				tmp =3D $.cookie(s.save_opened);
				if(tmp && tmp.length) { this.data.core.to_open =3D tmp.split(","); }
			}
			if(!!s.save_selected) {
				tmp =3D $.cookie(s.save_selected);
				if(tmp && tmp.length && this.data.ui) { this.data.ui.to_select =3D =
tmp.split(","); }
			}
			this.get_container()
				.one( ( this.data.ui ? "reselect" : "reopen" ) + ".jstree", =
$.proxy(function () {
					this.get_container()
						.bind("open_node.jstree close_node.jstree select_node.jstree =
deselect_node.jstree", $.proxy(function (e) {=20
								if(this._get_settings().cookies.auto_save) { =
this.save_cookie((e.handleObj.namespace + =
e.handleObj.type).replace("jstree","")); }
							}, this));
				}, this));
		},
		defaults : {
			save_opened		: "jstree_open",
			save_selected	: "jstree_select",
			auto_save		: true,
			cookie_options	: {}
		},
		_fn : {
			save_cookie : function (c) {
				if(this.data.core.refreshing) { return; }
				var s =3D this._get_settings().cookies;
				if(!c) { // if called manually and not by event
					if(s.save_opened) {
						this.save_opened();
						$.cookie(s.save_opened, this.data.core.to_open.join(","), =
s.cookie_options);
					}
					if(s.save_selected && this.data.ui) {
						this.save_selected();
						$.cookie(s.save_selected, this.data.ui.to_select.join(","), =
s.cookie_options);
					}
					return;
				}
				switch(c) {
					case "open_node":
					case "close_node":
						if(!!s.save_opened) {=20
							this.save_opened();=20
							$.cookie(s.save_opened, this.data.core.to_open.join(","), =
s.cookie_options);=20
						}
						break;
					case "select_node":
					case "deselect_node":
						if(!!s.save_selected && this.data.ui) {=20
							this.save_selected();=20
							$.cookie(s.save_selected, this.data.ui.to_select.join(","), =
s.cookie_options);=20
						}
						break;
				}
			}
		}
	});
	// include cookies by default
	$.jstree.defaults.plugins.push("cookies");
})(jQuery);
//*/

/*
 * jsTree sort plugin 1.0
 * Sorts items alphabetically (or using any other function)
 */
(function ($) {
	$.jstree.plugin("sort", {
		__init : function () {
			this.get_container()
				.bind("load_node.jstree", $.proxy(function (e, data) {
						var obj =3D this._get_node(data.rslt.obj);
						obj =3D obj =3D=3D=3D -1 ? this.get_container().children("ul") : =
obj.children("ul");
						this.sort(obj);
					}, this))
				.bind("rename_node.jstree", $.proxy(function (e, data) {
						this.sort(data.rslt.obj.parent());
					}, this))
				.bind("move_node.jstree", $.proxy(function (e, data) {
						var m =3D data.rslt.np =3D=3D -1 ? this.get_container() : =
data.rslt.np;
						this.sort(m.children("ul"));
					}, this));
		},
		defaults : function (a, b) { return this.get_text(a) > =
this.get_text(b) ? 1 : -1; },
		_fn : {
			sort : function (obj) {
				var s =3D this._get_settings().sort,
					t =3D this;
				obj.append($.makeArray(obj.children("li")).sort($.proxy(s, t)));
				obj.find("> li > ul").each(function() { t.sort($(this)); });
				this.clean_node(obj);
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree DND plugin 1.0
 * Drag and drop plugin for moving/copying nodes
 */
(function ($) {
	var o =3D false,
		r =3D false,
		m =3D false,
		sli =3D false,
		sti =3D false,
		dir1 =3D false,
		dir2 =3D false;
	$.vakata.dnd =3D {
		is_down : false,
		is_drag : false,
		helper : false,
		scroll_spd : 10,
		init_x : 0,
		init_y : 0,
		threshold : 5,
		user_data : {},

		drag_start : function (e, data, html) {=20
			if($.vakata.dnd.is_drag) { $.vakata.drag_stop({}); }
			try {
				e.currentTarget.unselectable =3D "on";
				e.currentTarget.onselectstart =3D function() { return false; };
				if(e.currentTarget.style) { e.currentTarget.style.MozUserSelect =3D =
"none"; }
			} catch(err) { }
			$.vakata.dnd.init_x =3D e.pageX;
			$.vakata.dnd.init_y =3D e.pageY;
			$.vakata.dnd.user_data =3D data;
			$.vakata.dnd.is_down =3D true;
			$.vakata.dnd.helper =3D $("<div =
id=3D'vakata-dragged'>").html(html).css("opacity", "0.75");
			$(document).bind("mousemove", $.vakata.dnd.drag);
			$(document).bind("mouseup", $.vakata.dnd.drag_stop);
			return false;
		},
		drag : function (e) {=20
			if(!$.vakata.dnd.is_down) { return; }
			if(!$.vakata.dnd.is_drag) {
				if(Math.abs(e.pageX - $.vakata.dnd.init_x) > 5 || Math.abs(e.pageY - =
$.vakata.dnd.init_y) > 5) {=20
					$.vakata.dnd.helper.appendTo("body");
					$.vakata.dnd.is_drag =3D true;
					$(document).triggerHandler("drag_start.vakata", { "event" : e, =
"data" : $.vakata.dnd.user_data });
				}
				else { return; }
			}

			// maybe use a scrolling parent element instead of document?
			if(e.type =3D=3D=3D "mousemove") { // thought of adding scroll in =
order to move the helper, but mouse poisition is n/a
				var d =3D $(document), t =3D d.scrollTop(), l =3D d.scrollLeft();
				if(e.pageY - t < 20) {=20
					if(sti && dir1 =3D=3D=3D "down") { clearInterval(sti); sti =3D =
false; }
					if(!sti) { dir1 =3D "up"; sti =3D setInterval(function () { =
$(document).scrollTop($(document).scrollTop() - =
$.vakata.dnd.scroll_spd); }, 150); }
				}
				else {=20
					if(sti && dir1 =3D=3D=3D "up") { clearInterval(sti); sti =3D false; =
}
				}
				if($(window).height() - (e.pageY - t) < 20) {
					if(sti && dir1 =3D=3D=3D "up") { clearInterval(sti); sti =3D false; =
}
					if(!sti) { dir1 =3D "down"; sti =3D setInterval(function () { =
$(document).scrollTop($(document).scrollTop() + =
$.vakata.dnd.scroll_spd); }, 150); }
				}
				else {=20
					if(sti && dir1 =3D=3D=3D "down") { clearInterval(sti); sti =3D =
false; }
				}

				if(e.pageX - l < 20) {
					if(sli && dir2 =3D=3D=3D "right") { clearInterval(sli); sli =3D =
false; }
					if(!sli) { dir2 =3D "left"; sli =3D setInterval(function () { =
$(document).scrollLeft($(document).scrollLeft() - =
$.vakata.dnd.scroll_spd); }, 150); }
				}
				else {=20
					if(sli && dir2 =3D=3D=3D "left") { clearInterval(sli); sli =3D =
false; }
				}
				if($(window).width() - (e.pageX - l) < 20) {
					if(sli && dir2 =3D=3D=3D "left") { clearInterval(sli); sli =3D =
false; }
					if(!sli) { dir2 =3D "right"; sli =3D setInterval(function () { =
$(document).scrollLeft($(document).scrollLeft() + =
$.vakata.dnd.scroll_spd); }, 150); }
				}
				else {=20
					if(sli && dir2 =3D=3D=3D "right") { clearInterval(sli); sli =3D =
false; }
				}
			}

			$.vakata.dnd.helper.css({ left : (e.pageX + 5) + "px", top : (e.pageY =
+ 10) + "px" });
			$(document).triggerHandler("drag.vakata", { "event" : e, "data" : =
$.vakata.dnd.user_data });
		},
		drag_stop : function (e) {
			$(document).unbind("mousemove", $.vakata.dnd.drag);
			$(document).unbind("mouseup", $.vakata.dnd.drag_stop);
			$(document).triggerHandler("drag_stop.vakata", { "event" : e, "data" =
: $.vakata.dnd.user_data });
			$.vakata.dnd.helper.remove();
			$.vakata.dnd.init_x =3D 0;
			$.vakata.dnd.init_y =3D 0;
			$.vakata.dnd.user_data =3D {};
			$.vakata.dnd.is_down =3D false;
			$.vakata.dnd.is_drag =3D false;
		}
	};
	$(function() {
		var css_string =3D '#vakata-dragged { display:block; margin:0 0 0 0; =
padding:4px 4px 4px 24px; position:absolute; top:-2000px; =
line-height:16px; z-index:10000; } ';
		$.vakata.css.add_sheet({ str : css_string });
	});

	$.jstree.plugin("dnd", {
		__init : function () {
			this.data.dnd =3D {
				active : false,
				after : false,
				inside : false,
				before : false,
				off : false,
				prepared : false,
				w : 0,
				to1 : false,
				to2 : false,
				cof : false,
				cw : false,
				ch : false,
				i1 : false,
				i2 : false
			};
			this.get_container()
				.bind("mouseenter.jstree", $.proxy(function () {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && =
this.data.themes) {
							m.attr("class", "jstree-" + this.data.themes.theme);=20
							$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + =
this.data.themes.theme);
						}
					}, this))
				.bind("mouseleave.jstree", $.proxy(function () {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
							if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
						}
					}, this))
				.bind("mousemove.jstree", $.proxy(function (e) {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							var cnt =3D this.get_container()[0];

							// Horizontal scroll
							if(e.pageX + 24 > this.data.dnd.cof.left + this.data.dnd.cw) {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
								this.data.dnd.i1 =3D setInterval($.proxy(function () { =
this.scrollLeft +=3D $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else if(e.pageX - 24 < this.data.dnd.cof.left) {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
								this.data.dnd.i1 =3D setInterval($.proxy(function () { =
this.scrollLeft -=3D $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
							}

							// Vertical scroll
							if(e.pageY + 24 > this.data.dnd.cof.top + this.data.dnd.ch) {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
								this.data.dnd.i2 =3D setInterval($.proxy(function () { =
this.scrollTop +=3D $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else if(e.pageY - 24 < this.data.dnd.cof.top) {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
								this.data.dnd.i2 =3D setInterval($.proxy(function () { =
this.scrollTop -=3D $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
							}

						}
					}, this))
				.delegate("a", "mousedown.jstree", $.proxy(function (e) {=20
						if(e.which =3D=3D=3D 1) {
							this.start_drag(e.currentTarget, e);
							return false;
						}
					}, this))
				.delegate("a", "mouseenter.jstree", $.proxy(function (e) {=20
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							this.dnd_enter(e.currentTarget);
						}
					}, this))
				.delegate("a", "mousemove.jstree", $.proxy(function (e) {=20
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(typeof this.data.dnd.off.top =3D=3D=3D "undefined") { =
this.data.dnd.off =3D $(e.target).offset(); }
							this.data.dnd.w =3D (e.pageY - (this.data.dnd.off.top || 0)) % =
this.data.core.li_height;
							if(this.data.dnd.w < 0) { this.data.dnd.w +=3D =
this.data.core.li_height; }
							this.dnd_show();
						}
					}, this))
				.delegate("a", "mouseleave.jstree", $.proxy(function (e) {=20
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							this.data.dnd.after		=3D false;
							this.data.dnd.before	=3D false;
							this.data.dnd.inside	=3D false;
							=
$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
							m.hide();
							if(r && r[0] =3D=3D=3D e.target.parentNode) {
								if(this.data.dnd.to1) {
									clearTimeout(this.data.dnd.to1);
									this.data.dnd.to1 =3D false;
								}
								if(this.data.dnd.to2) {
									clearTimeout(this.data.dnd.to2);
									this.data.dnd.to2 =3D false;
								}
							}
						}
					}, this))
				.delegate("a", "mouseup.jstree", $.proxy(function (e) {=20
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							this.dnd_finish(e);
						}
					}, this));

			$(document)
				.bind("drag_stop.vakata", $.proxy(function () {
						this.data.dnd.after		=3D false;
						this.data.dnd.before	=3D false;
						this.data.dnd.inside	=3D false;
						this.data.dnd.off		=3D false;
						this.data.dnd.prepared	=3D false;
						this.data.dnd.w			=3D false;
						this.data.dnd.to1		=3D false;
						this.data.dnd.to2		=3D false;
						this.data.dnd.active	=3D false;
						this.data.dnd.foreign	=3D false;
						if(m) { m.css({ "top" : "-2000px" }); }
					}, this))
				.bind("drag_start.vakata", $.proxy(function (e, data) {
						if(data.data.jstree) {=20
							var et =3D $(data.event.target);
							if(et.closest(".jstree").hasClass("jstree-" + this.get_index())) =
{
								this.dnd_enter(et);
							}
						}
					}, this));

			var s =3D this._get_settings().dnd;
			if(s.drag_target) {
				$(document)
					.delegate(s.drag_target, "mousedown.jstree", $.proxy(function (e) {
						o =3D e.target;
						$.vakata.dnd.drag_start(e, { jstree : true, obj : e.target }, =
"<ins class=3D'jstree-icon'></ins>" + $(e.target).text() );
						if(this.data.themes) {=20
							m.attr("class", "jstree-" + this.data.themes.theme);=20
							$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + =
this.data.themes.theme);=20
						}
						=
$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
						var cnt =3D this.get_container();
						this.data.dnd.cof =3D cnt.offset();
						this.data.dnd.cw =3D parseInt(cnt.width(),10);
						this.data.dnd.ch =3D parseInt(cnt.height(),10);
						this.data.dnd.foreign =3D true;
						return false;
					}, this));
			}
			if(s.drop_target) {
				$(document)
					.delegate(s.drop_target, "mouseenter.jstree", $.proxy(function (e) =
{
							if(this.data.dnd.active && =
this._get_settings().dnd.drop_check.call(this, { "o" : o, "r" : =
$(e.target) })) {
								$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
							}
						}, this))
					.delegate(s.drop_target, "mouseleave.jstree", $.proxy(function (e) =
{
							if(this.data.dnd.active) {
								=
$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
							}
						}, this))
					.delegate(s.drop_target, "mouseup.jstree", $.proxy(function (e) {
							if(this.data.dnd.active && =
$.vakata.dnd.helper.children("ins").hasClass("jstree-ok")) {
								this._get_settings().dnd.drop_finish.call(this, { "o" : o, "r" : =
$(e.target) });
							}
						}, this));
			}
		},
		defaults : {
			copy_modifier	: "ctrl",
			check_timeout	: 200,
			open_timeout	: 500,
			drop_target		: ".jstree-drop",
			drop_check		: function (data) { return true; },
			drop_finish		: $.noop,
			drag_target		: ".jstree-draggable",
			drag_finish		: $.noop,
			drag_check		: function (data) { return { after : false, before : =
false, inside : true }; }
		},
		_fn : {
			dnd_prepare : function () {
				if(!r || !r.length) { return; }
				this.data.dnd.off =3D r.offset();
				if(this._get_settings().core.rtl) {
					this.data.dnd.off.right =3D this.data.dnd.off.left + r.width();
				}
				if(this.data.dnd.foreign) {
					var a =3D this._get_settings().dnd.drag_check.call(this, { "o" : o, =
"r" : r });
					this.data.dnd.after =3D a.after;
					this.data.dnd.before =3D a.before;
					this.data.dnd.inside =3D a.inside;
					this.data.dnd.prepared =3D true;
					return this.dnd_show();
				}
				this.prepare_move(o, r, "before");
				this.data.dnd.before =3D this.check_move();
				this.prepare_move(o, r, "after");
				this.data.dnd.after =3D this.check_move();
				if(this._is_loaded(r)) {
					this.prepare_move(o, r, "inside");
					this.data.dnd.inside =3D this.check_move();
				}
				else {
					this.data.dnd.inside =3D false;
				}
				this.data.dnd.prepared =3D true;
				return this.dnd_show();
			},
			dnd_show : function () {
				if(!this.data.dnd.prepared) { return; }
				var o =3D ["before","inside","after"],
					r =3D false,
					rtl =3D this._get_settings().core.rtl,
					pos;
				if(this.data.dnd.w < this.data.core.li_height/3) { o =3D =
["before","inside","after"]; }
				else if(this.data.dnd.w <=3D this.data.core.li_height*2/3) {
					o =3D this.data.dnd.w < this.data.core.li_height/2 ? =
["inside","before","after"] : ["inside","after","before"];
				}
				else { o =3D ["after","inside","before"]; }
				$.each(o, $.proxy(function (i, val) {=20
					if(this.data.dnd[val]) {
						$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
						r =3D val;
						return false;
					}
				}, this));
				if(r =3D=3D=3D false) { =
$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid"); }
			=09
				pos =3D rtl ? (this.data.dnd.off.right - 18) : =
(this.data.dnd.off.left + 10);
				switch(r) {
					case "before":
						m.css({ "left" : pos + "px", "top" : (this.data.dnd.off.top - 6) + =
"px" }).show();
						break;
					case "after":
						m.css({ "left" : pos + "px", "top" : (this.data.dnd.off.top + =
this.data.core.li_height - 7) + "px" }).show();
						break;
					case "inside":
						m.css({ "left" : pos + ( rtl ? -4 : 4) + "px", "top" : =
(this.data.dnd.off.top + this.data.core.li_height/2 - 5) + "px" =
}).show();
						break;
					default:
						m.hide();
						break;
				}
				return r;
			},
			dnd_open : function () {
				this.data.dnd.to2 =3D false;
				this.open_node(r, $.proxy(this.dnd_prepare,this), true);
			},
			dnd_finish : function (e) {
				if(this.data.dnd.foreign) {
					if(this.data.dnd.after || this.data.dnd.before || =
this.data.dnd.inside) {
						this._get_settings().dnd.drag_finish.call(this, { "o" : o, "r" : r =
});
					}
				}
				else {
					this.dnd_prepare();
					this.move_node(o, r, this.dnd_show(), =
e[this._get_settings().dnd.copy_modifier + "Key"]);
				}
				o =3D false;
				r =3D false;
				m.hide();
			},
			dnd_enter : function (obj) {
				var s =3D this._get_settings().dnd;
				this.data.dnd.prepared =3D false;
				r =3D this._get_node(obj);
				if(s.check_timeout) {=20
					// do the calculations after a minimal timeout (users tend to drag =
quickly to the desired location)
					if(this.data.dnd.to1) { clearTimeout(this.data.dnd.to1); }
					this.data.dnd.to1 =3D setTimeout($.proxy(this.dnd_prepare, this), =
s.check_timeout);=20
				}
				else {=20
					this.dnd_prepare();=20
				}
				if(s.open_timeout) {=20
					if(this.data.dnd.to2) { clearTimeout(this.data.dnd.to2); }
					if(r && r.length && r.hasClass("jstree-closed")) {=20
						// if the node is closed - open it, then recalculate
						this.data.dnd.to2 =3D setTimeout($.proxy(this.dnd_open, this), =
s.open_timeout);
					}
				}
				else {
					if(r && r.length && r.hasClass("jstree-closed")) {=20
						this.dnd_open();
					}
				}
			},
			start_drag : function (obj, e) {
				o =3D this._get_node(obj);
				if(this.data.ui && this.is_selected(o)) { o =3D this._get_node(null, =
true); }
				$.vakata.dnd.drag_start(e, { jstree : true, obj : o }, "<ins =
class=3D'jstree-icon'></ins>" + (o.length > 1 ? "Multiple selection" : =
this.get_text(o)) );
				if(this.data.themes) {=20
					m.attr("class", "jstree-" + this.data.themes.theme);=20
					$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + =
this.data.themes.theme);=20
				}
				var cnt =3D this.get_container();
				this.data.dnd.cof =3D cnt.children("ul").offset();
				this.data.dnd.cw =3D parseInt(cnt.width(),10);
				this.data.dnd.ch =3D parseInt(cnt.height(),10);
				this.data.dnd.active =3D true;
			}
		}
	});
	$(function() {
		var css_string =3D '' +=20
			'#vakata-dragged ins { display:block; text-decoration:none; =
width:16px; height:16px; margin:0 0 0 0; padding:0; position:absolute; =
top:4px; left:4px; } ' +=20
			'#vakata-dragged .jstree-ok { background:green; } ' +=20
			'#vakata-dragged .jstree-invalid { background:red; } ' +=20
			'#jstree-marker { padding:0; margin:0; line-height:12px; =
font-size:1px; overflow:hidden; height:12px; width:8px; =
position:absolute; top:-30px; z-index:10000; =
background-repeat:no-repeat; display:none; background-color:silver; } ';
		$.vakata.css.add_sheet({ str : css_string });
		m =3D $("<div>").attr({ id : "jstree-marker" =
}).hide().appendTo("body");
		$(document).bind("drag_start.vakata", function (e, data) {
			if(data.data.jstree) {=20
				m.show();=20
			}
		});
		$(document).bind("drag_stop.vakata", function (e, data) {
			if(data.data.jstree) { m.hide(); }
		});
	});
})(jQuery);
//*/

/*
 * jsTree checkbox plugin 1.0
 * Inserts checkboxes in front of every node
 * Depends on the ui plugin
 * DOES NOT WORK NICELY WITH MULTITREE DRAG'N'DROP
 */
(function ($) {
	$.jstree.plugin("checkbox", {
		__init : function () {
			this.select_node =3D this.deselect_node =3D this.deselect_all =3D =
$.noop;
			this.get_selected =3D this.get_checked;

			this.get_container()
				.bind("open_node.jstree create_node.jstree clean_node.jstree", =
$.proxy(function (e, data) {=20
						this._prepare_checkboxes(data.rslt.obj);
					}, this))
				.bind("loaded.jstree", $.proxy(function (e) {
						this._prepare_checkboxes();
					}, this))
				.delegate("a", "click.jstree", $.proxy(function (e) {
						if(this._get_node(e.target).hasClass("jstree-checked")) { =
this.uncheck_node(e.target); }
						else { this.check_node(e.target); }
						if(this.data.ui) { this.save_selected(); }
						if(this.data.cookies) { this.save_cookie("select_node"); }
						e.preventDefault();
					}, this));
		},
		__destroy : function () {
			this.get_container().find(".jstree-checkbox").remove();
		},
		_fn : {
			_prepare_checkboxes : function (obj) {
				obj =3D !obj || obj =3D=3D -1 ? this.get_container() : =
this._get_node(obj);
				var c, _this =3D this, t;
				obj.each(function () {
					t =3D $(this);
					c =3D t.is("li") && t.hasClass("jstree-checked") ? "jstree-checked" =
: "jstree-unchecked";
					t.find("a").not(":has(.jstree-checkbox)").prepend("<ins =
class=3D'jstree-checkbox'>&#160;</ins>").parent().not(".jstree-checked, =
.jstree-unchecked").addClass(c);
				});
				if(obj.is("li")) { this._repair_state(obj); }
				else { obj.find("> ul > li").each(function () { =
_this._repair_state(this); }); }
			},
			change_state : function (obj, state) {
				obj =3D this._get_node(obj);
				state =3D (state =3D=3D=3D false || state =3D=3D=3D true) ? state : =
obj.hasClass("jstree-checked");
				if(state) { obj.find("li").andSelf().removeClass("jstree-checked =
jstree-undetermined").addClass("jstree-unchecked"); }
				else {=20
					obj.find("li").andSelf().removeClass("jstree-unchecked =
jstree-undetermined").addClass("jstree-checked");=20
					if(this.data.ui) { this.data.ui.last_selected =3D obj; }
					this.data.checkbox.last_selected =3D obj;
				}
				obj.parentsUntil(".jstree", "li").each(function () {
					var $this =3D $(this);
					if(state) {
						if($this.children("ul").children(".jstree-checked, =
.jstree-undetermined").length) {
							$this.parentsUntil(".jstree", =
"li").andSelf().removeClass("jstree-checked =
jstree-unchecked").addClass("jstree-undetermined");
							return false;
						}
						else {
							$this.removeClass("jstree-checked =
jstree-undetermined").addClass("jstree-unchecked");
						}
					}
					else {
						if($this.children("ul").children(".jstree-unchecked, =
.jstree-undetermined").length) {
							$this.parentsUntil(".jstree", =
"li").andSelf().removeClass("jstree-checked =
jstree-unchecked").addClass("jstree-undetermined");
							return false;
						}
						else {
							$this.removeClass("jstree-unchecked =
jstree-undetermined").addClass("jstree-checked");
						}
					}
				});
				if(this.data.ui) { this.data.ui.selected =3D this.get_checked(); }
				this.__callback(obj);
			},
			check_node : function (obj) {
				this.change_state(obj, false);
			},
			uncheck_node : function (obj) {
				this.change_state(obj, true);
			},
			check_all : function () {
				var _this =3D this;
				this.get_container().children("ul").children("li").each(function () =
{
					_this.check_node(this, false);
				});
			},
			uncheck_all : function () {
				var _this =3D this;
				this.get_container().children("ul").children("li").each(function () =
{
					_this.change_state(this, true);
				});
			},

			is_checked : function(obj) {
				obj =3D this._get_node(obj);
				return obj.length ? obj.is(".jstree-checked") : false;
			},
			get_checked : function (obj) {
				obj =3D !obj || obj =3D=3D=3D -1 ? this.get_container() : =
this._get_node(obj);
				return obj.find("> ul > .jstree-checked, .jstree-undetermined > ul > =
.jstree-checked");
			},
			get_unchecked : function (obj) {=20
				obj =3D !obj || obj =3D=3D=3D -1 ? this.get_container() : =
this._get_node(obj);
				return obj.find("> ul > .jstree-unchecked, .jstree-undetermined > ul =
> .jstree-unchecked");
			},

			show_checkboxes : function () { =
this.get_container().children("ul").removeClass("jstree-no-checkboxes"); =
},
			hide_checkboxes : function () { =
this.get_container().children("ul").addClass("jstree-no-checkboxes"); },

			_repair_state : function (obj) {
				obj =3D this._get_node(obj);
				if(!obj.length) { return; }
				var a =3D obj.find("> ul > .jstree-checked").length,
					b =3D obj.find("> ul > .jstree-undetermined").length,
					c =3D obj.find("> ul > li").length;

				if(c =3D=3D=3D 0) { if(obj.hasClass("jstree-undetermined")) { =
this.check_node(obj); } }
				else if(a =3D=3D=3D 0 && b =3D=3D=3D 0) { this.uncheck_node(obj); }
				else if(a =3D=3D=3D c) { this.check_node(obj); }
				else {=20
					obj.parentsUntil(".jstree","li").removeClass("jstree-checked =
jstree-unchecked").addClass("jstree-undetermined");
				}
			},
			reselect : function () {
				if(this.data.ui) {=20
					var _this =3D this,
						s =3D this.data.ui.to_select;
					s =3D $.map($.makeArray(s), function (n) { return "#" + =
n.toString().replace(/^#/,"").replace('\\/','/').replace('/','\\/'); });
					this.deselect_all();
					$.each(s, function (i, val) { _this.check_node(val); });
					this.__callback();
				}
			}
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree XML 1.0
 * The XML data store. Datastores are build by overriding the =
`load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.vakata.xslt =3D function (xml, xsl, callback) {
		var rs =3D "", xm, xs, processor, support;
		if(document.recalc) {
			xm =3D document.createElement('xml');
			xs =3D document.createElement('xml');
			xm.innerHTML =3D xml;
			xs.innerHTML =3D xsl;
			$("body").append(xm).append(xs);
			setTimeout( (function (xm, xs, callback) {
				return function () {
					callback.call(null, xm.transformNode(xs.XMLDocument));
					setTimeout( (function (xm, xs) { return function () { =
jQuery("body").remove(xm).remove(xs); }; })(xm, xs), 200);
				};
			}) (xm, xs, callback), 100);
			return true;
		}
		if(typeof window.DOMParser !=3D=3D "undefined" && typeof =
window.XMLHttpRequest !=3D=3D "undefined" && typeof window.XSLTProcessor =
!=3D=3D "undefined") {
			processor =3D new XSLTProcessor();
			support =3D $.isFunction(processor.transformDocument) ? (typeof =
window.XMLSerializer !=3D=3D "undefined") : true;
			if(!support) { return false; }
			xml =3D new DOMParser().parseFromString(xml, "text/xml");
			xsl =3D new DOMParser().parseFromString(xsl, "text/xml");
			if($.isFunction(processor.transformDocument)) {
				rs =3D document.implementation.createDocument("", "", null);
				processor.transformDocument(xml, xsl, rs, null);
				callback.call(null, XMLSerializer().serializeToString(rs));
				return true;
			}
			else {
				processor.importStylesheet(xsl);
				rs =3D processor.transformToFragment(xml, document);
				callback.call(null, $("<div>").append(rs).html());
				return true;
			}
		}
		return false;
	};
	var xsl =3D {
		'nest' : '<?xml version=3D"1.0" encoding=3D"utf-8" ?>' +=20
			'<xsl:stylesheet version=3D"1.0" =
xmlns:xsl=3D"http://www.w3.org/1999/XSL/Transform" >' +=20
			'<xsl:output method=3D"html" encoding=3D"utf-8" =
omit-xml-declaration=3D"yes" standalone=3D"no" indent=3D"no" =
media-type=3D"text/html" />' +=20
			'<xsl:template match=3D"/">' +=20
			'	<xsl:call-template name=3D"nodes">' +=20
			'		<xsl:with-param name=3D"node" select=3D"/root" />' +=20
			'	</xsl:call-template>' +=20
			'</xsl:template>' +=20
			'<xsl:template name=3D"nodes">' +=20
			'	<xsl:param name=3D"node" />' +=20
			'	<ul>' +=20
			'	<xsl:for-each select=3D"$node/item">' +=20
			'		<xsl:variable name=3D"children" select=3D"count(./item) &gt; 0" =
/>' +=20
			'		<li>' +=20
			'			<xsl:attribute name=3D"class">' +=20
			'				<xsl:if test=3D"position() =3D last()">jstree-last </xsl:if>' +=20
			'				<xsl:choose>' +=20
			'					<xsl:when test=3D"@state =3D \'open\'">jstree-open </xsl:when>' =
+=20
			'					<xsl:when test=3D"$children or @hasChildren or @state =3D =
\'closed\'">jstree-closed </xsl:when>' +=20
			'					<xsl:otherwise>jstree-leaf </xsl:otherwise>' +=20
			'				</xsl:choose>' +=20
			'				<xsl:value-of select=3D"@class" />' +=20
			'			</xsl:attribute>' +=20
			'			<xsl:for-each select=3D"@*">' +=20
			'				<xsl:if test=3D"name() !=3D \'class\' and name() !=3D \'state\' =
and name() !=3D \'hasChildren\'">' +=20
			'					<xsl:attribute name=3D"{name()}"><xsl:value-of select=3D"." =
/></xsl:attribute>' +=20
			'				</xsl:if>' +=20
			'			</xsl:for-each>' +=20
			'	<ins class=3D"jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' +=20
			'			<xsl:for-each select=3D"content/name">' +=20
			'				<a>' +=20
			'				<xsl:attribute name=3D"href">' +=20
			'					<xsl:choose>' +=20
			'					<xsl:when test=3D"@href"><xsl:value-of select=3D"@href" =
/></xsl:when>' +=20
			'					<xsl:otherwise>#</xsl:otherwise>' +=20
			'					</xsl:choose>' +=20
			'				</xsl:attribute>' +=20
			'				<xsl:attribute name=3D"class"><xsl:value-of select=3D"@lang" /> =
<xsl:value-of select=3D"@class" /></xsl:attribute>' +=20
			'				<xsl:attribute name=3D"style"><xsl:value-of select=3D"@style" =
/></xsl:attribute>' +=20
			'				<xsl:for-each select=3D"@*">' +=20
			'					<xsl:if test=3D"name() !=3D \'style\' and name() !=3D \'class\' =
and name() !=3D \'href\'">' +=20
			'						<xsl:attribute name=3D"{name()}"><xsl:value-of select=3D"." =
/></xsl:attribute>' +=20
			'					</xsl:if>' +=20
			'				</xsl:for-each>' +=20
			'					<ins>' +=20
			'						<xsl:attribute name=3D"class">jstree-icon ' +=20
			'							<xsl:if test=3D"string-length(attribute::icon) > 0 and =
not(contains(@icon,\'/\'))"><xsl:value-of select=3D"@icon" /></xsl:if>' =
+=20
			'						</xsl:attribute>' +=20
			'						<xsl:if test=3D"string-length(attribute::icon) > 0 and =
contains(@icon,\'/\')"><xsl:attribute =
name=3D"style">background:url(<xsl:value-of select=3D"@icon" />) center =
center no-repeat;</xsl:attribute></xsl:if>' +=20
			'						<xsl:text>&#xa0;</xsl:text>' +=20
			'					</ins>' +=20
			'					<xsl:value-of select=3D"current()" />' +=20
			'				</a>' +=20
			'			</xsl:for-each>' +=20
			'			<xsl:if test=3D"$children or @hasChildren"><xsl:call-template =
name=3D"nodes"><xsl:with-param name=3D"node" select=3D"current()" =
/></xsl:call-template></xsl:if>' +=20
			'		</li>' +=20
			'	</xsl:for-each>' +=20
			'	</ul>' +=20
			'</xsl:template>' +=20
			'</xsl:stylesheet>',

		'flat' : '<?xml version=3D"1.0" encoding=3D"utf-8" ?>' +=20
			'<xsl:stylesheet version=3D"1.0" =
xmlns:xsl=3D"http://www.w3.org/1999/XSL/Transform" >' +=20
			'<xsl:output method=3D"html" encoding=3D"utf-8" =
omit-xml-declaration=3D"yes" standalone=3D"no" indent=3D"no" =
media-type=3D"text/xml" />' +=20
			'<xsl:template match=3D"/">' +=20
			'	<ul>' +=20
			'	<xsl:for-each select=3D"//item[not(@parent_id) or @parent_id=3D0 or =
not(@parent_id =3D //item/@id)]">' + /* the last `or` may be removed */
			'		<xsl:call-template name=3D"nodes">' +=20
			'			<xsl:with-param name=3D"node" select=3D"." />' +=20
			'			<xsl:with-param name=3D"is_last" select=3D"number(position() =3D =
last())" />' +=20
			'		</xsl:call-template>' +=20
			'	</xsl:for-each>' +=20
			'	</ul>' +=20
			'</xsl:template>' +=20
			'<xsl:template name=3D"nodes">' +=20
			'	<xsl:param name=3D"node" />' +=20
			'	<xsl:param name=3D"is_last" />' +=20
			'	<xsl:variable name=3D"children" =
select=3D"count(//item[@parent_id=3D$node/attribute::id]) &gt; 0" />' +=20
			'	<li>' +=20
			'	<xsl:attribute name=3D"class">' +=20
			'		<xsl:if test=3D"$is_last =3D true()">jstree-last </xsl:if>' +=20
			'		<xsl:choose>' +=20
			'			<xsl:when test=3D"@state =3D \'open\'">jstree-open </xsl:when>' + =

			'			<xsl:when test=3D"$children or @hasChildren or @state =3D =
\'closed\'">jstree-closed </xsl:when>' +=20
			'			<xsl:otherwise>jstree-leaf </xsl:otherwise>' +=20
			'		</xsl:choose>' +=20
			'		<xsl:value-of select=3D"@class" />' +=20
			'	</xsl:attribute>' +=20
			'	<xsl:for-each select=3D"@*">' +=20
			'		<xsl:if test=3D"name() !=3D \'parent_id\' and name() !=3D =
\'hasChildren\' and name() !=3D \'class\' and name() !=3D \'state\'">' + =

			'		<xsl:attribute name=3D"{name()}"><xsl:value-of select=3D"." =
/></xsl:attribute>' +=20
			'		</xsl:if>' +=20
			'	</xsl:for-each>' +=20
			'	<ins class=3D"jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' +=20
			'	<xsl:for-each select=3D"content/name">' +=20
			'		<a>' +=20
			'		<xsl:attribute name=3D"href">' +=20
			'			<xsl:choose>' +=20
			'			<xsl:when test=3D"@href"><xsl:value-of select=3D"@href" =
/></xsl:when>' +=20
			'			<xsl:otherwise>#</xsl:otherwise>' +=20
			'			</xsl:choose>' +=20
			'		</xsl:attribute>' +=20
			'		<xsl:attribute name=3D"class"><xsl:value-of select=3D"@lang" /> =
<xsl:value-of select=3D"@class" /></xsl:attribute>' +=20
			'		<xsl:attribute name=3D"style"><xsl:value-of select=3D"@style" =
/></xsl:attribute>' +=20
			'		<xsl:for-each select=3D"@*">' +=20
			'			<xsl:if test=3D"name() !=3D \'style\' and name() !=3D \'class\' =
and name() !=3D \'href\'">' +=20
			'				<xsl:attribute name=3D"{name()}"><xsl:value-of select=3D"." =
/></xsl:attribute>' +=20
			'			</xsl:if>' +=20
			'		</xsl:for-each>' +=20
			'			<ins>' +=20
			'				<xsl:attribute name=3D"class">jstree-icon ' +=20
			'					<xsl:if test=3D"string-length(attribute::icon) > 0 and =
not(contains(@icon,\'/\'))"><xsl:value-of select=3D"@icon" /></xsl:if>' =
+=20
			'				</xsl:attribute>' +=20
			'				<xsl:if test=3D"string-length(attribute::icon) > 0 and =
contains(@icon,\'/\')"><xsl:attribute =
name=3D"style">background:url(<xsl:value-of select=3D"@icon" />) center =
center no-repeat;</xsl:attribute></xsl:if>' +=20
			'				<xsl:text>&#xa0;</xsl:text>' +=20
			'			</ins>' +=20
			'			<xsl:value-of select=3D"current()" />' +=20
			'		</a>' +=20
			'	</xsl:for-each>' +=20
			'	<xsl:if test=3D"$children">' +=20
			'		<ul>' +=20
			'		<xsl:for-each =
select=3D"//item[@parent_id=3D$node/attribute::id]">' +=20
			'			<xsl:call-template name=3D"nodes">' +=20
			'				<xsl:with-param name=3D"node" select=3D"." />' +=20
			'				<xsl:with-param name=3D"is_last" select=3D"number(position() =3D =
last())" />' +=20
			'			</xsl:call-template>' +=20
			'		</xsl:for-each>' +=20
			'		</ul>' +=20
			'	</xsl:if>' +=20
			'	</li>' +=20
			'</xsl:template>' +=20
			'</xsl:stylesheet>'
	};
	$.jstree.plugin("xml_data", {
		defaults : {=20
			data : false,
			ajax : false,
			xsl : "flat",
			clean_node : false,
			correct_state : true
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this =3D this; =
this.load_node_xml(obj, function () { _this.__callback({ "obj" : obj }); =
s_call.call(this); }, e_call); },
			_is_loaded : function (obj) {=20
				var s =3D this._get_settings().xml_data;
				obj =3D this._get_node(obj);
				return obj =3D=3D -1 || !obj || !s.ajax || obj.is(".jstree-open, =
.jstree-leaf") || obj.children("ul").children("li").size() > 0;
			},
			load_node_xml : function (obj, s_call, e_call) {
				var s =3D this.get_settings().xml_data,
					error_func =3D function () {},
					success_func =3D function () {};

				obj =3D this._get_node(obj);
				if(obj && obj !=3D=3D -1) {
					if(obj.data("jstree-is-loading")) { return; }
					else { obj.data("jstree-is-loading",true); }
				}
				switch(!0) {
					case (!s.data && !s.ajax): throw "Neither data nor ajax settings =
supplied.";
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj =
=3D=3D=3D -1)):
						if(!obj || obj =3D=3D -1) {
							this.parse_xml(s.data, $.proxy(function (d) {
								if(d) {
									d =3D d.replace(/ ?xmlns=3D"[^"]*"/ig, "");
									if(d.length > 10) {
										d =3D $(d);
										=
this.get_container().children("ul").empty().append(d.children());
										if(s.clean_node) { this.clean_node(obj); }
										if(s_call) { s_call.call(this); }
									}
								}
								else {=20
									if(s.correct_state) {=20
										this.get_container().children("ul").empty();=20
										if(s_call) { s_call.call(this); }
									}
								}
							}, this));
						}
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj =
!=3D=3D -1):
						error_func =3D function (x, t, e) {
							var ef =3D this.get_settings().xml_data.ajax.error;=20
							if(ef) { ef.call(this, x, t, e); }
							if(obj !=3D=3D -1 && obj.length) {
								obj.children(".jstree-loading").removeClass("jstree-loading");
								obj.data("jstree-is-loading",false);
								if(t =3D=3D=3D "success" && s.correct_state) { =
obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); }
							}
							else {
								if(t =3D=3D=3D "success" && s.correct_state) { =
this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func =3D function (d, t, x) {
							d =3D x.responseText;
							var sf =3D this.get_settings().xml_data.ajax.success;=20
							if(sf) { d =3D sf.call(this,d,t,x) || d; }
							if(d =3D=3D "") {
								return error_func.call(this, x, t, "");
							}
							this.parse_xml(d, $.proxy(function (d) {
								if(d) {
									d =3D d.replace(/ ?xmlns=3D"[^"]*"/ig, "");
									if(d.length > 10) {
										d =3D $(d);
										if(obj =3D=3D=3D -1 || !obj) { =
this.get_container().children("ul").empty().append(d.children()); }
										else { =
obj.children(".jstree-loading").removeClass("jstree-loading"); =
obj.append(d); obj.data("jstree-is-loading",false); }
										if(s.clean_node) { this.clean_node(obj); }
										if(s_call) { s_call.call(this); }
									}
									else {
										if(obj && obj !=3D=3D -1) {=20
											=
obj.children(".jstree-loading").removeClass("jstree-loading");
											obj.data("jstree-is-loading",false);
											if(s.correct_state) {=20
												obj.removeClass("jstree-open =
jstree-closed").addClass("jstree-leaf");=20
												if(s_call) { s_call.call(this); }=20
											}
										}
										else {
											if(s.correct_state) {=20
												this.get_container().children("ul").empty();
												if(s_call) { s_call.call(this); }=20
											}
										}
									}
								}
							}, this));
						};
						s.ajax.context =3D this;
						s.ajax.error =3D error_func;
						s.ajax.success =3D success_func;
						if(!s.ajax.dataType) { s.ajax.dataType =3D "xml"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url =3D =
s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data =3D =
s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			},
			parse_xml : function (xml, callback) {
				var s =3D this._get_settings().xml_data;
				$.vakata.xslt(xml, xsl[s.xsl], callback);
			},
			get_xml : function (tp, obj, li_attr, a_attr, is_callback) {
				var result =3D "",=20
					s =3D this._get_settings(),=20
					_this =3D this,
					tmp1, tmp2, li, a, lang;
				if(!tp) { tp =3D "flat"; }
				if(!is_callback) { is_callback =3D 0; }
				obj =3D this._get_node(obj);
				if(!obj || obj =3D=3D=3D -1) { obj =3D this.get_container().find("> =
ul > li"); }
				li_attr =3D $.isArray(li_attr) ? li_attr : [ "id", "class" ];
				if(!is_callback && this.data.types && $.inArray(s.types.type_attr, =
li_attr) =3D=3D=3D -1) { li_attr.push(s.types.type_attr); }

				a_attr =3D $.isArray(a_attr) ? a_attr : [ ];

				if(!is_callback) { result +=3D "<root>"; }
				obj.each(function () {
					result +=3D "<item";
					li =3D $(this);
					$.each(li_attr, function (i, v) { result +=3D " " + v + "=3D\"" + =
(li.attr(v) || "").replace(/jstree[^ ]*|$/ig,'').replace(/^\s+$/ig,"") + =
"\""; });
					if(li.hasClass("jstree-open")) { result +=3D " state=3D\"open\""; }
					if(li.hasClass("jstree-closed")) { result +=3D " =
state=3D\"closed\""; }
					if(tp =3D=3D=3D "flat") { result +=3D " parent_id=3D\"" + =
is_callback + "\""; }
					result +=3D ">";
					result +=3D "<content>";
					a =3D li.children("a");
					a.each(function () {
						tmp1 =3D $(this);
						lang =3D false;
						result +=3D "<name";
						if($.inArray("languages", s.plugins) !=3D=3D -1) {
							$.each(s.languages, function (k, z) {
								if(tmp1.hasClass(z)) { result +=3D " lang=3D\"" + z + "\""; lang =
=3D z; return false; }
							});
						}
						if(a_attr.length) {=20
							$.each(a_attr, function (k, z) {
								result +=3D " " + z + "=3D\"" + (tmp1.attr(z) || =
"").replace(/jstree[^ ]*|$/ig,'') + "\"";
							});
						}
						if(tmp1.children("ins").get(0).className.replace(/jstree[^ =
]*|$/ig,'').replace(/^\s+$/ig,"").length) {
							result +=3D ' icon=3D"' + =
tmp1.children("ins").get(0).className.replace(/jstree[^ =
]*|$/ig,'').replace(/^\s+$/ig,"") + '"';
						}
						if(tmp1.children("ins").get(0).style.backgroundImage.length) {
							result +=3D ' icon=3D"' + =
tmp1.children("ins").get(0).style.backgroundImage.replace("url(","").repl=
ace(")","") + '"';
						}
						result +=3D ">";
						result +=3D "<![CDATA[" + _this.get_text(tmp1, lang) + "]]>";
						result +=3D "</name>";
					});
					result +=3D "</content>";
					tmp2 =3D li[0].id;
					li =3D li.find("> ul > li");
					if(li.length) { tmp2 =3D _this.get_xml(tp, li, li_attr, a_attr, =
tmp2); }
					else { tmp2 =3D ""; }
					if(tp =3D=3D "nest") { result +=3D tmp2; }
					result +=3D "</item>";
					if(tp =3D=3D "flat") { result +=3D tmp2; }
				});
				if(!is_callback) { result +=3D "</root>"; }
				return result;
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree search plugin 1.0
 * Enables both sync and async search on the tree
 * DOES NOT WORK WITH JSON PROGRESSIVE RENDER
 */
(function ($) {
	$.expr[':'].jstree_contains =3D function(a,i,m){
		return (a.textContent || a.innerText || =
"").toLowerCase().indexOf(m[3].toLowerCase())>=3D0;
	};
	$.jstree.plugin("search", {
		__init : function () {
			this.data.search.str =3D "";
			this.data.search.result =3D $();
		},
		defaults : {
			ajax : false, // OR ajax object
			case_insensitive : false
		},
		_fn : {
			search : function (str, skip_async) {
				if(str =3D=3D=3D "") { return; }
				var s =3D this.get_settings().search,=20
					t =3D this,
					error_func =3D function () { },
					success_func =3D function () { };
				this.data.search.str =3D str;

				if(!skip_async && s.ajax !=3D=3D false && =
this.get_container().find(".jstree-closed:eq(0)").length > 0) {
					this.search.supress_callback =3D true;
					error_func =3D function () { };
					success_func =3D function (d, t, x) {
						var sf =3D this.get_settings().search.ajax.success;=20
						if(sf) { d =3D sf.call(this,d,t,x) || d; }
						this.data.search.to_open =3D d;
						this._search_open();
					};
					s.ajax.context =3D this;
					s.ajax.error =3D error_func;
					s.ajax.success =3D success_func;
					if($.isFunction(s.ajax.url)) { s.ajax.url =3D s.ajax.url.call(this, =
str); }
					if($.isFunction(s.ajax.data)) { s.ajax.data =3D =
s.ajax.data.call(this, str); }
					if(!s.ajax.data) { s.ajax.data =3D { "search_string" : str }; }
					if(!s.ajax.dataType || /^json/.exec(s.ajax.dataType)) { =
s.ajax.dataType =3D "json"; }
					$.ajax(s.ajax);
					return;
				}
				if(this.data.search.result.length) { this.clear_search(); }
				this.data.search.result =3D this.get_container().find("a" + =
(this.data.languages ? "." + this.get_lang() : "" ) + ":" + =
(s.case_insensitive ? "jstree_contains" : "contains") + "(" + =
this.data.search.str + ")");
				=
this.data.search.result.addClass("jstree-search").parents(".jstree-closed=
").each(function () {
					t.open_node(this, false, true);
				});
				this.__callback({ nodes : this.data.search.result, str : str });
			},
			clear_search : function (str) {
				this.data.search.result.removeClass("jstree-search");
				this.__callback(this.data.search.result);
				this.data.search.result =3D $();
			},
			_search_open : function (is_callback) {
				var _this =3D this,
					done =3D true,
					current =3D [],
					remaining =3D [];
				if(this.data.search.to_open.length) {
					$.each(this.data.search.to_open, function (i, val) {
						if(val =3D=3D "#") { return true; }
						if($(val).length && $(val).is(".jstree-closed")) { =
current.push(val); }
						else { remaining.push(val); }
					});
					if(current.length) {
						this.data.search.to_open =3D remaining;
						$.each(current, function (i, val) {=20
							_this.open_node(val, function () { _this._search_open(true); });=20
						});
						done =3D false;
					}
				}
				if(done) { this.search(this.data.search.str, true); }
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree contextmenu plugin 1.0
 */
(function ($) {
	$.vakata.context =3D {
		cnt		: $("<div id=3D'vakata-contextmenu'>"),
		vis		: false,
		tgt		: false,
		par		: false,
		func	: false,
		data	: false,
		show	: function (s, t, x, y, d, p) {
			var html =3D $.vakata.context.parse(s), h, w;
			if(!html) { return; }
			$.vakata.context.vis =3D true;
			$.vakata.context.tgt =3D t;
			$.vakata.context.par =3D p || t || null;
			$.vakata.context.data =3D d || null;
			$.vakata.context.cnt
				.html(html)
				.css({ "visibility" : "hidden", "display" : "block", "left" : 0, =
"top" : 0 });
			h =3D $.vakata.context.cnt.height();
			w =3D $.vakata.context.cnt.width();
			if(x + w > $(document).width()) {=20
				x =3D $(document).width() - (w + 5);=20
				$.vakata.context.cnt.find("li > ul").addClass("right");=20
			}
			if(y + h > $(document).height()) {=20
				y =3D y - (h + t[0].offsetHeight);=20
				$.vakata.context.cnt.find("li > ul").addClass("bottom");=20
			}

			$.vakata.context.cnt
				.css({ "left" : x, "top" : y })
				.find("li:has(ul)")
					.bind("mouseenter", function (e) {=20
						var w =3D $(document).width(),
							h =3D $(document).height(),
							ul =3D $(this).children("ul").show();=20
						if(w !=3D=3D $(document).width()) { ul.toggleClass("right"); }
						if(h !=3D=3D $(document).height()) { ul.toggleClass("bottom"); }
					})
					.bind("mouseleave", function (e) {=20
						$(this).children("ul").hide();=20
					})
					.end()
				.css({ "visibility" : "visible" })
				.show();
			$(document).triggerHandler("context_show.vakata");
		},
		hide	: function () {
			$.vakata.context.vis =3D false;
			$.vakata.context.cnt.attr("class","").hide();
			$(document).triggerHandler("context_hide.vakata");
		},
		parse	: function (s, is_callback) {
			if(!s) { return false; }
			var str =3D "",
				tmp =3D false,
				was_sep =3D true;
			if(!is_callback) { $.vakata.context.func =3D {}; }
			str +=3D "<ul>";
			$.each(s, function (i, val) {
				if(!val) { return true; }
				$.vakata.context.func[i] =3D val.action;
				if(!was_sep && val.separator_before) {
					str +=3D "<li class=3D'vakata-separator =
vakata-separator-before'></li>";
				}
				was_sep =3D false;
				str +=3D "<li class=3D'" + (val._class || "") + (val._disabled ? " =
jstree-contextmenu-disabled " : "") + "'><ins ";
				if(val.icon && val.icon.indexOf("/") =3D=3D=3D -1) { str +=3D " =
class=3D'" + val.icon + "' "; }
				if(val.icon && val.icon.indexOf("/") !=3D=3D -1) { str +=3D " =
style=3D'background:url(" + val.icon + ") center center no-repeat;' "; }
				str +=3D ">&#160;</ins><a href=3D'#' rel=3D'" + i + "'>";
				if(val.submenu) {
					str +=3D "<span style=3D'float:right;'>&raquo;</span>";
				}
				str +=3D val.label + "</a>";
				if(val.submenu) {
					tmp =3D $.vakata.context.parse(val.submenu, true);
					if(tmp) { str +=3D tmp; }
				}
				str +=3D "</li>";
				if(val.separator_after) {
					str +=3D "<li class=3D'vakata-separator =
vakata-separator-after'></li>";
					was_sep =3D true;
				}
			});
			str =3D str.replace(/<li class\=3D'vakata-separator =
vakata-separator-after'\><\/li\>$/,"");
			str +=3D "</ul>";
			return str.length > 10 ? str : false;
		},
		exec	: function (i) {
			if($.isFunction($.vakata.context.func[i])) {
				$.vakata.context.func[i].call($.vakata.context.data, =
$.vakata.context.par);
				return true;
			}
			else { return false; }
		}
	};
	$(function () {
		var css_string =3D '' +=20
			'#vakata-contextmenu { display:none; position:absolute; margin:0; =
padding:0; min-width:180px; background:#ebebeb; border:1px solid silver; =
z-index:10000; *width:180px; } ' +=20
			'#vakata-contextmenu ul { min-width:180px; *width:180px; } ' +=20
			'#vakata-contextmenu ul, #vakata-contextmenu li { margin:0; =
padding:0; list-style-type:none; display:block; } ' +=20
			'#vakata-contextmenu li { line-height:20px; min-height:20px; =
position:relative; padding:0px; } ' +=20
			'#vakata-contextmenu li a { padding:1px 6px; line-height:17px; =
display:block; text-decoration:none; margin:1px 1px 0 1px; } ' +=20
			'#vakata-contextmenu li ins { float:left; width:16px; height:16px; =
text-decoration:none; margin-right:2px; } ' +=20
			'#vakata-contextmenu li a:hover, #vakata-contextmenu li.vakata-hover =
> a { background:gray; color:white; } ' +=20
			'#vakata-contextmenu li ul { display:none; position:absolute; =
top:-2px; left:100%; background:#ebebeb; border:1px solid gray; } ' +=20
			'#vakata-contextmenu .right { right:100%; left:auto; } ' +=20
			'#vakata-contextmenu .bottom { bottom:-1px; top:auto; } ' +=20
			'#vakata-contextmenu li.vakata-separator { min-height:0; height:1px; =
line-height:1px; font-size:1px; overflow:hidden; margin:0 2px; =
background:silver; /* border-top:1px solid #fefefe; */ padding:0; } ';
		$.vakata.css.add_sheet({ str : css_string });
		$.vakata.context.cnt
			.delegate("a","click", function (e) { e.preventDefault(); })
			.delegate("a","mouseup", function (e) {
				if(!$(this).parent().hasClass("jstree-contextmenu-disabled") && =
$.vakata.context.exec($(this).attr("rel"))) {
					$.vakata.context.hide();
				}
				else { $(this).blur(); }
			})
			.delegate("a","mouseover", function () {
				=
$.vakata.context.cnt.find(".vakata-hover").removeClass("vakata-hover");
			})
			.appendTo("body");
		$(document).bind("mousedown", function (e) { if($.vakata.context.vis =
&& !$.contains($.vakata.context.cnt[0], e.target)) { =
$.vakata.context.hide(); } });
		if(typeof $.hotkeys !=3D=3D "undefined") {
			$(document)
				.bind("keydown", "up", function (e) {=20
					if($.vakata.context.vis) {=20
						var o =3D =
$.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").=
removeClass("vakata-hover").prevAll("li:not(.vakata-separator)").first();=

						if(!o.length) { o =3D =
$.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-s=
eparator)").last(); }
						o.addClass("vakata-hover");
						e.stopImmediatePropagation();=20
						e.preventDefault();
					}=20
				})
				.bind("keydown", "down", function (e) {=20
					if($.vakata.context.vis) {=20
						var o =3D =
$.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").=
removeClass("vakata-hover").nextAll("li:not(.vakata-separator)").first();=

						if(!o.length) { o =3D =
$.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-s=
eparator)").first(); }
						o.addClass("vakata-hover");
						e.stopImmediatePropagation();=20
						e.preventDefault();
					}=20
				})
				.bind("keydown", "right", function (e) {=20
					if($.vakata.context.vis) {=20
						=
$.vakata.context.cnt.find(".vakata-hover").children("ul").show().children=
("li:not(.vakata-separator)").removeClass("vakata-hover").first().addClas=
s("vakata-hover");
						e.stopImmediatePropagation();=20
						e.preventDefault();
					}=20
				})
				.bind("keydown", "left", function (e) {=20
					if($.vakata.context.vis) {=20
						=
$.vakata.context.cnt.find(".vakata-hover").children("ul").hide().children=
(".vakata-separator").removeClass("vakata-hover");
						e.stopImmediatePropagation();=20
						e.preventDefault();
					}=20
				})
				.bind("keydown", "esc", function (e) {=20
					$.vakata.context.hide();=20
					e.preventDefault();
				})
				.bind("keydown", "space", function (e) {=20
					=
$.vakata.context.cnt.find(".vakata-hover").last().children("a").click();
					e.preventDefault();
				});
		}
	});

	$.jstree.plugin("contextmenu", {
		__init : function () {
			this.get_container()
				.delegate("a", "contextmenu.jstree", $.proxy(function (e) {
						e.preventDefault();
						this.show_contextmenu(e.currentTarget, e.pageX, e.pageY);
					}, this))
				.bind("destroy.jstree", $.proxy(function () {
						if(this.data.contextmenu) {
							$.vakata.context.hide();
						}
					}, this));
			$(document).bind("context_hide.vakata", $.proxy(function () { =
this.data.contextmenu =3D false; }, this));
		},
		defaults : {=20
			select_node : false, // requires UI plugin
			show_at_node : true,
			items : { // Could be a function that should return an object like =
this one
				"create" : {
					"separator_before"	: false,
					"separator_after"	: true,
					"label"				: "Create",
					"action"			: function (obj) { this.create(obj); }
				},
				"rename" : {
					"separator_before"	: false,
					"separator_after"	: false,
					"label"				: "Rename",
					"action"			: function (obj) { this.rename(obj); }
				},
				"remove" : {
					"separator_before"	: false,
					"icon"				: false,
					"separator_after"	: false,
					"label"				: "Delete",
					"action"			: function (obj) { this.remove(obj); }
				},
				"ccp" : {
					"separator_before"	: true,
					"icon"				: false,
					"separator_after"	: false,
					"label"				: "Edit",
					"action"			: false,
					"submenu" : {=20
						"cut" : {
							"separator_before"	: false,
							"separator_after"	: false,
							"label"				: "Cut",
							"action"			: function (obj) { this.cut(obj); }
						},
						"copy" : {
							"separator_before"	: false,
							"icon"				: false,
							"separator_after"	: false,
							"label"				: "Copy",
							"action"			: function (obj) { this.copy(obj); }
						},
						"paste" : {
							"separator_before"	: false,
							"icon"				: false,
							"separator_after"	: false,
							"label"				: "Paste",
							"action"			: function (obj) { this.paste(obj); }
						}
					}
				}
			}
		},
		_fn : {
			show_contextmenu : function (obj, x, y) {
				obj =3D this._get_node(obj);
				var s =3D this.get_settings().contextmenu,
					a =3D obj.children("a:visible:eq(0)"),
					o =3D false;
				if(s.select_node && this.data.ui && !this.is_selected(obj)) {
					this.deselect_all();
					this.select_node(obj, true);
				}
				if(s.show_at_node || typeof x =3D=3D=3D "undefined" || typeof y =
=3D=3D=3D "undefined") {
					o =3D a.offset();
					x =3D o.left;
					y =3D o.top + this.data.core.li_height;
				}
				if($.isFunction(s.items)) { s.items =3D s.items.call(this, obj); }
				this.data.contextmenu =3D true;
				$.vakata.context.show(s.items, a, x, y, this, obj);
				if(this.data.themes) { $.vakata.context.cnt.attr("class", "jstree-" =
+ this.data.themes.theme + "-context"); }
			}
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree types plugin 1.0
 * Adds support types of nodes
 * You can set an attribute on each li node, that represents its type.
 * According to the type setting the node may get custom icon/validation =
rules
 */
(function ($) {
	$.jstree.plugin("types", {
		__init : function () {
			var s =3D this._get_settings().types;
			this.data.types.attach_to =3D [];
			this.get_container()
				.bind("init.jstree", $.proxy(function () {=20
						var types =3D s.types,=20
							attr  =3D s.type_attr,=20
							icons_css =3D "",=20
							_this =3D this;

						$.each(types, function (i, tp) {
							$.each(tp, function (k, v) {=20
								if(!/^(max_depth|max_children|icon|valid_children)$/.test(k)) { =
_this.data.types.attach_to.push(k); }
							});
							if(!tp.icon) { return true; }
							if( tp.icon.image || tp.icon.position) {
								if(i =3D=3D "default")	{ icons_css +=3D '.jstree-' + =
_this.get_index() + ' a > .jstree-icon { '; }
								else				{ icons_css +=3D '.jstree-' + _this.get_index() + ' li[' =
+ attr + '=3D' + i + '] > a > .jstree-icon { '; }
								if(tp.icon.image)	{ icons_css +=3D ' background-image:url(' + =
tp.icon.image + '); '; }
								if(tp.icon.position){ icons_css +=3D ' background-position:' + =
tp.icon.position + '; '; }
								else				{ icons_css +=3D ' background-position:0 0; '; }
								icons_css +=3D '} ';
							}
						});
						if(icons_css !=3D "") { $.vakata.css.add_sheet({ 'str' : icons_css =
}); }
					}, this))
				.bind("before.jstree", $.proxy(function (e, data) {=20
						if($.inArray(data.func, this.data.types.attach_to) !=3D=3D -1) {
							var s =3D this._get_settings().types.types,
								t =3D this._get_type(data.args[0]);
							if(
								(=20
									(s[t] && typeof s[t][data.func] !=3D=3D "undefined") ||=20
									(s["default"] && typeof s["default"][data.func] !=3D=3D =
"undefined")
								) && !this._check(data.func, data.args[0])
							) {
								e.stopImmediatePropagation();
								return false;
							}
						}
					}, this));
		},
		defaults : {
			// defines maximum number of root nodes (-1 means unlimited, -2 means =
disable max_children checking)
			max_children		: -1,
			// defines the maximum depth of the tree (-1 means unlimited, -2 =
means disable max_depth checking)
			max_depth			: -1,
			// defines valid node types for the root nodes
			valid_children		: "all",

			// where is the type stores (the rel attribute of the LI element)
			type_attr : "rel",
			// a list of types
			types : {
				// the default type
				"default" : {
					"max_children"	: -1,
					"max_depth"		: -1,
					"valid_children": "all"

					// Bound functions - you can bind any other function here (using =
boolean or function)
					//"select_node"	: true,
					//"open_node"	: true,
					//"close_node"	: true,
					//"create_node"	: true,
					//"delete_node"	: true
				}
			}
		},
		_fn : {
			_get_type : function (obj) {
				obj =3D this._get_node(obj);
				return (!obj || !obj.length) ? false : =
obj.attr(this._get_settings().types.type_attr) || "default";
			},
			set_type : function (str, obj) {
				obj =3D this._get_node(obj);
				return (!obj.length || !str) ? false : =
obj.attr(this._get_settings().types.type_attr, str);
			},
			_check : function (rule, obj, opts) {
				var v =3D false, t =3D this._get_type(obj), d =3D 0, _this =3D this, =
s =3D this._get_settings().types;
				if(obj =3D=3D=3D -1) {=20
					if(!!s[rule]) { v =3D s[rule]; }
					else { return; }
				}
				else {
					if(t =3D=3D=3D false) { return; }
					if(!!s.types[t] && !!s.types[t][rule]) { v =3D s.types[t][rule]; }
					else if(!!s.types["default"] && !!s.types["default"][rule]) { v =3D =
s.types["default"][rule]; }
				}
				if($.isFunction(v)) { v =3D v.call(this, obj); }
				if(rule =3D=3D=3D "max_depth" && obj !=3D=3D -1 && opts !=3D=3D =
false && s.max_depth !=3D=3D -2 && v !=3D=3D 0) {
					// also include the node itself - otherwise if root node it is not =
checked
					=
this._get_node(obj).children("a:eq(0)").parentsUntil(".jstree","li").each=
(function (i) {
						// check if current depth already exceeds global tree depth
						if(s.max_depth !=3D=3D -1 && s.max_depth - (i + 1) <=3D 0) { v =3D =
0; return false; }
						d =3D (i =3D=3D=3D 0) ? v : _this._check(rule, this, false);
						// check if current node max depth is already matched or exceeded
						if(d !=3D=3D -1 && d - (i + 1) <=3D 0) { v =3D 0; return false; }
						// otherwise - set the max depth to the current value minus =
current depth
						if(d >=3D 0 && (d - (i + 1) < v || v < 0) ) { v =3D d - (i + 1); }
						// if the global tree depth exists and it minus the nodes =
calculated so far is less than `v` or `v` is unlimited
						if(s.max_depth >=3D 0 && (s.max_depth - (i + 1) < v || v < 0) ) { =
v =3D s.max_depth - (i + 1); }
					});
				}
				return v;
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var m  =3D this._get_move(),
					s  =3D m.rt._get_settings().types,
					mc =3D m.rt._check("max_children", m.cr),
					md =3D m.rt._check("max_depth", m.cr),
					vc =3D m.rt._check("valid_children", m.cr),
					ch =3D 0, d =3D 1, t;

				if(vc =3D=3D=3D "none") { return false; }=20
				if($.isArray(vc) && m.ot && m.ot._get_type) {
					m.o.each(function () {
						if($.inArray(m.ot._get_type(this), vc) =3D=3D=3D -1) { d =3D =
false; return false; }
					});
					if(d =3D=3D=3D false) { return false; }
				}
				if(s.max_children !=3D=3D -2 && mc !=3D=3D -1) {
					ch =3D m.cr =3D=3D=3D -1 ? this.get_container().children("> ul > =
li").not(m.o).length : m.cr.children("> ul > li").not(m.o).length;
					if(ch + m.o.length > mc) { return false; }
				}
				if(s.max_depth !=3D=3D -2 && md !=3D=3D -1) {
					d =3D 0;
					if(md =3D=3D=3D 0) { return false; }
					if(typeof m.o.d =3D=3D=3D "undefined") {
						// TODO: deal with progressive rendering and async when checking =
max_depth (how to know the depth of the moved node)
						t =3D m.o;
						while(t.length > 0) {
							t =3D t.find("> ul > li");
							d ++;
						}
						m.o.d =3D d;
					}
					if(md - m.o.d < 0) { return false; }
				}
				return true;
			},
			create_node : function (obj, position, js, callback, is_loaded, =
skip_check) {
				if(!skip_check && (is_loaded || this._is_loaded(obj))) {
					var p  =3D (position && position.match(/^before|after$/i) && obj =
!=3D=3D -1) ? this._get_parent(obj) : this._get_node(obj),
						s  =3D this._get_settings().types,
						mc =3D this._check("max_children", p),
						md =3D this._check("max_depth", p),
						vc =3D this._check("valid_children", p),
						ch;
					if(!js) { js =3D {}; }
					if(vc =3D=3D=3D "none") { return false; }=20
					if($.isArray(vc)) {
						if(!js.attr || !js.attr[s.type_attr]) {=20
							if(!js.attr) { js.attr =3D {}; }
							js.attr[s.type_attr] =3D vc[0];=20
						}
						else {
							if($.inArray(js.attr[s.type_attr], vc) =3D=3D=3D -1) { return =
false; }
						}
					}
					if(s.max_children !=3D=3D -2 && mc !=3D=3D -1) {
						ch =3D p =3D=3D=3D -1 ? this.get_container().children("> ul > =
li").length : p.children("> ul > li").length;
						if(ch + 1 > mc) { return false; }
					}
					if(s.max_depth !=3D=3D -2 && md !=3D=3D -1 && (md - 1) < 0) { =
return false; }
				}
				return this.__call_old(true, obj, position, js, callback, is_loaded, =
skip_check);
			}
		}
	});
})(jQuery);
//*/

/*=20
 * jsTree HTML data 1.0
 * The HTML data store. Datastores are build by replacing the =
`load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.jstree.plugin("html_data", {
		__init : function () {=20
			// this used to use html() and clean the whitespace, but this way any =
attached data was lost
			this.data.html_data.original_container_html =3D =
this.get_container().find(" > ul > li").clone(true);
			// remove white space from LI node - otherwise nodes appear a bit to =
the right
			=
this.data.html_data.original_container_html.find("li").andSelf().contents=
().filter(function() { return this.nodeType =3D=3D 3; }).remove();
		},
		defaults : {=20
			data : false,
			ajax : false,
			correct_state : true
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this =3D this; =
this.load_node_html(obj, function () { _this.__callback({ "obj" : obj =
}); s_call.call(this); }, e_call); },
			_is_loaded : function (obj) {=20
				obj =3D this._get_node(obj);=20
				return obj =3D=3D -1 || !obj || !this._get_settings().html_data.ajax =
|| obj.is(".jstree-open, .jstree-leaf") || =
obj.children("ul").children("li").size() > 0;
			},
			load_node_html : function (obj, s_call, e_call) {
				var d,
					s =3D this.get_settings().html_data,
					error_func =3D function () {},
					success_func =3D function () {};
				obj =3D this._get_node(obj);
				if(obj && obj !=3D=3D -1) {
					if(obj.data("jstree-is-loading")) { return; }
					else { obj.data("jstree-is-loading",true); }
				}
				switch(!0) {
					case (!s.data && !s.ajax):
						if(!obj || obj =3D=3D -1) {
							this.get_container()
								.children("ul").empty()
								.append(this.data.html_data.original_container_html)
								.find("li, a").filter(function () { return =
this.firstChild.tagName !=3D=3D "INS"; }).prepend("<ins =
class=3D'jstree-icon'>&#160;</ins>").end()
								=
.filter("a").children("ins:first-child").not(".jstree-icon").addClass("js=
tree-icon");
							this.clean_node();
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj =
=3D=3D=3D -1)):
						if(!obj || obj =3D=3D -1) {
							d =3D $(s.data);
							if(!d.is("ul")) { d =3D $("<ul>").append(d); }
							this.get_container()
								.children("ul").empty().append(d.children())
								.find("li, a").filter(function () { return =
this.firstChild.tagName !=3D=3D "INS"; }).prepend("<ins =
class=3D'jstree-icon'>&#160;</ins>").end()
								=
.filter("a").children("ins:first-child").not(".jstree-icon").addClass("js=
tree-icon");
							this.clean_node();
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj =
!=3D=3D -1):
						obj =3D this._get_node(obj);
						error_func =3D function (x, t, e) {
							var ef =3D this.get_settings().html_data.ajax.error;=20
							if(ef) { ef.call(this, x, t, e); }
							if(obj !=3D -1 && obj.length) {
								obj.children(".jstree-loading").removeClass("jstree-loading");
								obj.data("jstree-is-loading",false);
								if(t =3D=3D=3D "success" && s.correct_state) { =
obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); }
							}
							else {
								if(t =3D=3D=3D "success" && s.correct_state) { =
this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func =3D function (d, t, x) {
							var sf =3D this.get_settings().html_data.ajax.success;=20
							if(sf) { d =3D sf.call(this,d,t,x) || d; }
							if(d =3D=3D "") {
								return error_func.call(this, x, t, "");
							}
							if(d) {
								d =3D $(d);
								if(!d.is("ul")) { d =3D $("<ul>").append(d); }
								if(obj =3D=3D -1 || !obj) { =
this.get_container().children("ul").empty().append(d.children()).find("li=
, a").filter(function () { return this.firstChild.tagName !=3D=3D "INS"; =
}).prepend("<ins =
class=3D'jstree-icon'>&#160;</ins>").end().filter("a").children("ins:firs=
t-child").not(".jstree-icon").addClass("jstree-icon"); }
								else { =
obj.children(".jstree-loading").removeClass("jstree-loading"); =
obj.append(d).find("li, a").filter(function () { return =
this.firstChild.tagName !=3D=3D "INS"; }).prepend("<ins =
class=3D'jstree-icon'>&#160;</ins>").end().filter("a").children("ins:firs=
t-child").not(".jstree-icon").addClass("jstree-icon"); =
obj.data("jstree-is-loading",false); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
							else {
								if(obj && obj !=3D=3D -1) {
									obj.children(".jstree-loading").removeClass("jstree-loading");
									obj.data("jstree-is-loading",false);
									if(s.correct_state) {=20
										obj.removeClass("jstree-open =
jstree-closed").addClass("jstree-leaf");=20
										if(s_call) { s_call.call(this); }=20
									}
								}
								else {
									if(s.correct_state) {=20
										this.get_container().children("ul").empty();
										if(s_call) { s_call.call(this); }=20
									}
								}
							}
						};
						s.ajax.context =3D this;
						s.ajax.error =3D error_func;
						s.ajax.success =3D success_func;
						if(!s.ajax.dataType) { s.ajax.dataType =3D "html"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url =3D =
s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data =3D =
s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			}
		}
	});
	// include the HTML data plugin by default
	$.jstree.defaults.plugins.push("html_data");
})(jQuery);
//*/

/*=20
 * jsTree themeroller plugin 1.0
 * Adds support for jQuery UI themes. Include this at the end of your =
plugins list, also make sure "themes" is not included.
 */
(function ($) {
	$.jstree.plugin("themeroller", {
		__init : function () {
			var s =3D this._get_settings().themeroller;
			this.get_container()
				.addClass("ui-widget-content")
				.delegate("a","mouseenter.jstree", function () {
					$(this).addClass(s.item_h);
				})
				.delegate("a","mouseleave.jstree", function () {
					$(this).removeClass(s.item_h);
				})
				.bind("open_node.jstree create_node.jstree", $.proxy(function (e, =
data) {=20
						this._themeroller(data.rslt.obj);
					}, this))
				.bind("loaded.jstree refresh.jstree", $.proxy(function (e) {
						this._themeroller();
					}, this))
				.bind("close_node.jstree", $.proxy(function (e, data) {
						=
data.rslt.obj.children("ins").removeClass(s.opened).addClass(s.closed);
					}, this))
				.bind("select_node.jstree", $.proxy(function (e, data) {
						data.rslt.obj.children("a").addClass(s.item_a);
					}, this))
				.bind("deselect_node.jstree deselect_all.jstree", $.proxy(function =
(e, data) {
						this.get_container()
							.find("." + s.item_a).removeClass(s.item_a).end()
							.find(".jstree-clicked").addClass(s.item_a);
					}, this))
				.bind("move_node.jstree", $.proxy(function (e, data) {
						this._themeroller(data.rslt.o);
					}, this));
		},
		__destroy : function () {
			var s =3D this._get_settings().themeroller,
				c =3D [ "ui-icon" ];
			$.each(s, function (i, v) {
				v =3D v.split(" ");
				if(v.length) { c =3D c.concat(v); }
			});
			this.get_container()
				.removeClass("ui-widget-content")
				.find("." + c.join(", .")).removeClass(c.join(" "));
		},
		_fn : {
			_themeroller : function (obj) {
				var s =3D this._get_settings().themeroller;
				obj =3D !obj || obj =3D=3D -1 ? this.get_container() : =
this._get_node(obj).parent();
				obj
					.find("li.jstree-closed > =
ins.jstree-icon").removeClass(s.opened).addClass("ui-icon " + =
s.closed).end()
					.find("li.jstree-open > =
ins.jstree-icon").removeClass(s.closed).addClass("ui-icon " + =
s.opened).end()
					.find("a").addClass(s.item)
						.children("ins.jstree-icon").addClass("ui-icon " + s.item_icon);
			}
		},
		defaults : {
			"opened" : "ui-icon-triangle-1-se",
			"closed" : "ui-icon-triangle-1-e",
			"item" : "ui-state-default",
			"item_h" : "ui-state-hover",
			"item_a" : "ui-state-active",
			"item_icon" : "ui-icon-folder-collapsed"
		}
	});
	$(function() {
		var css_string =3D '.jstree .ui-icon { overflow:visible; } .jstree a { =
padding:0 2px; }';
		$.vakata.css.add_sheet({ str : css_string });
	});
})(jQuery);
//*/

/*=20
 * jsTree unique plugin 1.0
 * Forces different names amongst siblings (still a bit experimental)
 * NOTE: does not check language versions (it will not be possible to =
have nodes with the same title, even in different languages)
 */
(function ($) {
	$.jstree.plugin("unique", {
		__init : function () {
			this.get_container()
				.bind("before.jstree", $.proxy(function (e, data) {=20
						var nms =3D [], res =3D true, p, t;
						if(data.func =3D=3D "move_node") {
							// obj, ref, position, is_copy, is_prepared, skip_check
							if(data.args[4] =3D=3D=3D true) {
								if(data.args[0].o && data.args[0].o.length) {
									data.args[0].o.children("a").each(function () { =
nms.push($(this).text().replace(/^\s+/g,"")); });
									res =3D this._check_unique(nms, data.args[0].np.find("> ul > =
li").not(data.args[0].o));
								}
							}
						}
						if(data.func =3D=3D "create_node") {
							// obj, position, js, callback, is_loaded
							if(data.args[4] || this._is_loaded(data.args[0])) {
								p =3D this._get_node(data.args[0]);
								if(data.args[1] && (data.args[1] =3D=3D=3D "before" || =
data.args[1] =3D=3D=3D "after")) {
									p =3D this._get_parent(data.args[0]);
									if(!p || p =3D=3D=3D -1) { p =3D this.get_container(); }
								}
								if(typeof data.args[2] =3D=3D=3D "string") { =
nms.push(data.args[2]); }
								else if(!data.args[2] || !data.args[2].data) { =
nms.push(this._get_settings().core.strings.new_node); }
								else { nms.push(data.args[2].data); }
								res =3D this._check_unique(nms, p.find("> ul > li"));
							}
						}
						if(data.func =3D=3D "rename_node") {
							// obj, val
							nms.push(data.args[1]);
							t =3D this._get_node(data.args[0]);
							p =3D this._get_parent(t);
							if(!p || p =3D=3D=3D -1) { p =3D this.get_container(); }
							res =3D this._check_unique(nms, p.find("> ul > li").not(t));
						}
						if(!res) {
							e.stopPropagation();
							return false;
						}
					}, this));
		},
		_fn : {=20
			_check_unique : function (nms, p) {
				var cnms =3D [];
				p.children("a").each(function () { =
cnms.push($(this).text().replace(/^\s+/g,"")); });
				if(!cnms.length || !nms.length) { return true; }
				cnms =3D =
cnms.sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$1$2$4").repl=
ace(/,,+/g,",").replace(/,$/,"").split(",");
				if((cnms.length + nms.length) !=3D =
cnms.concat(nms).sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$=
1$2$4").replace(/,,+/g,",").replace(/,$/,"").split(",").length) {
					return false;
				}
				return true;
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var p =3D this._get_move(), nms =3D [];
				if(p.o && p.o.length) {
					p.o.children("a").each(function () { =
nms.push($(this).text().replace(/^\s+/g,"")); });
					return this._check_unique(nms, p.np.find("> ul > li").not(p.o));
				}
				return true;
			}
		}
	});
})(jQuery);
//*/
------=_NextPart_000_0070_01CB9893.B382CF60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://translate.googleusercontent.com/translate_c?hl=zh-CN&sl=en&tl=zh-CN&u=http://www.jstree.com/documentation/json_data&rurl=translate.google.com.hk&usg=ALkJrhik7AVTY8ehnwEs1NGw8B40OLu7-w

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML=20
xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>jsTree =
=C2=BB=E6=96=87=E6=A1=A3=C2=BB json_data</TITLE>
<SCRIPT>(function (){ function =
ti_a(b){this.t=3D{};this.tick=3Dfunction(c,d,a){a=3Da?a:(new =
Date).getTime();this.t[c]=3D[a,d]};this.tick("start",null,b)}var =
ti_b=3Dnew ti_a;window.jstiming=3D{Timer:ti_a,load:ti_b};try{var =
ti_=3Dnull;if(window.chrome&&window.chrome.csi)ti_=3DMath.floor(window.ch=
rome.csi().pageT);if(ti_=3D=3Dnull)if(window.gtbExternal)ti_=3Dwindow.gtb=
External.pageT();if(ti_=3D=3Dnull)if(window.external)ti_=3Dwindow.externa=
l.pageT;if(ti_)window.jstiming.pt=3Dti_}catch(ti_c){}; })()=0A=
</SCRIPT>

<SCRIPT src=3D""></SCRIPT>

<SCRIPT>_infowindowVersion=3D1;_intlStrings._originalText =3D =
"=E8=8B=B1=E8=AF=AD=E5=8E=9F=E6=96=87:";_intlStrings._interfaceDirection=3D=
"ltr";_intlStrings._interfaceAlign=3D"left";_intlStrings._langpair=3D"en|=
zh-CN";_intlStrings._feedbackUrl=3D"http://translate.google.com/translate=
_suggestion";_intlStrings._currentBy=3D"=E5=BD=93=E5=89=8D=E7=9A=84=E7=BF=
=BB=E8=AF=91=E6=98=AF=E7=94=B1%2$s=E5=9C=A8 =
%1$s=E5=AE=8C=E6=88=90=E7=9A=84";_intlStrings._unknown=3D"=E4=BD=9A=E5=90=
=8D=E8=AF=91=E8=80=85";_intlStrings._suggestTranslation=3D"=E6=9B=B4=E5=A5=
=BD=E7=9A=84=E7=BF=BB=E8=AF=91=E5=BB=BA=E8=AE=AE"  =
;_intlStrings._submit=3D"=E6=8F=90=E4=BE=9B=E5=BB=BA=E8=AE=AE";_intlStrin=
gs._suggestThanks=3D"=E6=84=9F=E8=B0=A2=E6=82=A8=E4=B8=BA Google =
=E7=BF=BB=E8=AF=91=E6=8F=90=E4=BE=9B=E7=BF=BB=E8=AF=91=E5=BB=BA=E8=AE=AE=E3=
=80=82";_intlStrings._reverse=3Dfalse;</SCRIPT>

<STYLE type=3Dtext/css>.google-src-text {
	DISPLAY: none !important
}
.google-src-active-text {
	DISPLAY: block !important; FONT-FAMILY: arial, sans-serif !important; =
COLOR: black !important; FONT-SIZE: 12px !important
}
.google-src-active-text A {
	FONT-SIZE: 12px !important
}
.google-src-active-text A:link {
	COLOR: #00c !important; TEXT-DECORATION: underline !important
}
.google-src-active-text A:visited {
	COLOR: purple !important; TEXT-DECORATION: underline !important
}
.google-src-active-text A:active {
	COLOR: red !important; TEXT-DECORATION: underline !important
}
</STYLE>

<META content=3DGoogle http-equiv=3DX-Translated-By>
<META content=3D"text/html; charset=3DUTF-8" http-equiv=3DContent-Type>
<META name=3Dtitle content=3D"jsTree - jQuery tree plugin - =
Documentation"><LINK=20
rel=3D"shortcut icon" href=3D"/favicon.ico"><LINK title=3D"=E7=9A=84RSS =
2.0" rel=3Dalternate=20
type=3Dapplication/rss+xml href=3D"http://www.jstree.com/feed"><LINK =
rel=3Dstylesheet=20
type=3Dtext/css href=3D"http://static.jstree.com/layout.css">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.jstree.com/v.1.0rc2/jquery.js"></SCRIPT>
<LINK rel=3Dcanonical =
href=3D"http://www.jstree.com/documentation/json_data"><LINK=20
rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://static.jstree.com/v.1.0rc2/_docs/syntax/!style.css">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.jstree.com/v.1.0rc2/_docs/syntax/!script.js"></SCRIP=
T>
<LINK rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://static.jstree.com/v.1.0rc2/_docs/!style.css">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.jstree.com/v.1.0rc2/jquery.cookie.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.jstree.com/v.1.0rc2/jquery.hotkeys.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.jstree.com/v.1.0rc2/jquery.jstree.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>SyntaxHighlighter.config.clipboardSwf =3D =
'http://static.jstree.com/v.1.0rc2/_docs/syntax/clipboard.swf';</SCRIPT>

<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16385"></HEAD>
<BODY class=3Dnosidebar><IFRAME=20
style=3D"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 0px; HEIGHT: 0px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px"=20
height=3D0=20
src=3D"http://translate.google.com.hk/translate_un?hl=3Dzh-CN&amp;sl=3Den=
&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation/json_data&amp=
;rurl=3Dtranslate.google.com.hk&amp;lang=3Den&amp;usg=3DALkJrhh7-P2mA4a9D=
HkyM9rQGAUHw1fivA"=20
frameBorder=3D0 width=3D0></IFRAME>
<DIV id=3Dcontainer>
<DIV id=3Dhead>
<H1><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>jsTree</SPAN>=20
jsTree</SPAN> </H1>
<H2><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>jquery tree=20
plugin</SPAN> jQuery=E7=9A=84=E6=A0=91=E6=8F=92=E4=BB=B6</SPAN> </H2><A =
id=3Dlogo title=3D"jsTree - jQuery=E7=9A=84=E6=A0=91=E6=8F=92=E4=BB=B6"=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/&amp;rurl=3Dtransla=
te.google.com.hk&amp;usg=3DALkJrhhz5CnLdhGwQ8MFgWLWMilG5XHd6A">&nbsp;</A>=

<UL id=3Dmenu>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/&amp;rurl=3Dtransla=
te.google.com.hk&amp;usg=3DALkJrhhz5CnLdhGwQ8MFgWLWMilG5XHd6A">home</A></=
SPAN>=20
  <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/&amp;rurl=3Dtransla=
te.google.com.hk&amp;usg=3DALkJrhhz5CnLdhGwQ8MFgWLWMilG5XHd6A">=E9=A6=96=E9=
=A1=B5</A></SPAN>=20
  </LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/demo&amp;rurl=3Dtra=
nslate.google.com.hk&amp;usg=3DALkJrhiQjotOq3uoV8RppirDwM75S06e0g">demo</=
A></SPAN>=20
  <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/demo&amp;rurl=3Dtra=
nslate.google.com.hk&amp;usg=3DALkJrhiQjotOq3uoV8RppirDwM75S06e0g">=E6=BC=
=94=E7=A4=BA</A></SPAN>=20
  </LI>
  <LI class=3Dselected><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation&amp;r=
url=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiPkI5xxyw9tDp1p47VlsTy8_LRl=
w">documentation</A></SPAN>=20
  <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation&amp;r=
url=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiPkI5xxyw9tDp1p47VlsTy8_LRl=
w">=E6=96=87=E6=A1=A3</A></SPAN>=20
  </LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/changelog&amp;rurl=3D=
translate.google.com.hk&amp;usg=3DALkJrhgxET32tB1GLdW66wWUMVm5Yaohrw">cha=
ngelog</A></SPAN>=20
  <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/changelog&amp;rurl=3D=
translate.google.com.hk&amp;usg=3DALkJrhgxET32tB1GLdW66wWUMVm5Yaohrw">=E6=
=9B=B4=E6=96=B0=E6=97=A5=E5=BF=97</A></SPAN>=20
  </LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/faq&amp;rurl=3Dtran=
slate.google.com.hk&amp;usg=3DALkJrhgpr07iTSKf1TjzUOtU4hqGOj01cA">faq</A>=
</SPAN>=20
  <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/faq&amp;rurl=3Dtran=
slate.google.com.hk&amp;usg=3DALkJrhgpr07iTSKf1TjzUOtU4hqGOj01cA">=E5=B8=B8=
=E8=A7=81=E9=97=AE=E9=A2=98</A></SPAN>=20
  </LI></UL></DIV>
<DIV id=3Dsidebar><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A =
id=3Ddownload=20
class=3Dbig=20
href=3D"http://jstree.googlecode.com/files/jsTree.v.1.0rc2.zip">Download<=
/A></SPAN>=20
<A id=3Ddownload class=3Dbig=20
href=3D"http://jstree.googlecode.com/files/jsTree.v.1.0rc2.zip">=E4=B8=8B=
=E8=BD=BD</A></SPAN> <A=20
id=3Ddownload class=3Dbig=20
href=3D"http://jstree.googlecode.com/files/jsTree.v.1.0rc2.zip"><BR></A><=
SPAN=20
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A =
id=3Ddownload=20
class=3Dbig=20
href=3D"http://jstree.googlecode.com/files/jsTree.v.1.0rc2.zip">v.1.0rc2<=
/A></SPAN>=20
<A id=3Ddownload class=3Dbig=20
href=3D"http://jstree.googlecode.com/files/jsTree.v.1.0rc2.zip">v.1.0rc2<=
/A></SPAN>=20

<P class=3Ddownload_date><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>01 =
Jul=20
2010</SPAN> 2010=E5=B9=B47=E6=9C=881=E6=97=A5</SPAN> </P>
<H3 class=3Dresources><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Developer=20
resources</SPAN>=E5=BC=80=E5=8F=91=E8=B5=84=E6=BA=90</SPAN> </H3>
<UL class=3Dresources>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://groups.google.com/group/jstree&amp=
;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhxVhFnO0SY9anxcuV46mD7QfD=
0qQ">Discussion=20
  group</A></SPAN> <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://groups.google.com/group/jstree&amp=
;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhxVhFnO0SY9anxcuV46mD7QfD=
0qQ">=E8=AE=A8=E8=AE=BA=E7=BE=A4=E7=BB=84</A></SPAN>=20
  </LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://code.google.com/p/jstree/issues/en=
try&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhzYVbxDF1LKaG99Kof=
lE62nElkjw">Submit=20
  a bug / SVN</A></SPAN> <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://code.google.com/p/jstree/issues/en=
try&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhzYVbxDF1LKaG99Kof=
lE62nElkjw">=E6=8F=90=E4=BA=A4=E9=94=99=E8=AF=AF/=20
  SVN=E7=9A=84</A></SPAN> </LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"https://www.paypal.com/cgi-bin/webscr?cmd=3D_xclick&amp;business=3D=
paypal@vakata.com&amp;currency_code=3DUSD&amp;amount=3D&amp;return=3Dhttp=
://jstree.com/donation&amp;item_name=3DBuy+me+a+coffee+for+jsTree">Suppor=
t=20
  jsTree</A></SPAN> <A=20
  =
href=3D"https://www.paypal.com/cgi-bin/webscr?cmd=3D_xclick&amp;business=3D=
paypal@vakata.com&amp;currency_code=3DUSD&amp;amount=3D&amp;return=3Dhttp=
://jstree.com/donation&amp;item_name=3DBuy+me+a+coffee+for+jsTree">=E6=94=
=AF=E6=8C=81jsTree</A></SPAN>=20
  </LI></UL>
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Thank =

you</SPAN>=E8=B0=A2=E8=B0=A2</SPAN> </H3>
<P=20
style=3D"TEXT-ALIGN: center; LINE-HEIGHT: 1.8em; MARGIN-LEFT: 0.9em; =
FONT-SIZE: 1em; MARGIN-RIGHT: 0.9em"><SPAN=20
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Matthew&nbsp;Alexander, Bailey&nbsp;Projects,=20
Shau-Chi&nbsp;Tse, Chris&nbsp;Wigley, Lewis&nbsp;Duke, =
Noaman&nbsp;Sachwani,=20
Tommi&nbsp;Kiviniemi, R=C3=A9gis&nbsp;Guyomarch, =
Luis&nbsp;Fraile&nbsp;Hern=C3=A1ndez,=20
Bruno&nbsp;Winck, Gareth&nbsp;Farrington, Janusz&nbsp;Noszczy=C5=84ski,=20
Damir&nbsp;Secki, Martin&nbsp;Fisher, Martin&nbsp;M=C3=B6hnen, =
Aaron&nbsp;Stone,=20
Adevsoft&nbsp;Inc, Manuel&nbsp;Graf, Joseph&nbsp;Canton,=20
Net&nbsp;Design&nbsp;Ltd, LiquidNet&nbsp;Ltd, =
Sabin&nbsp;Ioan&nbsp;Cirimpei,=20
Walter&nbsp;Gamba, William&nbsp;Morris, Marcel&nbsp;Wijnands, =
Webunity.nl,=20
Tactics&nbsp;bvba, Brendon&nbsp;Muir, Philip&nbsp;Ehret, =
Rinaldas&nbsp;Lazickas,=20
Jake&nbsp;Liu, Pete&nbsp;Smith, Chris&nbsp;Means, Quentin&nbsp;Zervaas,=20
Red&nbsp;Paint&nbsp;Multimedia, Olof&nbsp;T=C3=B6rnqvist, =
Meshach&nbsp;Weber,=20
Mee&nbsp;Fong&nbsp;Huang, Octavalent, Kevin&nbsp;Papst, =
Michael&nbsp;Schmidt,=20
Justin&nbsp;Wright, VariPath&nbsp;Technologies, Mate&nbsp;Skoblar,=20
John&nbsp;Lewin, Alvin&nbsp;Schur, Jacob&nbsp;Hochstetler, =
Heiner&nbsp;Merten,=20
Harold&nbsp;Owen, Kaloyan&nbsp;Tsvetkov, Oliver&nbsp;Jones, =
Johan&nbsp;S=C3=B6rlin,=20
Edwin&nbsp;de&nbsp;Vries</SPAN>=E9=A9=AC=E4=BF=AE=E4=BA=9A=E5=8E=86=E5=B1=
=B1=E5=A4=A7=EF=BC=8C=E8=B4=9D=E5=88=A9=E9=A1=B9=E7=9B=AE=EF=BC=8C=E7=AD=B2=
=E7=AE=95=E6=B9=BE=EF=BC=8C=E8=B0=A2=E9=A9=B0=EF=BC=8C=E5=85=8B=E9=87=8C=E6=
=96=AF=E5=A8=81=E6=A0=BC=E5=88=A9=EF=BC=8C=E5=88=98=E6=98=93=E6=96=AF=E5=85=
=AC=E7=88=B5=EF=BC=8CNoaman=20
Sachwani=EF=BC=8CTommi=20
Kiviniemi=EF=BC=8C=E9=9B=B7=E5=90=89=E6=96=AFGuyomarch=EF=BC=8C=E8=B7=AF=E6=
=98=93=E6=96=AF=E5=9F=83=E5=B0=94=E5=8D=97=E5=BE=B7=E6=96=AFFraile=EF=BC=8C=
=E5=B8=83=E9=B2=81=E8=AF=BAWinck=EF=BC=8C=E5=8A=A0=E9=9B=B7=E6=80=9D=E6=B3=
=95=E7=81=B5=E9=A1=BF=EF=BC=8C=E9=9B=85=E5=8A=AA=E4=BB=80=E6=96=AF=E5=9D=A6=
Noszczy=C5=84ski=EF=BC=8C=E8=BE=BE=E7=B1=B3=E5=B0=94Secki=EF=BC=8C=E8=B4=B9=
=E8=88=8D=E5=B0=94=E9=A9=AC=E4=B8=81=EF=BC=8C=E9=A9=AC=E4=B8=81M=C3=B6hne=
n=EF=BC=8C=E4=BA=9A=E4=BC=A6=E7=9F=B3=EF=BC=8CAdevsoft=E5=85=AC=E5=8F=B8=EF=
=BC=8C=E6=9B=BC=E5=8A=AA=E5=9F=83=E5=B0=94=E6=A0=BC=E6=8B=89=E5=A4=AB=E7=BA=
=A6=E7=91=9F=E5=A4=AB=E5=B9=BF=EF=BC=8C=E7=BD=91=E7=BB=9C=E8=AE=BE=E8=AE=A1=
=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8=EF=BC=8CLiquidnet=E7=9A=84=E6=9C=89=E9=
=99=90=E5=85=AC=E5=8F=B8=EF=BC=8C=E8=90=A8=E5=AE=BE=E4=BC=8A=E4=B8=87Ciri=
mpei=EF=BC=8C=E6=B2=83=E5=B0=94=E7=89=B9=E9=A3=9E=E8=84=9A=EF=BC=8C=E5=A8=
=81=E5=BB=89=E8=8E=AB=E9=87=8C=E6=96=AF=EF=BC=8C=E9=A9=AC=E5=A1=9E=E5=B0=94=
Wijnands=EF=BC=8CWebunity.nl=EF=BC=8C=E6=88=98=E6=9C=AFbvba=EF=BC=8C=E5=B8=
=83=E6=9C=97=E4=B8=9C=E7=BC=AA=E5=B0=94=EF=BC=8C=E8=8F=B2=E5=88=A9=E6=99=AE=
=E5=9F=83=E9=9B=B7=EF=BC=8CRinaldas=20
Lazickas=EF=BC=8C=E5=88=98=E6=9D=B0=E5=85=8B=EF=BC=8C=E7=9A=AE=E7=89=B9=E5=
=8F=B2=E5=AF=86=E6=96=AF=EF=BC=8C=E5=85=8B=E9=87=8C=E6=96=AF=E6=89=8B=E6=AE=
=B5=EF=BC=8C=E6=98=86=E6=B1=80Zervaas=EF=BC=8C=E9=9B=B7=E5=BE=B7=E6=BD=98=
=E5=A4=9A=E5=AA=92=E4=BD=93=EF=BC=8C=E5=A5=A5=E6=B4=9B=E5=A4=ABTORNQVIST=E6=
=8A=95=E5=85=A5=EF=BC=8C=E7=B1=B3=E7=85=9E=E9=9F=A6=E4=BC=AF=EF=BC=8C=E9=BB=
=84=E7=9C=89=E8=8A=B3=EF=BC=8COctavalent=EF=BC=8C=E5=87=AF=E6=96=87=E5=B8=
=95=E6=99=AE=E6=96=AF=E7=89=B9=EF=BC=8C=E8=BF=88=E5=85=8B=E5=B0=94=E6=96=BD=
=E5=AF=86=E7=89=B9=EF=BC=8C=E8=B4=BE=E6=96=AF=E6=B1=80=E8=B5=96=E7=89=B9=EF=
=BC=8CVariPath=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=A9=AC=E9=BB=9BSkoblar=EF=BC=8C=
=E7=BA=A6=E7=BF=B0=E5=88=97=E6=96=87=EF=BC=8C=E9=98=BF=E5=B0=94=E6=96=87=E8=
=88=92=E5=B0=94=EF=BC=8C=E9=9B=85=E5=90=84=E5=B8=83=E9=9C=8D=E8=B5=AB=E6=96=
=AF=E6=B3=B0=E7=89=B9=E5=8B=92=EF=BC=8C=E6=B5=B7=E7=BA=B3=E8=8E=AB=E9=A1=BF=
=EF=BC=8C=E5=93=88=E7=BD=97=E5=BE=B7=E6=AC=A7=E6=96=87=EF=BC=8CKaloyan=20
Tsvetkov=EF=BC=8C=E5=A5=A5=E5=88=A9=E5=BC=97=E7=90=BC=E6=96=AF=EF=BC=8C=E7=
=BA=A6=E7=BF=B0S=C3=B6rlin=EF=BC=8C=E5=9F=83=E5=BE=B7=E6=B8=A9=E5=BE=B7=E5=
=BC=97=E9=87=8C=E6=96=AF</SPAN> </P>
<H3 class=3Dads><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Ads =
by=20
TNX</SPAN>=E5=B9=BF=E5=91=8A=E7=9A=84=E5=A4=A9=E5=8D=97=E6=98=9F</SPAN> =
</H3>
<UL class=3Dads>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.mydealsclub.com/store/eFax&amp=
;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhggPW9yr3VuzViuLGGNKUQFfq4=
ufQ"=20
  rel=3Dnofollow>efax free program</A></SPAN> <A=20
  =
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.mydealsclub.com/store/eFax&amp=
;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhggPW9yr3VuzViuLGGNKUQFfq4=
ufQ"=20
  =
rel=3Dnofollow>efax=E7=9A=84=E5=85=8D=E8=B4=B9=E7=A8=8B=E5=BA=8F</A></SPA=
N> </LI></UL></DIV>
<DIV id=3Dcontent class=3Ddocumentation>
<P style=3D"TEXT-ALIGN: center"><SPAN onmouseover=3D_tipon(this)=20
onmouseout=3D_tipoff()><SPAN style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text><A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation&amp;r=
url=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiPkI5xxyw9tDp1p47VlsTy8_LRl=
w">back=20
to the documentation homepage</A></SPAN> <A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation&amp;r=
url=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiPkI5xxyw9tDp1p47VlsTy8_LRl=
w">=E5=9B=9E=E5=88=B0=E7=BD=91=E9=A1=B5=E7=9A=84=E6=96=87=E6=A1=A3</A></S=
PAN>=20
</P>
<H1><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>jsTree v.1.0 -=20
json_data plugin</SPAN> jsTree v.1.0 - =
json_data=E6=8F=92=E4=BB=B6</SPAN> </H1>
<H2><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Description</SPAN>=E8=AF=B4=E6=98=8E</SPAN> =
</H2>
<DIV id=3Ddescription>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The=20
<CODE>json_data</CODE> plugin enables jsTree to convert JSON objects to=20
interactive =
trees.</SPAN>=E8=AF=A5<CODE>json_data</CODE>=E6=8F=92=E4=BB=B6=E5=AE=9E=E7=
=8E=B0jsTree=20
JSON=E5=AF=B9=E8=B1=A1=E8=BD=AC=E6=8D=A2=E4=B8=BA=E4=BA=A4=E4=BA=92=E5=BC=
=8F=E7=9A=84=E6=A0=91=E6=9C=A8=E3=80=82</SPAN> <SPAN =
onmouseover=3D_tipon(this)=20
onmouseout=3D_tipoff()><SPAN style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>The data (JSON) can be set up in the config or =
retrieved=20
from a server (also =
ondemand).</SPAN>=E6=95=B0=E6=8D=AE=EF=BC=88JSON=EF=BC=89=E7=9A=84=EF=BC=8C=
=E5=8F=AF=E8=AE=BE=E7=BD=AE=E5=9C=A8=E9=85=8D=E7=BD=AE=E6=88=96=E4=BB=8E=E6=
=9C=8D=E5=8A=A1=E5=99=A8=EF=BC=88=E4=B9=9F=E6=8C=89=E9=9C=80=EF=BC=89=E6=A3=
=80=E7=B4=A2=E3=80=82</SPAN> <SPAN=20
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Version 1.0 also=20
introduces the experimental progressive render feature, which is =
suitable for=20
large heavy trees, when the DOM would be too heavy to manipulate.</SPAN> =

1.0=E7=89=88=E8=BF=98=E5=BC=95=E5=85=A5=E4=BA=86=E5=85=88=E8=BF=9B=E7=9A=84=
=E5=AE=9E=E9=AA=8C=E5=91=88=E7=8E=B0=E7=9A=84=E7=89=B9=E7=82=B9=EF=BC=8C=E6=
=98=AF=E5=A4=A7=E5=9E=8B=E9=87=8D=E6=A0=91=EF=BC=8C=E5=BD=93DOM=E6=9C=AA=E5=
=85=8D=E5=A4=AA=E6=B2=89=E9=87=8D=E4=BA=86=E5=90=88=E9=80=82=E7=9A=84=E6=93=
=8D=E4=BD=9C=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The =
basic=20
structure you need to follow when supplying data in the JSON format=20
is:</SPAN>=E5=85=B6=E5=9F=BA=E6=9C=AC=E7=BB=93=E6=9E=84=EF=BC=8C=E4=BD=A0=
=E9=9C=80=E8=A6=81=E6=8C=89=E7=85=A7=E4=BE=9B=E5=BA=94=E6=97=B6=E5=B0=86J=
SON=E6=A0=BC=E5=BC=8F=E7=9A=84=E6=95=B0=E6=8D=AE=E6=98=AF=EF=BC=9A</SPAN>=
 </P>
<DIV class=3Dcode_f><PRE class=3Dbrush:js;><SPAN =
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>{</SPAN> {</SPAN>=20
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>data =
: =
"node_title",</SPAN>=E6=95=B0=E6=8D=AE=EF=BC=9A=E2=80=9Cnode_title=E2=80=9D=
</SPAN>=20
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
omit `attr` if not needed; the `attr` object gets passed to the jQuery =
`attr` function</SPAN> / =
/=E7=9C=81=E7=95=A5=E7=9A=84Attr``=E5=A6=82=E6=9E=9C=E4=B8=8D=E9=9C=80=E8=
=A6=81;`=E7=9A=84`=E7=9A=84Attr=E5=AF=B9=E8=B1=A1=E8=A2=AB=E4=BC=A0=E9=80=
=92=E7=BB=99jQuery=E7=9A=84``=E5=87=BD=E6=95=B0=E7=9A=84Attr</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>attr =
: { id : "node_identificator", some-other-attribute : "attribute_value" =
},</SPAN>=E4=B8=BAattr=EF=BC=9A{=E7=BC=96=E5=8F=B7=EF=BC=9A=E2=80=9Cnode_=
identificator=E2=80=9D=EF=BC=8C=E6=9C=89=E7=9A=84=EF=BC=8C=E5=85=B6=E4=BB=
=96=E5=B1=9E=E6=80=A7=E7=9A=84=EF=BC=9A=E2=80=9Cattribute_value=E2=80=9D}=
=EF=BC=8C</SPAN>=20
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
`state` and `children` are only used for NON-leaf nodes</SPAN> / =
/`=E5=9B=BD=E5=AE=B6`=E5=92=8C``=E5=84=BF=E7=AB=A5=E5=8F=AA=E7=94=A8=E4=BA=
=8E=E9=9D=9E=E5=8F=B6=E8=8A=82=E7=82=B9</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>state: "closed", // or "open", defaults to =
"closed"</SPAN>=E7=8A=B6=E6=80=81=EF=BC=9A=E2=80=9C=E5=85=B3=E9=97=AD=E2=80=
=9D=EF=BC=8C/ =
/=E6=88=96=E2=80=9C=E5=BC=80=E6=94=BE=E2=80=9D=EF=BC=8C=E9=BB=98=E8=AE=A4=
=E4=B8=BA=E2=80=9C=E5=85=B3=E9=97=AD=E2=80=9D</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>children: [ /* an array of child nodes objects =
*/ ]</SPAN>=E5=AD=A9=E5=AD=90=E4=BB=AC=EF=BC=9A[/ =
*=E6=95=B0=E7=BB=84=E5=AF=B9=E8=B1=A1=E7=9A=84=E5=AD=90=E8=8A=82=E7=82=B9=
* /]</SPAN>
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>}</SPAN> }</SPAN>
</PRE></DIV>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The =
attr object=20
will appear as attributes on the resulting <CODE>li</CODE>=20
node.</SPAN>=E5=9C=A8Attr=E5=AF=B9=E8=B1=A1=E7=9A=84=E5=B1=9E=E6=80=A7=E5=
=B0=86=E5=AF=BC=E8=87=B4=E5=87=BA=E7=8E=B0=E5=9C=A8<CODE>li</CODE>=E8=8A=82=
=E7=82=B9=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>You =
may need to=20
pass some attributes to the <CODE>a</CODE> node, or set some metadata, =
or use=20
language versions (for the <A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation/langu=
ages.html&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiENzMhzWJDE5=
7V8RD6Cqy-NeVFSg">languages=20
plugin</A> =
):</SPAN>=E6=82=A8=E5=8F=AF=E8=83=BD=E9=9C=80=E8=A6=81=E9=80=9A=E8=BF=87=E4=
=B8=80=E4=BA=9B=E5=B1=9E=E6=80=A7=E7=9A=84<CODE>a</CODE>=E8=8A=82=E7=82=B9=
=EF=BC=8C=E6=88=96=E8=AE=BE=E7=BD=AE=E4=B8=80=E4=BA=9B=E5=85=83=E6=95=B0=E6=
=8D=AE=EF=BC=8C=E6=88=96=E8=80=85=E4=BD=BF=E7=94=A8=E7=9A=84=E8=AF=AD=E8=A8=
=80=E7=89=88=E6=9C=AC=EF=BC=88=E7=94=A8=E4=BA=8E<A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://www.jstree.com/documentation/langu=
ages.html&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhiENzMhzWJDE5=
7V8RD6Cqy-NeVFSg">=E8=AF=AD=E8=A8=80=E6=8F=92=E4=BB=B6</A>=20
=EF=BC=89=EF=BC=9A</SPAN> </P>
<DIV class=3Dcode_f><PRE class=3Dbrush:js;><SPAN =
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>{</SPAN> {</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
`data` can also be an object</SPAN> / =
/``=E6=95=B0=E6=8D=AE=E4=B9=9F=E5=8F=AF=E4=BB=A5=E6=98=AF=E4=B8=80=E4=B8=AA=
=E5=AF=B9=E8=B1=A1</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>data =
: {</SPAN>=E6=95=B0=E6=8D=AE=EF=BC=9A{</SPAN>=20
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>title =
: "The node =
title",</SPAN>=E9=A2=98=E7=9B=AE=EF=BC=9A=E2=80=9C=E8=8A=82=E7=82=B9=E6=A0=
=87=E9=A2=98=E2=80=9D=EF=BC=8C</SPAN>=20
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
omit when not needed</SPAN> / =
/=E4=B8=8D=E9=9C=80=E8=A6=81=E6=97=B6=E7=9C=81=E7=95=A5</SPAN>
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>attr =
: {},</SPAN>=E4=B8=BAattr=EF=BC=9A{}=EF=BC=8C</SPAN>=20
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// if =
`icon` contains a slash <CODE>/</CODE> it is treated as a file, used for =
background</SPAN> / =
/=E5=A6=82=E6=9E=9C`=E5=9B=BE=E6=A0=87`=E5=8C=85=E5=90=AB=E6=96=9C=E6=9D=A0=
<CODE>/</CODE>=E8=BF=99=E6=98=AF=E5=90=8E=E5=8F=B0=E5=A4=84=E7=90=86=EF=BC=
=8C=E7=94=A8=E4=BA=8E=E6=96=87=E4=BB=B6=E4=BD=9C=E4=B8=BA</SPAN>
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
otherwise - it is added as a class to the &lt;ins&gt; node</SPAN> / =
/=E5=90=A6=E5=88=99 - =
=E8=BF=99=E6=98=AF=E5=A2=9E=E5=8A=A0=E4=B8=80=E6=9D=A1=EF=BC=8C=E4=BD=9C=E4=
=B8=BA=E4=B8=80=E7=B1=BB=E8=8A=82=E7=82=B9=E7=9A=84&lt;ins&gt;</SPAN>
		<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>icon =
: =
"folder"</SPAN>=E5=9B=BE=E6=A0=87=EF=BC=9A=E2=80=9C=E6=96=87=E4=BB=B6=E5=A4=
=B9=E2=80=9D</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>},</SPAN> }=EF=BC=8C</SPAN>

	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
the `metadata` property will be saved using the jQuery `data` function =
on the `li` node</SPAN> / =
/=E5=85=83=E6=95=B0=E6=8D=AE=E7=9A=84``=E5=B1=9E=E6=80=A7=E5=B0=86=E8=A2=AB=
=E4=BF=9D=E5=AD=98=E4=BD=BF=E7=94=A8jQuery=E7=9A=84=E6=95=B0=E6=8D=AE```=E4=
=B8=8A`=E6=9D=8E=E5=87=BD=E6=95=B0=E8=8A=82=E7=82=B9</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>metadata : "a string, array, object, =
etc",</SPAN>=E5=85=83=E6=95=B0=E6=8D=AE=EF=BC=9A=E2=80=9C=E4=B8=80=E4=B8=AA=
=E5=AD=97=E7=AC=A6=E4=B8=B2=EF=BC=8C=E6=95=B0=E7=BB=84=EF=BC=8C=E5=AF=B9=E8=
=B1=A1=E7=AD=89=E2=80=9D=EF=BC=8C</SPAN>

	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// if =
you use the language plugin - just set this property</SPAN> / =
/=E5=A6=82=E6=9E=9C=E6=82=A8=E4=BD=BF=E7=94=A8=E7=9A=84=E8=AF=AD=E8=A8=80=
=E6=8F=92=E4=BB=B6 - =
=E5=8F=AA=E9=9C=80=E8=AE=BE=E5=AE=9A=E8=BF=99=E4=B8=AA=E5=B1=9E=E6=80=A7<=
/SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>// =
also make sure that `data` is an array of objects</SPAN> / =
/=E4=B9=9F=E7=A1=AE=E4=BF=9D=E6=95=B0=E6=8D=AE``=E6=98=AF=E4=B8=80=E4=B8=AA=
=E5=AF=B9=E8=B1=A1=E6=95=B0=E7=BB=84</SPAN>
	<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>language : "en" // any code you are =
using</SPAN>=E8=AF=AD=E8=A8=80=EF=BC=9A=E2=80=9C=E6=81=A9=E2=80=9D/ =
/=E4=BD=A0=E4=BD=BF=E7=94=A8=E7=9A=84=E4=BB=BB=E4=BD=95=E4=BB=A3=E7=A0=81=
</SPAN>
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN =
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>}</SPAN> }</SPAN>
</PRE></DIV>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>As =
seen in the=20
first example below - you can also use a simple string to define a node =
(Child 1=20
&amp; Child =
2).</SPAN>=E5=B0=B1=E5=83=8F=E5=9C=A8=E4=B8=8B=E9=9D=A2=E7=AC=AC=E4=B8=80=
=E4=B8=AA=E4=BE=8B=E5=AD=90 - =
=E4=BD=A0=E4=B9=9F=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=94=A8=E4=B8=80=E4=B8=AA=E7=
=AE=80=E5=8D=95=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=E6=9D=A5=E5=AE=9A=E4=B9=
=89=E4=B8=80=E4=B8=AA=E8=8A=82=E7=82=B9=EF=BC=88=E5=84=BF=E7=AB=A5=E5=8F=8A=
=E5=84=BF=E7=AB=A51 2=EF=BC=89=E3=80=82</SPAN>=20
</P></DIV>
<H2 id=3Dconfiguration><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Configuration</SPAN>=E9=85=8D=E7=BD=AE</SPAN> =
</H2>
<DIV class=3D"panel configuration">
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>data</SPAN>=E6=95=B0=E6=8D=AE</SPAN> </H3>
<P class=3Dmeta><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>A =
JSON object (or=20
<CODE>false</CODE> if not =
used).</SPAN>=E4=B8=80=E4=B8=AAJSON=E5=AF=B9=E8=B1=A1=EF=BC=88=E6=88=96<C=
ODE>false</CODE>=20
=EF=BC=8C=E5=A6=82=E6=9E=9C=E4=B8=8D=E4=BD=BF=E7=94=A8=EF=BC=89=E3=80=82<=
/SPAN> <SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Default is=20
<CODE>false</CODE> .</SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>false</CODE> =
=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Specifies the=20
content to load into the container and convert to a=20
tree.</SPAN>=E6=8C=87=E5=AE=9A=E7=9A=84=E5=86=85=E5=AE=B9=E5=8A=A0=E8=BD=BD=
=E5=88=B0=E5=AE=B9=E5=99=A8=E4=B8=AD=EF=BC=8C=E5=B9=B6=E5=B0=86=E5=85=B6=E8=
=BD=AC=E6=8D=A2=E4=B8=BA=E6=A0=91=E3=80=82</SPAN> </P>
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>ajax</SPAN>=E9=98=BF=E8=B4=BE=E5=85=8B=E6=96=AF</=
SPAN> </H3>
<P class=3Dmeta><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>An =
object (or=20
<CODE>false</CODE> if not =
used).</SPAN>=E4=B8=80=E4=B8=AA=E5=AF=B9=E8=B1=A1=EF=BC=88=E6=88=96<CODE>=
false</CODE> =
=EF=BC=8C=E5=A6=82=E6=9E=9C=E4=B8=8D=E4=BD=BF=E7=94=A8=EF=BC=89=E3=80=82<=
/SPAN>=20
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Default is=20
<CODE>false</CODE> .</SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>false</CODE> =
=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The =
ajax config=20
object is pretty much the same as the <A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://api.jquery.com/jQuery.ajax/&amp;ru=
rl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhuAKXptIGEEtfvmYHKviYkbNV82g=
">jQuery=20
ajax settings object</A> .</SPAN> =
Ajax=E7=9A=84=E9=85=8D=E7=BD=AE=E5=AF=B9=E8=B1=A1=E6=98=AF=E5=87=A0=E4=B9=
=8E=E7=9B=B8=E5=90=8C=E7=9A=84<A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://api.jquery.com/jQuery.ajax/&amp;ru=
rl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhuAKXptIGEEtfvmYHKviYkbNV82g=
">jQuery=E7=9A=84Ajax=E7=9A=84=E8=AE=BE=E7=BD=AE=E5=AF=B9=E8=B1=A1</A>=20
=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>You =
can set the=20
<CODE>data</CODE> option to a function, that will be executed in the =
current=20
tree's scope ( <CODE>this</CODE> will be the tree instance) and gets the =
node=20
about to be open as a paramater (or <CODE>-1</CODE> for initial=20
load).</SPAN>=E6=82=A8=E5=8F=AF=E4=BB=A5=E8=AE=BE=E7=BD=AE<CODE>data</COD=
E>=E7=9A=84=E5=8A=9F=E8=83=BD=E9=80=89=E9=A1=B9=EF=BC=8C=E4=B8=80=EF=BC=8C=
=E6=89=A7=E8=A1=8C=E8=8C=83=E5=9B=B4=EF=BC=8C=E5=B0=86=E5=9C=A8=E5=BD=93=E5=
=89=8D=E6=A0=91=E7=9A=84=EF=BC=88=20
<CODE>this</CODE>=E5=B0=86=E6=98=AF=E6=A0=91=E7=9A=84=E5=AE=9E=E4=BE=8B=EF=
=BC=89=EF=BC=8C=E5=B9=B6=E8=8E=B7=E5=8F=96=E8=8A=82=E7=82=B9=E5=8D=B3=E5=B0=
=86paramater=E5=BC=80=E6=94=BE=EF=BC=8CA=EF=BC=88=E6=88=96<CODE>-1</CODE>=
=E5=88=9D=E5=A7=8B=E8=B4=9F=E8=BD=BD=EF=BC=89=E3=80=82</SPAN>=20
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Whatever you=20
return in the <CODE>data</CODE> function will be sent to the server as =
data (so=20
for example you can send the node's=20
ID).</SPAN>=E6=97=A0=E8=AE=BA=E4=BD=A0=E8=BF=94=E5=9B=9E=E7=9A=84<CODE>da=
ta</CODE>=E5=8A=9F=E8=83=BD=E5=B0=86=E6=95=B0=E6=8D=AE=E5=8F=91=E9=80=81=E5=
=88=B0=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84=EF=BC=88=E6=89=80=E4=BB=A5=E4=BE=
=8B=E5=A6=82=E4=BD=A0=E5=8F=AF=E4=BB=A5=E5=8F=91=E9=80=81=E8=8A=82=E7=82=B9=
=E7=9A=84ID=EF=BC=89=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>You =
can set the=20
<CODE>url</CODE> option to a function, that will be executed in the =
current=20
tree's scope ( <CODE>this</CODE> will be the tree instance) and gets the =
node=20
about to be open as a paramater (or <CODE>-1</CODE> for initial=20
load).</SPAN>=E6=82=A8=E5=8F=AF=E4=BB=A5=E8=AE=BE=E5=AE=9A<CODE>url</CODE=
>=E7=9A=84=E5=8A=9F=E8=83=BD=E9=80=89=E9=A1=B9=EF=BC=8C=E4=B8=80=EF=BC=8C=
=E6=89=A7=E8=A1=8C=E8=8C=83=E5=9B=B4=EF=BC=8C=E5=B0=86=E5=9C=A8=E5=BD=93=E5=
=89=8D=E6=A0=91=E7=9A=84=EF=BC=88=20
<CODE>this</CODE>=E5=B0=86=E6=98=AF=E6=A0=91=E7=9A=84=E5=AE=9E=E4=BE=8B=EF=
=BC=89=EF=BC=8C=E5=B9=B6=E8=8E=B7=E5=8F=96=E8=8A=82=E7=82=B9=E5=8D=B3=E5=B0=
=86paramater=E5=BC=80=E6=94=BE=EF=BC=8CA=EF=BC=88=E6=88=96<CODE>-1</CODE>=
=E5=88=9D=E5=A7=8B=E8=B4=9F=E8=BD=BD=EF=BC=89=E3=80=82</SPAN>=20
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Whatever you=20
return in the <CODE>url</CODE> function will be used as the ajax URL (so =
that=20
you can accomodate pretty paths such as=20
/get_children/node_2).</SPAN>=E6=97=A0=E8=AE=BA=E4=BD=A0=E5=9C=A8=E8=BF=94=
=E5=9B=9E<CODE>url</CODE>=E7=9A=84=E5=8A=9F=E8=83=BD=E5=B0=86=E8=A2=AB=E7=
=94=A8=E6=9D=A5=E4=BD=9C=E4=B8=BAAjax=E7=BD=91=E5=9D=80=EF=BC=88=E8=BF=99=
=E6=A0=B7=E5=B0=B1=E5=8F=AF=E4=BB=A5=E5=AE=B9=E7=BA=B3/=20
get_children/node_2=E6=BC=82=E4=BA=AE=E7=9A=84=E8=B7=AF=E5=BE=84=E5=A6=82=
=EF=BC=89=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The=20
<CODE>error</CODE> and <CODE>success</CODE> functions (if present) also =
fire in=20
the context of the tree, and if you return a value in the =
<CODE>success</CODE>=20
function it will be used to populate the tree - this can be useful if =
you want=20
to somehow change what the server returned on the client side before it =
is=20
displayed in the tree (for example some .NET json implementations =
require this=20
to work: <CODE>"success" : function (data) { return data.d; }</CODE>=20
.</SPAN>=E7=9A=84<CODE>error</CODE>=E5=92=8C<CODE>success</CODE>=E5=8A=9F=
=E8=83=BD=EF=BC=88=E5=A6=82=E6=9E=9C=E6=9C=89=E7=9A=84=E8=AF=9D=EF=BC=89=E4=
=B9=9F=E7=81=AB=E5=9C=A8=E6=A0=91=E7=9A=84=E8=83=8C=E6=99=AF=E4=B8=8B=EF=BC=
=8C=E5=A6=82=E6=9E=9C=E4=BD=A0=E5=9C=A8=E8=BF=94=E5=9B=9E=E5=80=BC<CODE>s=
uccess</CODE>=E5=87=BD=E6=95=B0=E4=BC=9A=E8=A2=AB=E7=94=A8=E6=9D=A5=E5=A1=
=AB=E5=85=85=E6=A0=91-=E8=BF=99=E5=8F=AF=E8=83=BD=E6=98=AF=E6=9C=89=E7=94=
=A8=E7=9A=84=EF=BC=8C=E5=A6=82=E6=9E=9C=E4=BD=A0=E6=83=B3=E4=BB=A5=E6=9F=90=
=E7=A7=8D=E6=96=B9=E5=BC=8F=E6=94=B9=E5=8F=98=E4=BB=80=E4=B9=88=E6=9C=8D=E5=
=8A=A1=E5=99=A8=E5=9C=A8=E5=AE=A2=E6=88=B7=E7=AB=AF=E4=B9=8B=E5=89=8D=EF=BC=
=8C=E5=9C=A8=E6=A0=91=E4=B8=AD=E6=98=BE=E7=A4=BA=E7=9A=84=E5=B7=A5=E4=BD=9C=
=EF=BC=88=E4=BE=8B=E5=A6=82=E4=B8=80=E4=BA=9B=E4=BA=BA=E5=9B=9E=E5=9B=BD=E3=
=80=82NET=E7=9A=84JSON=E7=9A=84=E5=AE=9E=E7=8E=B0=E9=9C=80=E8=A6=81=E6=AD=
=A4=EF=BC=9A=20
<CODE>"success" : function (data) { return data.d; }</CODE></SPAN> </P>
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>correct_state</SPAN> correct_state</SPAN> </H3>
<P class=3Dmeta><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>A=20
Boolean.</SPAN>=E4=B8=80=E4=B8=AA=E5=B8=83=E5=B0=94=E5=80=BC=E3=80=82</SP=
AN> <SPAN onmouseover=3D_tipon(this)=20
onmouseout=3D_tipoff()><SPAN style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Default is <CODE>true</CODE> =
.</SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>true</CODE>=20
=E3=80=82</SPAN> </P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>If =
this option is=20
set to <CODE>true</CODE> if an AJAX returns an empty result, the node =
that was=20
about to be opened will be converted to a leaf node (the open icon will =
no=20
longer be =
displayed).</SPAN>=E5=A6=82=E6=9E=9C=E8=BF=99=E4=B8=AA=E9=80=89=E9=A1=B9=E8=
=AE=BE=E7=BD=AE=E4=B8=BA<CODE>true</CODE>=20
=EF=BC=8C=E5=A6=82=E6=9E=9C=E4=B8=80=E4=B8=AAAJAX=E8=BF=94=E5=9B=9E=E4=B8=
=80=E4=B8=AA=E7=A9=BA=E7=9A=84=E7=BB=93=E6=9E=9C=EF=BC=8C=E8=AF=A5=E8=8A=82=
=E7=82=B9=E5=8D=B3=E5=B0=86=E8=A2=AB=E6=89=93=E5=BC=80=E5=B0=86=E8=A2=AB=E8=
=BD=AC=E6=8D=A2=E6=88=90=E4=B8=80=E4=B8=AA=E5=8F=B6=E5=AD=90=E8=8A=82=E7=82=
=B9=EF=BC=88=E6=89=93=E5=BC=80=E5=9B=BE=E6=A0=87=E5=B0=86=E4=B8=8D=E5=86=8D=
=E6=98=BE=E7=A4=BA=EF=BC=89=E3=80=82</SPAN> </P>
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>progressive_render</SPAN> =
progressive_render</SPAN> </H3>
<P class=3Dmeta><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>A=20
Boolean.</SPAN>=E4=B8=80=E4=B8=AA=E5=B8=83=E5=B0=94=E5=80=BC=E3=80=82</SP=
AN> <SPAN onmouseover=3D_tipon(this)=20
onmouseout=3D_tipoff()><SPAN style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Default is <CODE>false</CODE>=20
.</SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>false</CODE> =E3=80=82</SPAN> =
</P>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>If =
this option is=20
set to <CODE>true</CODE> only the visible (open nodes) parts of the =
returned=20
JSON are converted to DOM nodes, any hidden parts are saved away and =
parsed=20
ondemand (when a node becomes=20
visible).</SPAN>=E5=A6=82=E6=9E=9C=E8=BF=99=E4=B8=AA=E9=80=89=E9=A1=B9=E8=
=AE=BE=E7=BD=AE=E4=B8=BA<CODE>true</CODE>=E5=8F=AA=E6=9C=89=E5=8F=AF=E8=A7=
=81=E7=9A=84=EF=BC=88=E5=BC=80=E6=94=BE=E8=8A=82=E7=82=B9=EF=BC=89=E9=83=A8=
=E5=88=86=E8=BF=94=E5=9B=9E=E7=9A=84JSON=E8=BD=AC=E6=8D=A2=E4=B8=BADOM=E8=
=8A=82=E7=82=B9=EF=BC=8C=E4=BB=BB=E4=BD=95=E9=9A=90=E8=94=BD=E9=83=A8=E4=BD=
=8D=E4=BF=9D=E5=AD=98=E5=B9=B6=E8=A7=A3=E6=9E=90=E4=BA=86=E6=8C=89=E9=9C=80=
=EF=BC=88=E5=BD=93=E4=B8=80=E4=B8=AA=E8=8A=82=E7=82=B9=E6=88=90=E4=B8=BA=E5=
=8F=AF=E8=A7=81=E7=9A=84=EF=BC=89=E3=80=82</SPAN>=20
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>This =
is useful=20
when you have a large nested tree which would result in a heavy=20
DOM.</SPAN>=E8=BF=99=E6=98=AF=E6=9C=89=E7=94=A8=E7=9A=84=E5=BD=93=E4=BD=A0=
=E6=9C=89=E4=B8=80=E4=B8=AA=E5=A4=A7=E5=B7=A2=E6=A0=91=EF=BC=8C=E4=BC=9A=E5=
=AF=BC=E8=87=B4=E6=B2=89=E9=87=8D=E7=9A=84DOM=E3=80=82</SPAN> </P>
<P class=3Dnote><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text><STRONG>NOTE:</STRONG></SPAN> =
<STRONG>=E6=B3=A8=E6=84=8F=EF=BC=9A</STRONG></SPAN>=20
<BR><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>If =
both=20
<CODE>data</CODE> and <CODE>ajax</CODE> are set the initial tree is =
rendered=20
from the <CODE>data</CODE>=20
string.</SPAN>=E5=A6=82=E6=9E=9C=E8=BF=99=E4=B8=A4=E4=B8=AA<CODE>data</CO=
DE>=E4=B8=8E<CODE>ajax</CODE>=E8=AE=BE=E7=BD=AE=E5=88=9D=E5=A7=8B=E6=A0=91=
=E5=91=88=E7=8E=B0=E7=9A=84<CODE>data</CODE>=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=
=80=82</SPAN>=20
<SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>When =
opening a=20
closed node (that has no loaded children) an AJAX request is=20
made.</SPAN>=E5=BD=93=E6=89=93=E5=BC=80=E4=B8=80=E4=B8=AA=E5=B0=81=E9=97=AD=
=E7=9A=84=E8=8A=82=E7=82=B9=EF=BC=88=E5=8D=B3=E6=B2=A1=E6=9C=89=E5=8A=A0=E8=
=BD=BD=E5=AD=90=E5=A5=B3=EF=BC=89=E4=B8=80=E4=B8=AAAJAX=E8=AF=B7=E6=B1=82=
=E3=80=82</SPAN> </P></DIV>
<H2 id=3Ddemos><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>Demos</SPAN>=E6=BC=94=E7=A4=BA</SPAN> </H2>
<DIV class=3Dpanel>
<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Using =
the data=20
config =
option</SPAN>=E4=BD=BF=E7=94=A8=E6=95=B0=E6=8D=AE=E9=85=8D=E7=BD=AE=E9=80=
=89=E9=A1=B9</SPAN> </H3>
<DIV id=3Ddemo1 class=3Ddemo></DIV>
<SCRIPT class=3Dsource type=3Dtext/javascript>
$(function () {
	$("#demo1").jstree({=20
		"json_data" : {
			"data" : [
				{=20
					"data" : "A node",=20
					"children" : [ "Child 1", "Child 2" ]
				},
				{=20
					"attr" : { "id" : "li.node.id" },=20
					"data" : {=20
						"title" : "Long format demo",=20
						"attr" : { "href" : "#" }=20
					}=20
				}
			]
		},
		"plugins" : [ "themes", "json_data" ]
	});
});
</SCRIPT>

<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Using =
the ajax=20
config =
option</SPAN>=E4=BD=BF=E7=94=A8Ajax=E9=85=8D=E7=BD=AE=E9=80=89=E9=A1=B9</=
SPAN> </H3>
<DIV id=3Ddemo2 class=3Ddemo></DIV>
<SCRIPT class=3Dsource type=3Dtext/javascript>
$(function () {
	$("#demo2").jstree({=20
		"json_data" : {
			"ajax" : {
				"url" : "/static/v.1.0rc2/_docs/_json_data.json",
				"data" : function (n) {=20
					return { id : n.attr ? n.attr("id") : 0 };=20
				}
			}
		},
		"plugins" : [ "themes", "json_data" ]
	});
});
</SCRIPT>

<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Using =
the=20
progressive render config =
option</SPAN>=E4=BD=BF=E7=94=A8=E6=B8=90=E8=BF=9B=E6=B8=B2=E6=9F=93=E9=85=
=8D=E7=BD=AE=E9=80=89=E9=A1=B9</SPAN> </H3>
<DIV id=3Ddemo3 class=3Ddemo></DIV>
<SCRIPT class=3Dsource type=3Dtext/javascript>
$(function () {
	$("#demo3").jstree({=20
		"json_data" : {
			"data" : [
				{=20
					"data" : "A node",=20
					"children" : [ "Child 1", "Child 2" ]
				},
				{=20
					"attr" : { "id" : "li.node.id" },=20
					"data" : {=20
						"title" : "Long format demo",=20
						"attr" : { "href" : "#" }=20
					}=20
				}
			],
			"progressive_render" : true
		},
		"plugins" : [ "themes", "json_data" ]
	});
});
</SCRIPT>

<H3><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Using =
both the=20
data &amp; ajax config =
options</SPAN>=E5=90=8C=E6=97=B6=E4=BD=BF=E7=94=A8=E6=95=B0=E6=8D=AE=E5=92=
=8CAjax=E7=9A=84=E9=85=8D=E7=BD=AE=E9=80=89=E9=A1=B9</SPAN> </H3>
<DIV id=3Ddemo4 class=3Ddemo></DIV>
<SCRIPT class=3Dsource type=3Dtext/javascript>
$(function () {
	$("#demo4").jstree({=20
		"json_data" : {
			"data" : [
				{=20
					"data" : "A node",=20
					"state" : "closed"
				},
				{=20
					"attr" : { "id" : "li.node.id" },=20
					"data" : {=20
						"title" : "Long format demo",=20
						"attr" : { "href" : "#" }=20
					}=20
				}
			],
			"ajax" : { "url" : "/static/v.1.0rc2/_docs/_json_data.json" }
		},
		"plugins" : [ "themes", "json_data" ]
	});
});
</SCRIPT>
</DIV>
<H2 id=3Dapi><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr"=20
class=3Dgoogle-src-text>API</SPAN>=E7=A9=BA=E6=B0=94=E6=B1=A1=E6=9F=93=E6=
=8C=87=E6=95=B0</SPAN> </H2>
<DIV class=3D"panel api">
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Both =
dummy=20
functions - <CODE>_is_loaded</CODE> and <CODE>load_node</CODE> are=20
overwritten.</SPAN>=E8=BF=99=E4=B8=A4=E4=B8=AA=E8=99=9A=E6=8B=9F=E5=8A=9F=
=E8=83=BD-=20
<CODE>_is_loaded</CODE>=E5=92=8C<CODE>load_node</CODE>=E5=B0=86=E8=A2=AB=E8=
=A6=86=E7=9B=96=E3=80=82</SPAN> </P>
<H3 id=3Dload_node_json><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>.load_node_json (=20
node , success_callback , error_callback )</SPAN>=20
=E3=80=82load_node_json=EF=BC=88=E8=8A=82=E7=82=B9=EF=BC=8Csuccess_callba=
ck=EF=BC=8Cerror_callback=EF=BC=89</SPAN> </H3>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>This =
function is=20
called instead of <CODE>load_node</CODE> =
.</SPAN>=E8=B0=83=E7=94=A8=E6=AD=A4=E5=87=BD=E6=95=B0=EF=BC=8C=E8=80=8C=E4=
=B8=8D=E6=98=AF<CODE>load_node</CODE>=20
=E3=80=82</SPAN> </P>
<UL class=3Darguments>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>mixed</CODE> <STRONG>node</STRONG></SPAN> <CODE =
class=3Dtp>mixed</CODE>=20
  <STRONG>=E8=8A=82=E7=82=B9</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>This can be a=20
  DOM node, jQuery node or selector pointing to an element you want=20
  =
loaded.</SPAN>=E8=BF=99=E5=8F=AF=E4=BB=A5=E6=98=AF=E4=B8=80=E4=B8=AADOM=E8=
=8A=82=E7=82=B9=EF=BC=8CjQuery=E7=9A=84=E8=8A=82=E7=82=B9=E6=88=96=E9=80=89=
=E6=8B=A9=E6=8C=87=E5=90=91=E4=B8=80=E4=B8=AA=E4=BD=A0=E6=83=B3=E5=8A=A0=E8=
=BD=BD=E7=9A=84=E5=85=83=E7=B4=A0=E3=80=82</SPAN> <SPAN=20
  onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Use =

  <CODE>-1</CODE> for root =
nodes.</SPAN>=E4=BD=BF=E7=94=A8<CODE>-1</CODE>=E4=B8=BA=E6=A0=B9=E8=8A=82=
=E7=82=B9=E3=80=82</SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>function</CODE> <STRONG>success_callback</STRONG></SPAN> =
<CODE=20
  class=3Dtp>function</CODE> <STRONG>success_callback</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>A =
function to=20
  be executed once the node is loaded successfully - used=20
  =
internally.</SPAN>=E4=B8=80=E4=B8=AA=E5=87=BD=E6=95=B0=E8=A2=AB=E6=89=A7=E8=
=A1=8C=E4=B8=80=E6=AC=A1=E5=8A=A0=E8=BD=BD=E6=88=90=E5=8A=9F=E7=9A=84=E8=8A=
=82=E7=82=B9 - =
=E5=9C=A8=E5=86=85=E9=83=A8=E4=BD=BF=E7=94=A8=E3=80=82</SPAN> <SPAN=20
  onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>You =
should wait=20
  for the <CODE>load_node</CODE>=20
  =
event.</SPAN>=E4=BD=A0=E5=BA=94=E8=AF=A5=E7=AD=89=E5=BE=85<CODE>load_node=
</CODE>=E4=BA=8B=E4=BB=B6=E3=80=82</SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>function</CODE> <STRONG>error_callback</STRONG></SPAN> =
<CODE=20
  class=3Dtp>function</CODE> <STRONG>error_callback</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>A =
function to=20
  be executed if the node is not loaded due to an error - used=20
  =
internally.</SPAN>=E4=B8=80=E4=B8=AA=E8=A6=81=E6=89=A7=E8=A1=8C=E7=9A=84=E5=
=87=BD=E6=95=B0=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=B2=A1=E6=9C=89=E5=8A=A0=E8=BD=
=BD=E8=8A=82=E7=82=B9=E7=94=B1=E4=BA=8E=E9=94=99=E8=AF=AF - =
=E5=86=85=E9=83=A8=E4=BD=BF=E7=94=A8=E3=80=82</SPAN> <SPAN=20
  onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>You =
should wait=20
  for the <CODE>load_node</CODE>=20
  =
event.</SPAN>=E4=BD=A0=E5=BA=94=E8=AF=A5=E7=AD=89=E5=BE=85<CODE>load_node=
</CODE>=E4=BA=8B=E4=BB=B6=E3=80=82</SPAN> </P></LI></UL>
<H3 id=3D_parse_json><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>._parse_json (=20
data , is_callback )</SPAN> =
=E3=80=82_parse_json=EF=BC=88=E6=95=B0=E6=8D=AE=EF=BC=8Cis_callback=EF=BC=
=89</SPAN> </H3>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>This =
function=20
converts JSON nodes to the DOM structure required by=20
jstree.</SPAN>=E8=BF=99=E4=B8=AA=E5=87=BD=E6=95=B0=E8=BD=AC=E6=8D=A2=E5=88=
=B0DOM=E8=8A=82=E7=82=B9=E7=9A=84JSON=E7=BB=93=E6=9E=84=E7=9A=84jstree=E8=
=A6=81=E6=B1=82=E3=80=82</SPAN> <SPAN=20
onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Returns a jQuery=20
object.</SPAN>=E8=BF=94=E5=9B=9E=E4=B8=80=E4=B8=AAjQuery=E5=AF=B9=E8=B1=A1=
=E3=80=82</SPAN> </P>
<UL class=3Darguments>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>mixed</CODE> <STRONG>node</STRONG></SPAN> <CODE =
class=3Dtp>mixed</CODE>=20
  <STRONG>=E8=8A=82=E7=82=B9</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>This can be a=20
  tree node in the JSON format described above, or an array of such JSON =
nodes,=20
  may also be a=20
  =
string.</SPAN>=E8=BF=99=E5=8F=AF=E4=BB=A5=E6=98=AF=E4=B8=80=E4=B8=AA=E6=A0=
=91=E8=8A=82=E7=82=B9=E7=9A=84JSON=E6=A0=BC=E5=BC=8F=E6=89=80=E8=BF=B0=EF=
=BC=8C=E6=88=96=E5=AF=B9=E6=AD=A4=E7=B1=BB=E8=8A=82=E7=82=B9=E7=9A=84=E6=95=
=B0=E7=BB=84=E7=9A=84JSON=EF=BC=8C=E4=B9=9F=E5=8F=AF=E4=BB=A5=E6=98=AF=E4=
=B8=80=E4=B8=AA=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82</SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>bool</CODE> <STRONG>is_callback</STRONG></SPAN> <CODE=20
  class=3Dtp>bool</CODE> <STRONG>is_callback</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Specifies if=20
  the function is called recursively - used ONLY =
internally.</SPAN>=E6=8C=87=E5=AE=9A=E5=A6=82=E6=9E=9C=E5=87=BD=E6=95=B0=E9=
=80=92=E5=BD=92=E8=B0=83=E7=94=A8 -=20
  =E5=8F=AA=E7=94=A8=E5=9C=A8=E5=86=85=E9=83=A8=E3=80=82</SPAN> =
</P></LI></UL>
<H3 id=3Dget_json><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>.get_json ( node=20
, li_attr , a_attr )</SPAN> =
=E3=80=82get_json=EF=BC=88=E8=8A=82=E7=82=B9=EF=BC=8Cli_attr=EF=BC=8Ca_at=
tr=EF=BC=89</SPAN> </H3>
<P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>This =
function=20
returns an array of tree nodes converted back to=20
JSON.</SPAN>=E8=BF=99=E4=B8=AA=E5=87=BD=E6=95=B0=E8=BF=94=E5=9B=9E=E4=B8=80=
=E4=B8=AAJSON=E7=9A=84=E8=BD=AC=E6=8D=A2=E5=9B=9E=E6=A0=91=E8=8A=82=E7=82=
=B9=E7=9A=84=E6=95=B0=E7=BB=84=E3=80=82</SPAN> </P>
<UL class=3Darguments>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>mixed</CODE> <STRONG>node</STRONG></SPAN> <CODE =
class=3Dtp>mixed</CODE>=20
  <STRONG>=E8=8A=82=E7=82=B9</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>This can be a=20
  DOM node, jQuery node or selector pointing to an element you want=20
  =
returned.</SPAN>=E8=BF=99=E5=8F=AF=E4=BB=A5=E6=98=AF=E4=B8=80=E4=B8=AADOM=
=E8=8A=82=E7=82=B9=EF=BC=8CjQuery=E7=9A=84=E8=8A=82=E7=82=B9=E6=88=96=E9=80=
=89=E6=8B=A9=E6=8C=87=E5=90=91=E4=B8=80=E4=B8=AA=E4=BD=A0=E6=83=B3=E8=BF=94=
=E5=9B=9E=E7=9A=84=E5=85=83=E7=B4=A0=E3=80=82</SPAN> <SPAN=20
  onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>Use =

  <CODE>-1</CODE> or omit to get the whole=20
  =
tree.</SPAN>=E4=BD=BF=E7=94=A8<CODE>-1</CODE>=E6=88=96=E7=9C=81=E7=95=A5=E4=
=BA=86=E8=A7=A3=E6=95=B4=E4=B8=AA=E6=A0=91=E3=80=82</SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>array</CODE> <STRONG>li_attr</STRONG></SPAN> <CODE=20
  class=3Dtp>array</CODE> <STRONG>li_attr</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The =
attributes=20
  to collect from the <CODE>LI</CODE>=20
  =
node.</SPAN>=E6=94=B6=E9=9B=86=E7=9A=84=E5=B1=9E=E6=80=A7=E4=BB=8E<CODE>L=
I</CODE>=E8=8A=82=E7=82=B9=E3=80=82</SPAN> <SPAN =
onmouseover=3D_tipon(this)=20
  onmouseout=3D_tipoff()><SPAN style=3D"TEXT-ALIGN: left; DIRECTION: =
ltr"=20
  class=3Dgoogle-src-text>Defaults to <CODE>[ "id" , "class"=20
  ]</CODE></SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>[ "id" , "class" =
]</CODE></SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>array</CODE> <STRONG>a_attr</STRONG></SPAN> <CODE=20
  class=3Dtp>array</CODE> <STRONG>a_attr</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text>The =
attributes=20
  to collect from the <CODE>A</CODE> =
node.</SPAN>=E6=94=B6=E9=9B=86=E7=9A=84=E5=B1=9E=E6=80=A7=E7=9A=84<CODE>A=
</CODE>=E8=8A=82=E7=82=B9=E3=80=82</SPAN>=20
  <SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Defaults to=20
  <CODE>[ ]</CODE></SPAN>=E9=BB=98=E8=AE=A4=E4=B8=BA<CODE>[ =
]</CODE></SPAN> </P></LI>
  <LI><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text><CODE=20
  class=3Dtp>boolean</CODE> <STRONG>is_callback</STRONG></SPAN> <CODE=20
  class=3Dtp>boolean</CODE> <STRONG>is_callback</STRONG></SPAN>=20
  <P><SPAN onmouseover=3D_tipon(this) onmouseout=3D_tipoff()><SPAN=20
  style=3D"TEXT-ALIGN: left; DIRECTION: ltr" =
class=3Dgoogle-src-text>Used=20
  =
internally.</SPAN>=E5=9C=A8=E5=86=85=E9=83=A8=E4=BD=BF=E7=94=A8=E3=80=82<=
/SPAN> </P></LI></UL></DIV></DIV>
<DIV=20
style=3D"BORDER-BOTTOM: white 40px solid; TEXT-ALIGN: center; =
MARGIN-TOP: 2em">
<SCRIPT type=3Dtext/javascript>google_ad_client =3D =
"pub-3390774673776502";/* 728x90, created 9/28/09 */google_ad_slot =3D =
"0034777413";google_ad_width =3D 728;google_ad_height =3D 90;</SCRIPT>

<SCRIPT type=3Dtext/javascript src=3D""></SCRIPT>
</DIV>
<DIV id=3Dfooter><SPAN onmouseover=3D_tipon(this) =
onmouseout=3D_tipoff()><SPAN=20
style=3D"TEXT-ALIGN: left; DIRECTION: ltr" class=3Dgoogle-src-text><A =
class=3Dsmall=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://jigsaw.w3.org/css-validator/check/=
referer&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhnZF3UL1gv-0od=
oDWY5dPs14qkrw"=20
rel=3Dnofollow>valid CSS</A> <A class=3Dsmall=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://validator.w3.org/check%3Furi%3Dref=
erer&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhkn3l-LtTw8c6O2AR=
21wuihDVZnQ"=20
rel=3Dnofollow>valid XHTML</A> <SPAN>Created by <A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://vakata.com/&amp;rurl=3Dtranslate.g=
oogle.com.hk&amp;usg=3DALkJrhjObo2Krbrqs773vCO_qstFdch1ig">Ivan=20
Bozhanov</A></SPAN></SPAN> <A class=3Dsmall=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://jigsaw.w3.org/css-validator/check/=
referer&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhnZF3UL1gv-0od=
oDWY5dPs14qkrw"=20
rel=3Dnofollow>=E6=9C=89=E6=95=88=E7=9A=84CSS</A> <A class=3Dsmall=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://validator.w3.org/check%3Furi%3Dref=
erer&amp;rurl=3Dtranslate.google.com.hk&amp;usg=3DALkJrhhkn3l-LtTw8c6O2AR=
21wuihDVZnQ"=20
rel=3Dnofollow>=E6=9C=89=E6=95=88=E7=9A=84XHTML</A> =
<SPAN>=E5=88=9B=E5=BB=BA=E4=BA=BA<A=20
href=3D"http://translate.googleusercontent.com/translate_c?hl=3Dzh-CN&amp=
;sl=3Den&amp;tl=3Dzh-CN&amp;u=3Dhttp://vakata.com/&amp;rurl=3Dtranslate.g=
oogle.com.hk&amp;usg=3DALkJrhjObo2Krbrqs773vCO_qstFdch1ig">=E4=BC=8A=E4=B8=
=87Bozhanov</A></SPAN></SPAN>=20
</DIV></DIV>
<SCRIPT type=3Dtext/javascript>
	var _gaq =3D _gaq || [];
	_gaq.push(['_setAccount', 'UA-263640-6']);
	_gaq.push(['_setDomainName', 'none']);
	_gaq.push(['_trackPageview']);
	(function() {
		var ga =3D document.createElement('script');
		ga.src =3D ('https:' =3D=3D document.location.protocol ? 'https://ssl' =
: 'http://www') + '.google-analytics.com/ga.js';
		ga.setAttribute('async', 'true');
		document.documentElement.firstChild.appendChild(ga);
	})();
	</SCRIPT>

<SCRIPT>_addload(function(){_setupIW();_csi('en','zh-CN','http://www.jstr=
ee.com/documentation/json_data');});</SCRIPT>
</BODY></HTML>

------=_NextPart_000_0070_01CB9893.B382CF60--
